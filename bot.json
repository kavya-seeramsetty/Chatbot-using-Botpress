{
  "version": "1.12",
  "settings": {
    "defaultLanguage": "en",
    "languages": [
      "en"
    ],
    "description": "",
    "id": "f0f1b32b-a6a6-4b94-a6ec-074b8a8d0732",
    "inactivityTimeout": 30,
    "botVariables": [],
    "userVariables": [
      {
        "id": "var-4c79878aa8",
        "type": "string",
        "name": "name",
        "description": "",
        "scope": "user",
        "secret": false,
        "defaultValue": ""
      },
      {
        "id": "var-ad18699388",
        "type": "string",
        "name": "email",
        "description": "",
        "scope": "user",
        "secret": false,
        "defaultValue": ""
      }
    ],
    "nodeRepetitionLimit": 3,
    "configVariables": {},
    "cognitiveConfigs": {
      "openAi": {}
    },
    "useClient": true
  },
  "flows": [
    {
      "id": "wf-error",
      "name": "Error",
      "startNode": "nd-98dc0bcc87",
      "variables": [],
      "links": [
        {
          "id": "edg-1cb5862648",
          "source": "nd-98dc0bcc87",
          "sourcePort": "trs-02c7129430",
          "target": "nd-58fca56e01"
        },
        {
          "id": "edg-1c28c96d6a",
          "source": "nd-58fca56e01",
          "sourcePort": "nd-58fca56e01",
          "target": "nd-e05f59dd66"
        }
      ],
      "nodes": [
        {
          "comment": "<p><strong><span style=\"font-size: 18px\">‚õîÔ∏è When something goes wrong</span></strong></p><p><br>This workflow is executed when there's an <strong>unexpected error</strong> in one of the other workflows.</p><p></p><p>You can use this to inform the user of the situation before ending the conversation.</p>",
          "type": "comment",
          "id": "nd-8ff3d7d295",
          "name": "Comment1",
          "deletable": true,
          "instructions": [],
          "height": 148,
          "width": 401,
          "x": 90,
          "y": -45
        },
        {
          "instructions": [
            {
              "id": "ins-2762f70004",
              "type": "content",
              "content": {
                "type": "text",
                "text": {
                  "staticValue": "Sorry, an error occurred. Please try again later",
                  "dynamicValue": "",
                  "valueType": "static"
                },
                "typing": {
                  "valueType": "static",
                  "staticValue": true
                }
              },
              "nodeId": "nd-58fca56e01",
              "transitions": []
            }
          ],
          "defaultTransition": {
            "targetNodeId": "nd-e05f59dd66"
          },
          "type": "standard",
          "id": "nd-58fca56e01",
          "name": "Handler",
          "deletable": true,
          "x": 450,
          "y": 120
        },
        {
          "id": "nd-98dc0bcc87",
          "name": "On_Error",
          "type": "entry",
          "deletable": false,
          "variables": [],
          "instructions": [
            {
              "id": "trs-02c7129430",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "true"
              },
              "destination": {
                "node": "nd-58fca56e01"
              },
              "transitions": [],
              "nodeId": "nd-98dc0bcc87"
            }
          ],
          "x": 90,
          "y": 120
        },
        {
          "id": "nd-e05f59dd66",
          "name": "End",
          "type": "end",
          "variables": [],
          "deletable": false,
          "instructions": [
            {
              "id": "trs-945140a646",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "true"
              },
              "destination": {
                "node": "END"
              },
              "transitions": [],
              "nodeId": "nd-e05f59dd66"
            }
          ],
          "x": 810,
          "y": 120
        }
      ]
    },
    {
      "id": "wf-timeout",
      "name": "Timeout",
      "startNode": "nd-9f7f3268ac",
      "variables": [],
      "links": [
        {
          "id": "edg-b0d2adcd13",
          "source": "nd-e6c012a652",
          "sourcePort": "nd-e6c012a652",
          "target": "nd-199fdcf439"
        },
        {
          "id": "edg-6d17a0591b",
          "source": "nd-9f7f3268ac",
          "sourcePort": "trs-0c7a9a0003",
          "target": "nd-e6c012a652"
        }
      ],
      "nodes": [
        {
          "instructions": [],
          "defaultTransition": {
            "targetNodeId": "nd-199fdcf439"
          },
          "type": "standard",
          "id": "nd-e6c012a652",
          "name": "Handler",
          "deletable": true,
          "x": 435,
          "y": 105
        },
        {
          "comment": "<p><strong><span style=\"font-size: 18px\">‚åõÔ∏è When conversation times out</span></strong></p><p><br>This workflow is executed when the conversation <strong>times out</strong> before it had time to flow to an <strong>End Node</strong>.</p><p></p><p>The <strong>Timeout Delay</strong> is configurable in the <strong>Chatbot Settings.</strong></p><p></p><p>You can use this to inform the user of the situation before ending the conversation.</p>",
          "type": "comment",
          "id": "nd-441efa6c42",
          "name": "Comment1",
          "deletable": true,
          "instructions": [],
          "height": 173,
          "width": 401,
          "x": 105,
          "y": -90
        },
        {
          "id": "nd-9f7f3268ac",
          "name": "On_Timeout",
          "type": "entry",
          "deletable": false,
          "variables": [],
          "instructions": [
            {
              "id": "trs-0c7a9a0003",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "true"
              },
              "destination": {
                "node": "nd-e6c012a652"
              },
              "transitions": []
            }
          ],
          "x": 100,
          "y": 100
        },
        {
          "id": "nd-199fdcf439",
          "name": "End",
          "type": "end",
          "variables": [],
          "deletable": false,
          "instructions": [
            {
              "id": "trs-bf76943d55",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "true"
              },
              "destination": {
                "node": "END"
              },
              "transitions": []
            }
          ],
          "x": 795,
          "y": 105
        }
      ]
    },
    {
      "id": "wf-conversation-end",
      "name": "Conversation End",
      "startNode": "nd-c0d3bd2c92",
      "variables": [],
      "links": [
        {
          "id": "edg-3cb8028ff6",
          "source": "nd-c0d3bd2c92",
          "sourcePort": "trs-92c6f93b0c",
          "target": "nd-2db7499cc6"
        },
        {
          "id": "edg-8a88f687a0",
          "source": "nd-2db7499cc6",
          "sourcePort": "nd-2db7499cc6",
          "target": "nd-d0c2a6be81"
        }
      ],
      "nodes": [
        {
          "instructions": [],
          "defaultTransition": {
            "targetNodeId": "nd-d0c2a6be81"
          },
          "type": "standard",
          "id": "nd-2db7499cc6",
          "name": "Handler",
          "deletable": true,
          "x": 420,
          "y": 105
        },
        {
          "comment": "<p><strong><span style=\"font-size: 18px\">üëã Before Conversation Ends</span></strong></p><p><br>This workflow is executed when right before the conversation <strong>Ends Explicitly.</strong></p><p></p><p>An <strong>Explicit Ending</strong> happens when a workflow transitions on an <strong>End Node</strong>.</p>",
          "type": "comment",
          "id": "nd-6d5d3f41dd",
          "name": "Comment1",
          "deletable": true,
          "instructions": [],
          "height": 148,
          "width": 461,
          "x": 105,
          "y": -45
        },
        {
          "id": "nd-c0d3bd2c92",
          "name": "On_Explicit_Ending",
          "type": "entry",
          "deletable": false,
          "variables": [],
          "instructions": [
            {
              "id": "trs-92c6f93b0c",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "true"
              },
              "destination": {
                "node": "nd-2db7499cc6"
              },
              "transitions": [],
              "nodeId": "nd-c0d3bd2c92"
            }
          ],
          "x": 100,
          "y": 100
        },
        {
          "id": "nd-d0c2a6be81",
          "name": "End",
          "type": "end",
          "variables": [],
          "deletable": false,
          "instructions": [
            {
              "id": "trs-7004dbb2b6",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "true"
              },
              "destination": {
                "node": "END"
              },
              "transitions": [],
              "nodeId": "nd-d0c2a6be81"
            }
          ],
          "x": 780,
          "y": 105
        }
      ]
    },
    {
      "topicId": "tpc-global",
      "id": "wf-main",
      "name": "Main",
      "startNode": "nd-2bb9db230d",
      "variables": [
        {
          "id": "var-52d2f2ce90",
          "name": "zapiersuccess",
          "type": "string",
          "description": "",
          "scope": "workflow"
        },
        {
          "id": "var-a1c4142980",
          "name": "botUserResponse",
          "type": "string",
          "description": "",
          "scope": "workflow"
        },
        {
          "defaultValue": "",
          "type": "string",
          "name": "phone",
          "description": "",
          "id": "var-c69e068cf2",
          "scope": "workflow",
          "secret": false
        },
        {
          "id": "var-19f69768e9",
          "name": "user_question",
          "type": "string",
          "description": "",
          "scope": "workflow"
        },
        {
          "defaultValue": "",
          "type": "string",
          "name": "ai_answer",
          "description": "",
          "id": "var-8d15366c1b",
          "scope": "workflow",
          "secret": false
        },
        {
          "id": "var-9a275af52a",
          "name": "user_name",
          "type": "object",
          "description": "",
          "scope": "workflow",
          "typings": "{ first: string; last: string }"
        },
        {
          "id": "var-4ed090b9af",
          "name": "user_email",
          "type": "string",
          "description": "",
          "scope": "workflow"
        },
        {
          "id": "var-c15d6ecd9d",
          "name": "user_phone",
          "type": "string",
          "description": "",
          "scope": "workflow"
        },
        {
          "id": "var-7f87e7a708",
          "name": "question",
          "type": "string",
          "description": "",
          "scope": "workflow"
        },
        {
          "id": "var-399a81b3fe",
          "name": "newslettername",
          "type": "string",
          "description": "",
          "scope": "workflow"
        },
        {
          "id": "var-84726798d8",
          "name": "newsletteremail",
          "type": "string",
          "description": "",
          "scope": "workflow"
        },
        {
          "id": "var-d72fbd14d4",
          "type": "boolean",
          "name": "ZapierSuccessvar",
          "description": "",
          "scope": "workflow",
          "secret": false,
          "defaultValue": false
        },
        {
          "id": "var-dfe29aa44b",
          "type": "string",
          "name": "updatedEmail1",
          "description": "",
          "scope": "workflow",
          "secret": false,
          "defaultValue": ""
        },
        {
          "id": "var-0135899fd2",
          "name": "extractname",
          "type": "string",
          "description": "",
          "scope": "workflow"
        },
        {
          "id": "var-34ba9dfac8",
          "name": "intentvar",
          "type": "string",
          "description": "",
          "scope": "workflow"
        },
        {
          "id": "var-4a4ec2c03c",
          "name": "intentname",
          "type": "string",
          "description": "",
          "scope": "workflow"
        },
        {
          "id": "var-f96e749e36",
          "name": "intentemail",
          "type": "string",
          "description": "",
          "scope": "workflow"
        },
        {
          "defaultValue": "",
          "type": "string",
          "name": "name_imp",
          "description": "",
          "id": "var-90f9b74ab2",
          "scope": "workflow",
          "secret": false
        },
        {
          "defaultValue": "",
          "type": "string",
          "name": "email_imp",
          "description": "",
          "id": "var-120637c360",
          "scope": "workflow",
          "secret": false
        },
        {
          "id": "var-ef768df6c2",
          "name": "listen",
          "type": "string",
          "description": "",
          "scope": "workflow"
        },
        {
          "id": "var-1f186ad0ec",
          "name": "testvar",
          "type": "string",
          "description": "",
          "scope": "workflow"
        }
      ],
      "links": [],
      "nodes": [
        {
          "id": "nd-2bb9db230d",
          "name": "Start",
          "type": "start",
          "deletable": false,
          "instructions": [
            {
              "id": "trs-8b0779edc5",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "true"
              },
              "destination": {
                "node": "nd-0382fa065d"
              },
              "transitions": [],
              "nodeId": "nd-2bb9db230d"
            }
          ],
          "x": -2340,
          "y": -405,
          "kbPriority": {
            "enabled": true,
            "searchScope": "specific",
            "kbs": [
              "kb-2f0a7ea639"
            ]
          }
        },
        {
          "id": "nd-80ac4ff158",
          "name": "End",
          "type": "end",
          "deletable": false,
          "instructions": [
            {
              "id": "trs-0260f5e672",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "true"
              },
              "destination": {},
              "transitions": [],
              "nodeId": "nd-80ac4ff158"
            }
          ],
          "x": 1530,
          "y": 960,
          "defaultTransition": {
            "targetNodeId": null
          }
        },
        {
          "type": "standard",
          "deletable": true,
          "x": 240,
          "y": -285,
          "instructions": [
            {
              "id": "ins-42c8e2c732",
              "category": "Send Messages",
              "type": "content",
              "content": {
                "type": "text",
                "text": {
                  "valueType": "dynamic",
                  "dynamicValue": "That's great to hear :) I am more than happy to assist you!",
                  "staticValue": ""
                },
                "typing": {
                  "valueType": "static",
                  "staticValue": true
                }
              },
              "nodeId": "nd-cf85ce63b8",
              "transitions": []
            },
            {
              "id": "ins-afd4bdca42",
              "category": "Capture Information",
              "type": "capture",
              "entityId": "prompts://SingleChoice/v1",
              "entityName": "Single Choice",
              "kbPriority": {
                "enabled": false,
                "searchScope": "specific",
                "kbs": []
              },
              "nodeId": "nd-cf85ce63b8",
              "question": {
                "staticValue": "",
                "dynamicValue": "Select an industry from the options below to explore the detailed RPA services we offer.",
                "valueType": "dynamic"
              },
              "validation": {
                "validators": []
              },
              "choice": {
                "options": {
                  "valueType": "static",
                  "staticValue": [
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "Food ",
                        "staticValue": null
                      },
                      "value": "Food ",
                      "enabled": true
                    },
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "Procurement ",
                        "staticValue": null
                      },
                      "value": "Procurement ",
                      "enabled": true
                    },
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "HR ",
                        "staticValue": null
                      },
                      "value": "HR ",
                      "enabled": true
                    },
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "E-Commerce ",
                        "staticValue": null
                      },
                      "value": "E-Commerce ",
                      "enabled": true
                    },
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "Finance ",
                        "staticValue": null
                      },
                      "value": "Finance ",
                      "enabled": true
                    },
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "Feedback Process and Automation",
                        "staticValue": null
                      },
                      "value": "Feedback Process and Automation",
                      "enabled": true
                    }
                  ],
                  "dynamicValue": ""
                }
              },
              "retry": {
                "maxRetries": 2,
                "retryMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "dynamic"
                }
              },
              "cancellation": {
                "cancellable": true,
                "confirmCancel": true,
                "confirmCancelMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "handleFailure": false,
              "historyLookback": 0,
              "skipIfAlreadyFilled": false,
              "transitions": [
                {
                  "id": "trs-fab16b2cf1",
                  "type": "transition",
                  "label": "Food ",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=Food "
                  },
                  "destination": {
                    "node": "nd-f82a86d126"
                  }
                },
                {
                  "id": "trs-63a4f403eb",
                  "type": "transition",
                  "label": "Procurement ",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=Procurement "
                  },
                  "destination": {
                    "node": "nd-ba9149c792"
                  }
                },
                {
                  "id": "trs-b234c3ebe5",
                  "type": "transition",
                  "label": "HR ",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=HR "
                  },
                  "destination": {
                    "node": "nd-69fe98ce7d"
                  }
                },
                {
                  "id": "trs-5d9cfc7176",
                  "type": "transition",
                  "label": "E-Commerce ",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=E-Commerce "
                  },
                  "destination": {
                    "node": "nd-0b7134a0cf"
                  }
                },
                {
                  "id": "trs-42910c7b22",
                  "type": "transition",
                  "label": "Finance ",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=Finance "
                  },
                  "destination": {
                    "node": "nd-c64c69488c"
                  }
                },
                {
                  "id": "trs-16aa62463b",
                  "type": "transition",
                  "label": "Feedback Process and Automation",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=Feedback Process and Automation"
                  },
                  "destination": {
                    "node": "nd-62d9767e88"
                  }
                }
              ],
              "prompt": {
                "messages": [
                  {
                    "role": "system",
                    "content": "You are ExtractGPT and your only goal is to generate useful content in JSON format for developers to parse and use. You don't know any other language than JSON."
                  },
                  {
                    "role": "user",
                    "content": "```typescript\n/** The user answer to the question \"Which one would you like? Choices: [ 1) Red Apple, 2) Yellow Apple, 3) Dark Banana ]\" */\ninterface Output = { choice: {{CHOICES_TYPINGS}} }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\nagent: Which one would you like? Choices: [ 1) Red Apple, 2) Yellow Apple, 3) Dark Banana ]\nuser: I will go with the second one please\n\"\"\""
                  },
                  {
                    "role": "assistant",
                    "content": "{\"choice\":\"Yellow Apple\"}"
                  },
                  {
                    "role": "user",
                    "content": "\nNow, forget about the previous transcripts. These were just examples, don't consider those as valid transcripts for this new task.\n\n###\n\nThe current Date is {{CURRENT_DATE_TIME}}.\n\nAt this point of the conversation, I need require the user to fill the output in following JSON output to complete the task.\nIf more than one property, try to extract each of them the best you can.\n\n```typescript\n/** The user answer to the question \"{{QUESTION}}\" */\ninterface Output = { choice: {{CHOICES_TYPINGS}} }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\n{{TRANSCRIPT}}\n\"\"\"\n\nIn the last user message, here are the entities found:\n\"\"\"\nENTITIES_IDENTIFIED\n\"\"\"\n\nI need you to extract from the conversation transcript above the values the user has provided.\nIf the user has not provided the information I need, I need you to set the value of the missing answer properties to null.\nHave some tolerance to typos and variations in how the user selects from the possible values.\n\n\n\nNow, please reply to me with the above JSON output and nothing but JSON.\nYou should not explain your answer and should not talk back to me. Just JSON."
                  }
                ],
                "model": "gpt-3.5-turbo",
                "temperature": 0,
                "signatureVersion": "Jan-2024",
                "signature": "bVu49Pre5q6DHlBFHgwm9WRpKblGPBZEVz9lE1T/kSknjafz8d4zyUGOUmre70ijj2brtSymiTuHw41rgUeoCl/HXkA3kpomvC1RU1QBili6tzgAvH+4CC1PGSL/kP+71QgVkqv73DXrN1UAAH60wru/Oc8nuHvtTKxeoghxZzkmwKpFWq9L8Appklcjf5Pr+4N2Q9JQtxsr4D2+SSc7cCBec71TQVpOxhmPHfxaaKfgzGV4PZbUFI0JZEkmMppHHz+6iTlkoeWG45ukpCwCw7ppjnps4TYI/bR2gWVOyN9J3mVYmZoH7pNY7UWjd/mB+HjubAfZAeNF7FXvVKzcrA=="
              }
            }
          ],
          "defaultTransition": {
            "targetNodeId": null
          },
          "id": "nd-cf85ce63b8",
          "name": "Standard2",
          "agentConfigOverrides": {
            "PersonalityAgent": {
              "active": false,
              "personality": {
                "valueType": "dynamic",
                "dynamicValue": "You are a helping agent to the users visiting the website and help them with answering all questions in a polite and kind way. Moreover add a smile emoji at the end of a greeting message.",
                "staticValue": ""
              }
            }
          }
        },
        {
          "type": "standard",
          "deletable": true,
          "x": 105,
          "y": -30,
          "instructions": [
            {
              "id": "ins-5fc705dba9",
              "category": "Capture Information",
              "type": "capture",
              "entityId": "prompts://MultiChoice/v1",
              "entityName": "Multiple Choice",
              "kbPriority": {
                "enabled": false,
                "searchScope": "specific",
                "kbs": []
              },
              "nodeId": "nd-8bb840145c",
              "question": {
                "staticValue": "",
                "dynamicValue": "Please choose one of the options below to discover more detailed information about the services we provide.",
                "valueType": "dynamic"
              },
              "validation": {
                "validators": []
              },
              "choice": {
                "options": {
                  "valueType": "static",
                  "staticValue": [
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "Robotic Process Automation",
                        "staticValue": null
                      },
                      "value": "Robotic Process Automation",
                      "enabled": true
                    },
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "Mobile and Web Development ",
                        "staticValue": null
                      },
                      "value": "Mobile and Web Development ",
                      "enabled": true
                    },
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "Warehouse technology Solutions",
                        "staticValue": null
                      },
                      "value": "Warehouse technology Solutions",
                      "enabled": true
                    },
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "Microsoft Cloud Solutions",
                        "staticValue": null
                      },
                      "value": "Microsoft Cloud Solutions",
                      "enabled": true
                    },
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "Salesforce CRM Solutions",
                        "staticValue": null
                      },
                      "value": "Salesforce CRM Solutions",
                      "enabled": true
                    }
                  ],
                  "dynamicValue": ""
                }
              },
              "retry": {
                "maxRetries": 2,
                "retryMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "dynamic"
                }
              },
              "cancellation": {
                "cancellable": true,
                "confirmCancel": true,
                "confirmCancelMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "handleFailure": false,
              "historyLookback": 0,
              "skipIfAlreadyFilled": false,
              "transitions": [
                {
                  "id": "trs-f34c2027e2",
                  "type": "transition",
                  "label": "Robotic Process Automation",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=Robotic Process Automation"
                  },
                  "destination": {
                    "node": "nd-a0802b3f52"
                  }
                },
                {
                  "id": "trs-5b4a460907",
                  "type": "transition",
                  "label": "Mobile and Web Development ",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=Mobile and Web Development "
                  },
                  "destination": {
                    "node": "nd-bb7ac6c8b0"
                  }
                },
                {
                  "id": "trs-e98aea2b65",
                  "type": "transition",
                  "label": "Warehouse technology Solutions",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=Warehouse technology Solutions"
                  },
                  "destination": {
                    "node": "nd-82b2e975b2"
                  }
                },
                {
                  "id": "trs-2cc549e80e",
                  "type": "transition",
                  "label": "Microsoft Cloud Solutions",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=Microsoft Cloud Solutions"
                  },
                  "destination": {
                    "node": "nd-e50cf52444"
                  }
                },
                {
                  "id": "trs-5edf8dd519",
                  "type": "transition",
                  "label": "Salesforce CRM Solutions",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=Salesforce CRM Solutions"
                  },
                  "destination": {
                    "node": "nd-a8fb623e7e"
                  }
                }
              ],
              "prompt": {
                "messages": [
                  {
                    "role": "system",
                    "content": "You are ExtractGPT and your only goal is to generate useful content in JSON format for developers to parse and use. You don't know any other language than JSON."
                  },
                  {
                    "role": "user",
                    "content": "```typescript\n/** The user answer to the question \"Which one would you like? Choices: [ 1) Red Apple, 2) Yellow Apple, 3) Dark Banana ]\" */\ninterface Output = { choices: Array<{{CHOICES_TYPINGS}}> }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\nagent: Which one would you like? Choices: [ 1) Red Apple, 2) Yellow Apple, 3) Dark Banana ]\nuser: I will go with the second one and the banana please\n\"\"\""
                  },
                  {
                    "role": "assistant",
                    "content": "{\"choices\":[\"Yellow Apple\",\"Dark Banana\"]}"
                  },
                  {
                    "role": "user",
                    "content": "\nNow, forget about the previous transcripts. These were just examples, don't consider those as valid transcripts for this new task.\n\n###\n\nThe current Date is {{CURRENT_DATE_TIME}}.\n\nAt this point of the conversation, I need require the user to fill the output in following JSON output to complete the task.\nIf more than one property, try to extract each of them the best you can.\n\n```typescript\n/** The user answer to the question \"{{QUESTION}}\" */\ninterface Output = { choices: Array<{{CHOICES_TYPINGS}}> }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\n{{TRANSCRIPT}}\n\"\"\"\n\nIn the last user message, here are the entities found:\n\"\"\"\nENTITIES_IDENTIFIED\n\"\"\"\n\nI need you to extract from the conversation transcript above the values the user has provided.\nIf the user has not provided the information I need, I need you to set the value of the missing answer properties to null.\nHave some tolerance to typos and variations in how the user selects from the possible values.\n\n\n\nNow, please reply to me with the above JSON output and nothing but JSON.\nYou should not explain your answer and should not talk back to me. Just JSON."
                  }
                ],
                "model": "gpt-3.5-turbo",
                "temperature": 0,
                "signatureVersion": "Jan-2024",
                "signature": "hSbVLRZ/6JSGgHAn3FVLlszKfXTtP97MNLVVqMWLOPwPrUBMSYw/wsSE07vPspugeNnqlR+InKv9oKpSS2q6KpT13ez6brbWRc5hMRlSiwgRMrd4AYd72ToN5Jhw574axVG08+xYj3MbKuAcLAmaKKwiJeeqv1iOdBTGf/3zbzxRT9bSC0ohAR74sqC9n5OYxjrd2LtlorBuyBQRywJeukRPk8Q8/PHadU9SFXgfcNxrx8ZZBKKLD9XjMcofihdS3fOaMaDHXJJkhBB73Audmvg8Qa6SbOIWihqGJ+Xa4vLKdtlR5eQxyK0xLZDTNbaiqDzgVb1ZDJXizNB8RYwU9g=="
              }
            }
          ],
          "defaultTransition": {
            "targetNodeId": "nd-f6f6f35b97"
          },
          "id": "nd-8bb840145c",
          "name": "Services_list",
          "agentConfigOverrides": {
            "PersonalityAgent": {
              "active": false,
              "personality": {
                "valueType": "dynamic",
                "dynamicValue": "You are a helping agent to the users visiting the website and help them with answering all questions in a polite and kind way. Moreover add a smile emoji at the end of a greeting message.",
                "staticValue": ""
              }
            }
          }
        },
        {
          "type": "standard",
          "deletable": true,
          "x": 600,
          "y": 255,
          "instructions": [
            {
              "id": "ins-4f8a0b7f22",
              "category": "Capture Information",
              "type": "capture",
              "entityId": "prompts://RawInput/v1",
              "entityName": "Raw Input",
              "kbPriority": {
                "enabled": true,
                "searchScope": "all",
                "kbs": []
              },
              "nodeId": "nd-f6f6f35b97",
              "variableId": "var-a1c4142980",
              "question": {
                "valueType": "dynamic",
                "dynamicValue": "",
                "staticValue": ""
              },
              "validation": {
                "validators": []
              },
              "choice": {
                "options": {
                  "staticValue": [],
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "retry": {
                "maxRetries": 2,
                "retryMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "dynamic"
                }
              },
              "cancellation": {
                "cancellable": true,
                "confirmCancel": true,
                "confirmCancelMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "handleFailure": false,
              "historyLookback": 0,
              "skipIfAlreadyFilled": false,
              "transitions": [],
              "prompt": {
                "messages": [
                  {
                    "role": "system",
                    "content": "You are ExtractGPT and your only goal is to generate useful content in JSON format for developers to parse and use. You don't know any other language than JSON."
                  },
                  {
                    "role": "user",
                    "content": "```typescript\n/** The user answer to the question \"undefined\" */\ninterface Output = { value: any }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\nagent: undefined\nuser: undefined\n\"\"\""
                  },
                  {
                    "role": "assistant",
                    "content": "{}"
                  },
                  {
                    "role": "user",
                    "content": "\nNow, forget about the previous transcripts. These were just examples, don't consider those as valid transcripts for this new task.\n\n###\n\nThe current Date is {{CURRENT_DATE_TIME}}.\n\nAt this point of the conversation, I need require the user to fill the output in following JSON output to complete the task.\nIf more than one property, try to extract each of them the best you can.\n\n```typescript\n/** The user answer to the question \"{{QUESTION}}\" */\ninterface Output = { value: any }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\n{{TRANSCRIPT}}\n\"\"\"\n\nIn the last user message, here are the entities found:\n\"\"\"\nENTITIES_IDENTIFIED\n\"\"\"\n\nI need you to extract from the conversation transcript above the values the user has provided.\nIf the user has not provided the information I need, I need you to set the value of the missing answer properties to null.\nHave some tolerance to typos and variations in how the user selects from the possible values.\n\n\n\nNow, please reply to me with the above JSON output and nothing but JSON.\nYou should not explain your answer and should not talk back to me. Just JSON."
                  }
                ],
                "model": "gpt-3.5-turbo",
                "temperature": 0,
                "signatureVersion": "Jan-2024",
                "signature": "wsDIMaSsJ1YTaWLaNEaV5IgB+C2qyh801nUa4CdCsmubxvThog1rJ7tYXwHKDnA4cpOm6gnznXN6AdKJSoh/tbRxO1abxj04bRbCn9y7BZ8i3qZQl1Le5PIaAmfampxeHFl8IasZNZYi5uWVQnd1IPS3iFv6wYhBGa/EPlz+AagSKdqmn11u/DSAfrYixnA2rW+XEORrVeVMt1P8zFU7ssoTSSNt7LZh1xmH0amoWFad2vSDxu/2eU55NZSGFlB8a1soPEGYq83QN6mHXldjsO1mEV7cHWsSBZPTXG37GipXEbYKe/9sQNwg6mpBLIuvbliiJ9DvjkkSyXQVkVhTyg=="
              }
            },
            {
              "type": "ai",
              "category": "AI",
              "id": "ins-6ceb6b19da",
              "task": {
                "instructions": "Extract the persons name and contact  information from the input and store it in the respective variables",
                "input": "@workflow.botUserResponse\n",
                "outputVariableIds": [
                  "var-120637c360",
                  "var-c69e068cf2",
                  "var-90f9b74ab2"
                ],
                "handleFailure": false,
                "examples": [
                  {
                    "input": "My name is Jerry Jonathon and my phone is +1 123-456-9807 my email is jerry@gmail.com",
                    "output": {
                      "email": " kavyaseeramsetty@gmail.com",
                      "name": "Jerry Jonathon",
                      "phone": "+1 123-456-9807"
                    }
                  }
                ],
                "model": "gpt-3.5-turbo-16k",
                "temperature": 0,
                "version": "1.0"
              },
              "nodeId": "nd-f6f6f35b97",
              "label": "phone, name_imp, email_imp",
              "transitions": [],
              "prompt": {
                "messages": [
                  {
                    "role": "system",
                    "content": "You are a helper assistant at the hands of a chatbot developer using Botpress workflow editor. Your main goal is to generate useful content in JSON format for the developer to use.\nHere are the task instructions provided by the developer:"
                  },
                  {
                    "role": "user",
                    "content": "I have a task for you to complete. Here are the instructions:\nExtract the persons name and contact  information from the input and store it in the respective variables\n--\nThe following is the typescript interface I need as output of the task:\n\n```typescript\ninterface Output = {\n  /**  */\n\"phone\": string\n/**  */\n\"name_imp\": string\n/**  */\n\"email_imp\": string\n}"
                  },
                  {
                    "role": "user",
                    "content": "Here is an example of input I need to process:\nInput:\n\n\"\"\"\nMy name is Jerry Jonathon and my phone is +1 123-456-9807 my email is jerry@gmail.com\n\"\"\"\nI need to generate the following output:\n\n```typescript\nconst output: Output = JSON.parse(<<json_output>>)\n```\n\nYour answer must strictly respect the typescript typings.\nHow would you write <<json_output>> ?\nAnswer with JSON and only JSON. Don't explain your answer, just JSON."
                  },
                  {
                    "role": "assistant",
                    "content": "{\"email\":\" kavyaseeramsetty@gmail.com\",\"name\":\"Jerry Jonathon\",\"phone\":\"+1 123-456-9807\"}"
                  },
                  {
                    "role": "user",
                    "content": "Now, here is the actual input to the task at hand you need to complete:\nInput:\n\"\"\"\n{{TASK_INPUT}}\n\"\"\"\nPlease follow my instructions as is and complete the task by filling the output JSON below with the correct values. Your answer must strictly respect the typescript typings.\nYou don't have to explain your answer and remember I need valid JSON as output.\n\nI need to generate the following output:\n\n```typescript\nconst output: Output = JSON.parse(<<json_output>>)\n```\n\nYour answer must strictly respect the typescript typings.\nHow would you write <<json_output>> ?\nAnswer with JSON and only JSON. Don't explain your answer, just JSON."
                  }
                ],
                "model": "gpt-3.5-turbo-16k",
                "temperature": 0,
                "signatureVersion": "Jan-2024",
                "signature": "RlTPItcRl6YchSwJeYuQGCh1W81zFmbHlJSo7IoMLpE+2QKQpVwpdvOqYsVPkUu8J9DnJB5QcI0vXDDQAZxV/LbjhdpCJT6iEQhwXZNxmpTB+BOwFXSP5ffHPG/zQQns1bNykapvi03wqa+vvAqE3S/evLdtJkRaAdyL/YvIXNupUHP+mDCrAXmGwGRb6N/f/r03J4hbJHvTVHQhs11qwBjtR5Yk3mtMSbCd7rSbEgHC7ISXqu+QrxXjV5wEQ6DMM0S+bCBToG9R8lq2MsNUBVUfoEuwrFhNxLuaf3+dErVSgzwcPjt6tG7bVUAeycS0XGxItG5XvJNxW2OxzMiZHw=="
              }
            },
            {
              "id": "ins-b6f99860a8",
              "category": "Send Messages",
              "type": "content",
              "content": {
                "type": "text",
                "text": {
                  "valueType": "dynamic",
                  "dynamicValue": "Kindly check your provided information\n\nName - @workflow.name_imp\nEmail - @workflow.email_imp\nPhone - @workflow.phone ",
                  "staticValue": ""
                },
                "typing": {
                  "valueType": "static",
                  "staticValue": true
                }
              },
              "nodeId": "nd-f6f6f35b97",
              "transitions": []
            }
          ],
          "defaultTransition": {
            "targetNodeId": "nd-364a03b68a"
          },
          "id": "nd-f6f6f35b97",
          "name": "capture",
          "agentConfigOverrides": {
            "PersonalityAgent": {
              "active": false,
              "personality": {
                "valueType": "dynamic",
                "dynamicValue": "You are a helping agent to the users visiting the website and help them with answering all questions in a polite and kind way. Moreover add a smile emoji at the end of a greeting message.",
                "staticValue": ""
              }
            }
          }
        },
        {
          "type": "standard",
          "deletable": true,
          "x": 570,
          "y": 495,
          "instructions": [
            {
              "id": "ins-91b4e79c4e",
              "type": "action",
              "code": "const webhookUrl = \"https://hooks.zapier.com/hooks/catch/19262308/231rdab/\"\r\nconst payload = {\r\n    name: workflow.name_imp,\r\n    email: workflow.email_imp,\r\n    phone: workflow.phone\r\n}\r\ntry{\r\n  const response = await axios.post(webhookUrl, payload)\r\n  console.log(response.data)\r\n}catch (error) {\r\n  console.log(\"failed\")\r\n}\r\n\r\n\r\n",
              "origin": "builtin",
              "category": "Execute",
              "nodeId": "nd-4e14511117",
              "label": "Send data to Zapier webhook and log response or error.",
              "isCustomLabel": false,
              "transpiledCode": "var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nasync function __ROOT__() {\n  const webhookUrl = \"https://hooks.zapier.com/hooks/catch/19262308/231rdab/\";\n  const payload = {\n    name: workflow.name_imp,\n    email: workflow.email_imp,\n    phone: workflow.phone\n  };\n  try {\n    const response = await axios.post(webhookUrl, payload);\n    console.log(response.data);\n  } catch (error) {\n    console.log(\"failed\");\n  }\n  ;\n}\n__name(__ROOT__, \"__ROOT__\");\n; return await __ROOT__();",
              "transitions": []
            },
            {
              "id": "ins-834ae9deb2",
              "category": "Send Messages",
              "type": "content",
              "content": {
                "type": "text",
                "text": {
                  "valueType": "dynamic",
                  "dynamicValue": "Our team will be in touch with you shortly. Thank you for your patience.",
                  "staticValue": ""
                },
                "typing": {
                  "valueType": "static",
                  "staticValue": true
                }
              },
              "nodeId": "nd-4e14511117",
              "transitions": []
            },
            {
              "id": "ins-46b57b0335",
              "category": "Capture Information",
              "type": "capture",
              "entityId": "prompts://RawInput/v1",
              "entityName": "Raw Input",
              "kbPriority": {
                "enabled": true,
                "searchScope": "all",
                "kbs": []
              },
              "nodeId": "nd-4e14511117",
              "question": {
                "staticValue": "",
                "dynamicValue": "",
                "valueType": "dynamic"
              },
              "validation": {
                "validators": []
              },
              "choice": {
                "options": {
                  "staticValue": [],
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "retry": {
                "maxRetries": 2,
                "retryMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "dynamic"
                }
              },
              "cancellation": {
                "cancellable": true,
                "confirmCancel": true,
                "confirmCancelMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "handleFailure": false,
              "historyLookback": 0,
              "skipIfAlreadyFilled": false,
              "transitions": [],
              "prompt": {
                "messages": [
                  {
                    "role": "system",
                    "content": "You are ExtractGPT and your only goal is to generate useful content in JSON format for developers to parse and use. You don't know any other language than JSON."
                  },
                  {
                    "role": "user",
                    "content": "```typescript\n/** The user answer to the question \"undefined\" */\ninterface Output = { value: any }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\nagent: undefined\nuser: undefined\n\"\"\""
                  },
                  {
                    "role": "assistant",
                    "content": "{}"
                  },
                  {
                    "role": "user",
                    "content": "\nNow, forget about the previous transcripts. These were just examples, don't consider those as valid transcripts for this new task.\n\n###\n\nThe current Date is {{CURRENT_DATE_TIME}}.\n\nAt this point of the conversation, I need require the user to fill the output in following JSON output to complete the task.\nIf more than one property, try to extract each of them the best you can.\n\n```typescript\n/** The user answer to the question \"{{QUESTION}}\" */\ninterface Output = { value: any }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\n{{TRANSCRIPT}}\n\"\"\"\n\nIn the last user message, here are the entities found:\n\"\"\"\nENTITIES_IDENTIFIED\n\"\"\"\n\nI need you to extract from the conversation transcript above the values the user has provided.\nIf the user has not provided the information I need, I need you to set the value of the missing answer properties to null.\nHave some tolerance to typos and variations in how the user selects from the possible values.\n\n\n\nNow, please reply to me with the above JSON output and nothing but JSON.\nYou should not explain your answer and should not talk back to me. Just JSON."
                  }
                ],
                "model": "gpt-3.5-turbo",
                "temperature": 0,
                "signatureVersion": "Jan-2024",
                "signature": "wsDIMaSsJ1YTaWLaNEaV5IgB+C2qyh801nUa4CdCsmubxvThog1rJ7tYXwHKDnA4cpOm6gnznXN6AdKJSoh/tbRxO1abxj04bRbCn9y7BZ8i3qZQl1Le5PIaAmfampxeHFl8IasZNZYi5uWVQnd1IPS3iFv6wYhBGa/EPlz+AagSKdqmn11u/DSAfrYixnA2rW+XEORrVeVMt1P8zFU7ssoTSSNt7LZh1xmH0amoWFad2vSDxu/2eU55NZSGFlB8a1soPEGYq83QN6mHXldjsO1mEV7cHWsSBZPTXG37GipXEbYKe/9sQNwg6mpBLIuvbliiJ9DvjkkSyXQVkVhTyg=="
              }
            },
            {
              "id": "ins-0a8254e2bf",
              "type": "transition",
              "condition": {
                "type": "intent",
                "payload": {
                  "type": "library",
                  "name": "",
                  "intent": {
                    "id": "int-a9dd1afd22",
                    "name": "talk_to_agent",
                    "utterances_with_slots": [
                      "tÔªøalk to human",
                      "sÔªøpeak to human",
                      "IÔªø want to talk to an agent",
                      "hÔªøuman now",
                      "hÔªøuman please",
                      "IÔªø want to talk to real person now",
                      "tÔªøalk to a person",
                      "cÔªøonnect to an agent"
                    ]
                  }
                }
              },
              "category": "Flow Logic",
              "nodeId": "nd-4e14511117",
              "generative": null,
              "label": "Intent is : talk_to_agent",
              "description": "",
              "destination": {
                "node": "nd-39506e72c6"
              },
              "transitions": []
            }
          ],
          "defaultTransition": {
            "targetNodeId": "nd-0e936f550a"
          },
          "id": "nd-4e14511117",
          "name": "Standard3"
        },
        {
          "type": "standard",
          "deletable": true,
          "x": -1260,
          "y": -405,
          "instructions": [
            {
              "id": "ins-d0bdd7ea14",
              "type": "capture",
              "entityId": "prompts://MultiChoice/v1",
              "entityName": "Multiple Choice",
              "kbPriority": {
                "enabled": false,
                "searchScope": "specific",
                "kbs": []
              },
              "nodeId": "nd-0382fa065d",
              "question": {
                "staticValue": "",
                "dynamicValue": "How can I assist you today",
                "valueType": "dynamic"
              },
              "validation": {
                "validators": []
              },
              "choice": {
                "options": {
                  "valueType": "static",
                  "staticValue": [
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "I'm looking for RPA Services",
                        "staticValue": null
                      },
                      "value": "I'm looking for RPA Services",
                      "enabled": true
                    },
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "Book a Call",
                        "staticValue": null
                      },
                      "value": "Book a Call",
                      "enabled": true
                    },
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "All our Services",
                        "staticValue": null
                      },
                      "value": "All our Services",
                      "enabled": true
                    },
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "Inquiry",
                        "staticValue": null
                      },
                      "value": "Inquiry",
                      "enabled": true
                    },
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "Talk to an agent",
                        "staticValue": null
                      },
                      "value": "Talk to an agent",
                      "enabled": true
                    }
                  ],
                  "dynamicValue": ""
                }
              },
              "retry": {
                "maxRetries": 2,
                "retryMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "dynamic"
                }
              },
              "cancellation": {
                "cancellable": true,
                "confirmCancel": true,
                "confirmCancelMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "handleFailure": false,
              "historyLookback": 0,
              "skipIfAlreadyFilled": false,
              "transitions": [
                {
                  "id": "trs-72a8abdbb7",
                  "type": "transition",
                  "label": "I'm looking for RPA Services",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=I'm looking for RPA Services"
                  },
                  "destination": {
                    "node": "nd-cf85ce63b8"
                  }
                },
                {
                  "id": "trs-b976c41227",
                  "type": "transition",
                  "label": "Book a Call",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=Book a Call"
                  },
                  "destination": {
                    "node": "nd-261aad105a"
                  }
                },
                {
                  "id": "trs-fcb43e7d53",
                  "type": "transition",
                  "label": "All our Services",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=All our Services"
                  },
                  "destination": {
                    "node": "nd-8bb840145c"
                  }
                },
                {
                  "id": "trs-3f7d124cf5",
                  "type": "transition",
                  "label": "Inquiry",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=Inquiry"
                  },
                  "destination": {
                    "node": "nd-a96cd12e93"
                  }
                },
                {
                  "id": "trs-2155004325",
                  "type": "transition",
                  "label": "Talk to an agent",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=Talk to an agent"
                  },
                  "destination": {
                    "node": "nd-714c1326ab"
                  }
                }
              ],
              "prompt": {
                "messages": [
                  {
                    "role": "system",
                    "content": "You are ExtractGPT and your only goal is to generate useful content in JSON format for developers to parse and use. You don't know any other language than JSON."
                  },
                  {
                    "role": "user",
                    "content": "```typescript\n/** The user answer to the question \"Which one would you like? Choices: [ 1) Red Apple, 2) Yellow Apple, 3) Dark Banana ]\" */\ninterface Output = { choices: Array<{{CHOICES_TYPINGS}}> }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\nagent: Which one would you like? Choices: [ 1) Red Apple, 2) Yellow Apple, 3) Dark Banana ]\nuser: I will go with the second one and the banana please\n\"\"\""
                  },
                  {
                    "role": "assistant",
                    "content": "{\"choices\":[\"Yellow Apple\",\"Dark Banana\"]}"
                  },
                  {
                    "role": "user",
                    "content": "\nNow, forget about the previous transcripts. These were just examples, don't consider those as valid transcripts for this new task.\n\n###\n\nThe current Date is {{CURRENT_DATE_TIME}}.\n\nAt this point of the conversation, I need require the user to fill the output in following JSON output to complete the task.\nIf more than one property, try to extract each of them the best you can.\n\n```typescript\n/** The user answer to the question \"{{QUESTION}}\" */\ninterface Output = { choices: Array<{{CHOICES_TYPINGS}}> }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\n{{TRANSCRIPT}}\n\"\"\"\n\nIn the last user message, here are the entities found:\n\"\"\"\nENTITIES_IDENTIFIED\n\"\"\"\n\nI need you to extract from the conversation transcript above the values the user has provided.\nIf the user has not provided the information I need, I need you to set the value of the missing answer properties to null.\nHave some tolerance to typos and variations in how the user selects from the possible values.\n\n\n\nNow, please reply to me with the above JSON output and nothing but JSON.\nYou should not explain your answer and should not talk back to me. Just JSON."
                  }
                ],
                "model": "gpt-3.5-turbo",
                "temperature": 0,
                "signatureVersion": "Jan-2024",
                "signature": "hSbVLRZ/6JSGgHAn3FVLlszKfXTtP97MNLVVqMWLOPwPrUBMSYw/wsSE07vPspugeNnqlR+InKv9oKpSS2q6KpT13ez6brbWRc5hMRlSiwgRMrd4AYd72ToN5Jhw574axVG08+xYj3MbKuAcLAmaKKwiJeeqv1iOdBTGf/3zbzxRT9bSC0ohAR74sqC9n5OYxjrd2LtlorBuyBQRywJeukRPk8Q8/PHadU9SFXgfcNxrx8ZZBKKLD9XjMcofihdS3fOaMaDHXJJkhBB73Audmvg8Qa6SbOIWihqGJ+Xa4vLKdtlR5eQxyK0xLZDTNbaiqDzgVb1ZDJXizNB8RYwU9g=="
              }
            }
          ],
          "defaultTransition": {
            "targetNodeId": null
          },
          "id": "nd-0382fa065d",
          "name": "hub",
          "agentConfigOverrides": {
            "PersonalityAgent": {
              "active": false,
              "personality": {
                "valueType": "dynamic",
                "dynamicValue": "You are a helping agent to the users visiting the website and help them with answering all questions in a polite and kind way. Moreover add a smile emoji at the end of a greeting message.",
                "staticValue": ""
              }
            }
          }
        },
        {
          "type": "standard",
          "deletable": true,
          "x": -585,
          "y": 420,
          "instructions": [
            {
              "id": "ins-6099767bdc",
              "category": "Send Messages",
              "type": "content",
              "content": {
                "type": "text",
                "text": {
                  "valueType": "dynamic",
                  "dynamicValue": "Great! In order to book a call with us, we kindly request you to answer a few questions. üòä",
                  "staticValue": ""
                },
                "typing": {
                  "valueType": "static",
                  "staticValue": true
                }
              },
              "nodeId": "nd-261aad105a",
              "transitions": []
            }
          ],
          "defaultTransition": {
            "targetNodeId": "nd-b968820ad2"
          },
          "id": "nd-261aad105a",
          "name": "book_a_call",
          "agentConfigOverrides": {
            "PersonalityAgent": {
              "active": false,
              "personality": {
                "valueType": "dynamic",
                "dynamicValue": "You are a helping agent to the users visiting the website and help them with answering all questions in a polite and kind way. Moreover add a smile emoji at the end of a greeting message.",
                "staticValue": ""
              }
            }
          }
        },
        {
          "type": "standard",
          "deletable": true,
          "x": -585,
          "y": 600,
          "instructions": [
            {
              "id": "ins-1c6d218615",
              "category": "Capture Information",
              "type": "capture",
              "entityId": "prompts://PersonName/v1",
              "entityName": "Person Name",
              "kbPriority": {
                "enabled": false,
                "searchScope": "specific",
                "kbs": []
              },
              "nodeId": "nd-b968820ad2",
              "variableId": "var-9a275af52a",
              "question": {
                "staticValue": "",
                "dynamicValue": "Please provide your full  name ",
                "valueType": "dynamic"
              },
              "validation": {
                "validators": []
              },
              "choice": {
                "options": {
                  "staticValue": [],
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "retry": {
                "maxRetries": 2,
                "retryMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "dynamic"
                }
              },
              "cancellation": {
                "cancellable": true,
                "confirmCancel": true,
                "confirmCancelMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "handleFailure": false,
              "historyLookback": 0,
              "skipIfAlreadyFilled": false,
              "transitions": [],
              "prompt": {
                "messages": [
                  {
                    "role": "system",
                    "content": "You are ExtractGPT and your only goal is to generate useful content in JSON format for developers to parse and use. You don't know any other language than JSON."
                  },
                  {
                    "role": "user",
                    "content": "```typescript\n/** The user answer to the question \"Who did you want to send the email to?\" */\ninterface Output = { first: string; last: string }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\nagent: Who did you want to send the email to?\nuser: My name is Jerry Bean, but please send it to John Doe\n\"\"\""
                  },
                  {
                    "role": "assistant",
                    "content": "{\"first\":\"John\",\"last\":\"Doe\"}"
                  },
                  {
                    "role": "user",
                    "content": "\nNow, forget about the previous transcripts. These were just examples, don't consider those as valid transcripts for this new task.\n\n###\n\nThe current Date is {{CURRENT_DATE_TIME}}.\n\nAt this point of the conversation, I need require the user to fill the output in following JSON output to complete the task.\nIf more than one property, try to extract each of them the best you can.\n\n```typescript\n/** The user answer to the question \"{{QUESTION}}\" */\ninterface Output = { first: string; last: string }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\n{{TRANSCRIPT}}\n\"\"\"\n\nIn the last user message, here are the entities found:\n\"\"\"\nENTITIES_IDENTIFIED\n\"\"\"\n\nI need you to extract from the conversation transcript above the values the user has provided.\nIf the user has not provided the information I need, I need you to set the value of the missing answer properties to null.\nHave some tolerance to typos and variations in how the user selects from the possible values.\n\n\n\nNow, please reply to me with the above JSON output and nothing but JSON.\nYou should not explain your answer and should not talk back to me. Just JSON."
                  }
                ],
                "model": "gpt-3.5-turbo",
                "temperature": 0,
                "signatureVersion": "Jan-2024",
                "signature": "eHzFmaSBiPtxzgq36IHF850Ev8pO+EJBw/h0mCnQNQrkorTI5ePdrfOqwJQBbV29I0L+Y2hMSUbFlMD/uAnbaZPK3Ni2EoaFBzhNY0Bfaf+h4b3TUR+PWpzb8wRIDPmE9A6yThVycKDI1MKkIvSFUfg5aLD148dRQddwj6Acr2qOcki3hhf6TXPtHVnJz6sTdNrsFfFKeup1XDSlZbWQivyuYtMdx4bc8lbS0CiaW6twmdw3Jg4erEpLl4khCa/lvkEfAZEQAKQOFdRSA+BbPhZM6ebQkOBBzkZcSfVBDufgISe07K+vDDue6ylEIGsDI4MpNKUoPcExeX4X2yYcug=="
              }
            }
          ],
          "defaultTransition": {
            "targetNodeId": "nd-7ceac75d2e"
          },
          "id": "nd-b968820ad2",
          "name": "question_on_name",
          "agentConfigOverrides": {
            "PersonalityAgent": {
              "active": false,
              "personality": {
                "valueType": "dynamic",
                "dynamicValue": "You are a helping agent to the users visiting the website and help them with answering all questions in a polite and kind way. Moreover add a smile emoji at the end of a greeting message.",
                "staticValue": ""
              }
            }
          }
        },
        {
          "type": "standard",
          "deletable": true,
          "x": -240,
          "y": 450,
          "instructions": [
            {
              "id": "ins-df53f6d35f",
              "category": "Capture Information",
              "type": "capture",
              "entityId": "prompts://Email/v1",
              "entityName": "Email Address",
              "kbPriority": {
                "enabled": false,
                "searchScope": "specific",
                "kbs": []
              },
              "nodeId": "nd-7ceac75d2e",
              "variableId": "var-4ed090b9af",
              "question": {
                "staticValue": "",
                "dynamicValue": "Thankyou! now what is your email address",
                "valueType": "dynamic"
              },
              "validation": {
                "validators": []
              },
              "choice": {
                "options": {
                  "staticValue": [],
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "retry": {
                "maxRetries": 2,
                "retryMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "dynamic"
                }
              },
              "cancellation": {
                "cancellable": true,
                "confirmCancel": true,
                "confirmCancelMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "handleFailure": false,
              "historyLookback": 0,
              "skipIfAlreadyFilled": false,
              "transitions": [],
              "prompt": {
                "messages": [
                  {
                    "role": "system",
                    "content": "You are ExtractGPT and your only goal is to generate useful content in JSON format for developers to parse and use. You don't know any other language than JSON."
                  },
                  {
                    "role": "user",
                    "content": "```typescript\n/** The user answer to the question \"At which email can we send you updates?\" */\ninterface Output = { isValidEmail: boolean; email?: string }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\nagent: At which email can we send you updates?\nuser: send it to ploik.rebekka@century-link.uk\n\"\"\""
                  },
                  {
                    "role": "assistant",
                    "content": "{\"isValidEmail\":true,\"email\":\"ploik.rebekka@century-link.uk\"}"
                  },
                  {
                    "role": "user",
                    "content": "\nNow, forget about the previous transcripts. These were just examples, don't consider those as valid transcripts for this new task.\n\n###\n\nThe current Date is {{CURRENT_DATE_TIME}}.\n\nAt this point of the conversation, I need require the user to fill the output in following JSON output to complete the task.\nIf more than one property, try to extract each of them the best you can.\n\n```typescript\n/** The user answer to the question \"{{QUESTION}}\" */\ninterface Output = { isValidEmail: boolean; email?: string }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\n{{TRANSCRIPT}}\n\"\"\"\n\nIn the last user message, here are the entities found:\n\"\"\"\nENTITIES_IDENTIFIED\n\"\"\"\n\nI need you to extract from the conversation transcript above the values the user has provided.\nIf the user has not provided the information I need, I need you to set the value of the missing answer properties to null.\nHave some tolerance to typos and variations in how the user selects from the possible values.\n\nIdentify and extract a valid email address, considering the standard format \"local.part.450@domain.com\". To be valid, the email must be composed of 3 parts in that order: a username (example: foobar.gaston) followed by a \"@\"; a domain name (example: @gmail) followed by a \".\"; a top-level domain name (example: .com).\n\nNow, please reply to me with the above JSON output and nothing but JSON.\nYou should not explain your answer and should not talk back to me. Just JSON."
                  }
                ],
                "model": "gpt-3.5-turbo",
                "temperature": 0,
                "signatureVersion": "Jan-2024",
                "signature": "Ood1dRcqukJmenOmZfPWj4pzu0fNLOHe4aIS06tJW8wypLvX4LJEzbLI+BKt7X+lkgAlqv8xaUfvUVhMMA4XY4JjOYVIdsN126mbqljzMaX/fdliKQsPmP7Sou2v6Un6qOx9fQY59YwqqXotN1lWgNXBaDIkbOqwn8Ka/v2A8g6nOJq1oF5ao+pgdTdGQqKyKvADShevhmuZijsBfcpwJnbznVNRvmVRQ9sQ/7GB7aJ5uvFrbMvCG7TwexdvVK+ZpG02wct7AVyBUSqIdCxh4gntFAD4xiIVuJHG5ctkc4ih2viPCnRdZ+nBxHZPNOI09A97FJpBcrFTZGOcAzoAog=="
              }
            }
          ],
          "defaultTransition": {
            "targetNodeId": "nd-71d5d8dab8"
          },
          "id": "nd-7ceac75d2e",
          "name": "question_on_email",
          "agentConfigOverrides": {
            "PersonalityAgent": {
              "active": false,
              "personality": {
                "valueType": "dynamic",
                "dynamicValue": "You are a helping agent to the users visiting the website and help them with answering all questions in a polite and kind way. Moreover add a smile emoji at the end of a greeting message.",
                "staticValue": ""
              }
            }
          }
        },
        {
          "type": "standard",
          "deletable": true,
          "x": -240,
          "y": 615,
          "instructions": [
            {
              "id": "ins-83b674a5fc",
              "category": "Capture Information",
              "type": "capture",
              "entityId": "prompts://PhoneNumber/v1",
              "entityName": "Phone Number",
              "kbPriority": {
                "enabled": false,
                "searchScope": "specific",
                "kbs": []
              },
              "nodeId": "nd-71d5d8dab8",
              "variableId": "var-c15d6ecd9d",
              "question": {
                "staticValue": "",
                "dynamicValue": "Lastly what is your phone number",
                "valueType": "dynamic"
              },
              "validation": {
                "validators": []
              },
              "choice": {
                "options": {
                  "staticValue": [],
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "retry": {
                "maxRetries": 2,
                "retryMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "dynamic"
                }
              },
              "cancellation": {
                "cancellable": true,
                "confirmCancel": true,
                "confirmCancelMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "handleFailure": false,
              "historyLookback": 0,
              "skipIfAlreadyFilled": false,
              "transitions": [],
              "prompt": {
                "messages": [
                  {
                    "role": "system",
                    "content": "You are ExtractGPT and your only goal is to generate useful content in JSON format for developers to parse and use. You don't know any other language than JSON."
                  },
                  {
                    "role": "user",
                    "content": "```typescript\n/** The user answer to the question \"What is your phone number and where are you?\" */\ninterface Output = { isValidPhoneNumber: boolean; countryCode?: string; number?: string }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\nagent: What is your phone number and where are you?\nuser: Hello, i'm in canada, my cell is (476) 882-1042\n\"\"\""
                  },
                  {
                    "role": "assistant",
                    "content": "{\"isValidPhoneNumber\":true,\"number\":\"4768821042\",\"countryCode\":\"+1\"}"
                  },
                  {
                    "role": "user",
                    "content": "\nNow, forget about the previous transcripts. These were just examples, don't consider those as valid transcripts for this new task.\n\n###\n\nThe current Date is {{CURRENT_DATE_TIME}}.\n\nAt this point of the conversation, I need require the user to fill the output in following JSON output to complete the task.\nIf more than one property, try to extract each of them the best you can.\n\n```typescript\n/** The user answer to the question \"{{QUESTION}}\" */\ninterface Output = { isValidPhoneNumber: boolean; countryCode?: string; number?: string }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\n{{TRANSCRIPT}}\n\"\"\"\n\nIn the last user message, here are the entities found:\n\"\"\"\nENTITIES_IDENTIFIED\n\"\"\"\n\nI need you to extract from the conversation transcript above the values the user has provided.\nIf the user has not provided the information I need, I need you to set the value of the missing answer properties to null.\nHave some tolerance to typos and variations in how the user selects from the possible values.\n\nIdentify and extract a valid phone number, considering dashes, spaces, parentheses, and country codes (examples: +33611111111, +8211111111, +212111111111). The phone number should ABSOLUTELY be AT LEAST 8 characters long.\n\nNow, please reply to me with the above JSON output and nothing but JSON.\nYou should not explain your answer and should not talk back to me. Just JSON."
                  }
                ],
                "model": "gpt-3.5-turbo",
                "temperature": 0,
                "signatureVersion": "Jan-2024",
                "signature": "XiQgjA1NyKeBGAlqgou0P5LzcXhW8O4RFX6Kpixftlpa0rNnjGy3eic1Mx/sU8snZ+AlKHMjr+bDx1dp3OGFxkjJ/4q3jmrOox7XkESzS0HNLcIfZhOddCr5KoDLPDjoL4pNJiIY+9Wqk7X7cKlRnvKfFeasvtb1SpjbWIp5IyURskOEOk0/p3jqP1AqmFgo3/SOVh/2rtioBHHiNLbfSNX4E8TbDqrLaFQlrie5YSZWd7fbg3TdZ/1rVQE9eUFaWk4xFJq10JPYotFy6sno7xa6OXeEUoEcuu2DfIgjByFBmVsABspWWlbSulL4OuIu2Hld/gKs3MgvuRR0/HfplQ=="
              }
            }
          ],
          "defaultTransition": {
            "targetNodeId": "nd-a215868a71"
          },
          "id": "nd-71d5d8dab8",
          "name": "question_on_phone",
          "agentConfigOverrides": {
            "PersonalityAgent": {
              "active": false,
              "personality": {
                "valueType": "dynamic",
                "dynamicValue": "You are a helping agent to the users visiting the website and help them with answering all questions in a polite and kind way. Moreover add a smile emoji at the end of a greeting message.",
                "staticValue": ""
              }
            }
          }
        },
        {
          "type": "standard",
          "deletable": true,
          "x": 150,
          "y": 810,
          "instructions": [
            {
              "id": "ins-4b06c004cc",
              "category": "Send Messages",
              "type": "content",
              "content": {
                "type": "card",
                "title": {
                  "valueType": "dynamic",
                  "dynamicValue": "Book a call here according to your availability",
                  "staticValue": ""
                },
                "subtitle": {
                  "valueType": "dynamic",
                  "dynamicValue": "Calender link",
                  "staticValue": ""
                },
                "actions": {
                  "valueType": "static",
                  "staticValue": [
                    {
                      "label": "Booking ",
                      "value": "https://calendly.com/kavya-matacs/30min?preview_source=et_card&month=2024-06",
                      "action": "url"
                    }
                  ],
                  "isExpression": true
                }
              },
              "nodeId": "nd-a215868a71",
              "transitions": []
            },
            {
              "id": "ins-fb6d9feeae",
              "type": "action",
              "code": "const webhookUrl = 'https://hook.us1.make.com/3kkr3swqogitcdr0lkx2gllevkysk40x'\r\n\r\nconst payload = {\r\n  user_name: workflow.user_name,\r\n  user_email: workflow.user_email,\r\n  user_phone: workflow.user_phone\r\n}\r\n\r\nawait axios.post(webhookUrl, payload)\r\n",
              "origin": "builtin",
              "category": "Execute",
              "nodeId": "nd-a215868a71",
              "label": "Send user information to a webhook URL using axios.",
              "isCustomLabel": false,
              "transpiledCode": "var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nasync function __ROOT__() {\n  const webhookUrl = \"https://hook.us1.make.com/3kkr3swqogitcdr0lkx2gllevkysk40x\";\n  const payload = {\n    user_name: workflow.user_name,\n    user_email: workflow.user_email,\n    user_phone: workflow.user_phone\n  };\n  await axios.post(webhookUrl, payload);\n}\n__name(__ROOT__, \"__ROOT__\");\n; return await __ROOT__();",
              "transitions": []
            }
          ],
          "defaultTransition": {
            "targetNodeId": "nd-2eb58c5abe"
          },
          "id": "nd-a215868a71",
          "name": "Booking",
          "agentConfigOverrides": {
            "PersonalityAgent": {
              "active": false,
              "personality": {
                "valueType": "dynamic",
                "dynamicValue": "You are a helping agent to the users visiting the website and help them with answering all questions in a polite and kind way. Moreover add a smile emoji at the end of a greeting message.",
                "staticValue": ""
              }
            }
          }
        },
        {
          "type": "end",
          "deletable": true,
          "x": 1380,
          "y": 810,
          "instructions": [
            {
              "id": "trs-f8818edef4",
              "type": "transition",
              "label": "",
              "condition": {
                "type": "expression",
                "payload": "true"
              },
              "destination": {
                "node": "END"
              },
              "generative": {
                "label": "",
                "properties": {
                  "label": true,
                  "condition": true
                },
                "suggestion": {
                  "label": "",
                  "condition": "true"
                }
              },
              "nodeId": "nd-1f237681f1",
              "transitions": []
            }
          ],
          "id": "nd-1f237681f1",
          "name": "End1"
        },
        {
          "type": "standard",
          "deletable": true,
          "x": 480,
          "y": 810,
          "instructions": [
            {
              "id": "ins-d8c015d9a4",
              "category": "Send Messages",
              "type": "content",
              "content": {
                "type": "text",
                "text": {
                  "valueType": "dynamic",
                  "dynamicValue": "Thankyou for booking a call with us! We look forward to talking with you : )",
                  "staticValue": ""
                },
                "typing": {
                  "valueType": "static",
                  "staticValue": true
                }
              },
              "nodeId": "nd-2eb58c5abe",
              "transitions": []
            }
          ],
          "defaultTransition": {
            "targetNodeId": "nd-3f5dce7449"
          },
          "id": "nd-2eb58c5abe",
          "name": "Confirmation"
        },
        {
          "type": "standard",
          "deletable": true,
          "x": 870,
          "y": 825,
          "instructions": [
            {
              "id": "ins-3b88a86850",
              "category": "Capture Information",
              "type": "capture",
              "entityId": "prompts://SingleChoice/v1",
              "entityName": "Single Choice",
              "kbPriority": {
                "enabled": false,
                "searchScope": "specific",
                "kbs": []
              },
              "nodeId": "nd-3f5dce7449",
              "question": {
                "staticValue": "",
                "dynamicValue": "Do you want to exit or go back to selet choices",
                "valueType": "dynamic"
              },
              "validation": {
                "validators": []
              },
              "choice": {
                "options": {
                  "valueType": "static",
                  "staticValue": [
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "To the choices",
                        "staticValue": null
                      },
                      "value": "To the choices",
                      "enabled": true
                    },
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "Exit",
                        "staticValue": null
                      },
                      "value": "Exit",
                      "enabled": true
                    }
                  ],
                  "dynamicValue": ""
                }
              },
              "retry": {
                "maxRetries": 2,
                "retryMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "dynamic"
                }
              },
              "cancellation": {
                "cancellable": true,
                "confirmCancel": true,
                "confirmCancelMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "handleFailure": false,
              "historyLookback": 0,
              "skipIfAlreadyFilled": false,
              "transitions": [
                {
                  "id": "trs-9637b1664a",
                  "type": "transition",
                  "label": "To the choices",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=To the choices"
                  },
                  "destination": {
                    "node": "nd-0382fa065d"
                  }
                },
                {
                  "id": "trs-03b2a04ff3",
                  "type": "transition",
                  "label": "Exit",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=Exit"
                  },
                  "destination": {
                    "node": "nd-760183eda7"
                  }
                }
              ],
              "prompt": {
                "messages": [
                  {
                    "role": "system",
                    "content": "You are ExtractGPT and your only goal is to generate useful content in JSON format for developers to parse and use. You don't know any other language than JSON."
                  },
                  {
                    "role": "user",
                    "content": "```typescript\n/** The user answer to the question \"Which one would you like? Choices: [ 1) Red Apple, 2) Yellow Apple, 3) Dark Banana ]\" */\ninterface Output = { choice: {{CHOICES_TYPINGS}} }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\nagent: Which one would you like? Choices: [ 1) Red Apple, 2) Yellow Apple, 3) Dark Banana ]\nuser: I will go with the second one please\n\"\"\""
                  },
                  {
                    "role": "assistant",
                    "content": "{\"choice\":\"Yellow Apple\"}"
                  },
                  {
                    "role": "user",
                    "content": "\nNow, forget about the previous transcripts. These were just examples, don't consider those as valid transcripts for this new task.\n\n###\n\nThe current Date is {{CURRENT_DATE_TIME}}.\n\nAt this point of the conversation, I need require the user to fill the output in following JSON output to complete the task.\nIf more than one property, try to extract each of them the best you can.\n\n```typescript\n/** The user answer to the question \"{{QUESTION}}\" */\ninterface Output = { choice: {{CHOICES_TYPINGS}} }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\n{{TRANSCRIPT}}\n\"\"\"\n\nIn the last user message, here are the entities found:\n\"\"\"\nENTITIES_IDENTIFIED\n\"\"\"\n\nI need you to extract from the conversation transcript above the values the user has provided.\nIf the user has not provided the information I need, I need you to set the value of the missing answer properties to null.\nHave some tolerance to typos and variations in how the user selects from the possible values.\n\n\n\nNow, please reply to me with the above JSON output and nothing but JSON.\nYou should not explain your answer and should not talk back to me. Just JSON."
                  }
                ],
                "model": "gpt-3.5-turbo",
                "temperature": 0,
                "signatureVersion": "Jan-2024",
                "signature": "bVu49Pre5q6DHlBFHgwm9WRpKblGPBZEVz9lE1T/kSknjafz8d4zyUGOUmre70ijj2brtSymiTuHw41rgUeoCl/HXkA3kpomvC1RU1QBili6tzgAvH+4CC1PGSL/kP+71QgVkqv73DXrN1UAAH60wru/Oc8nuHvtTKxeoghxZzkmwKpFWq9L8Appklcjf5Pr+4N2Q9JQtxsr4D2+SSc7cCBec71TQVpOxhmPHfxaaKfgzGV4PZbUFI0JZEkmMppHHz+6iTlkoeWG45ukpCwCw7ppjnps4TYI/bR2gWVOyN9J3mVYmZoH7pNY7UWjd/mB+HjubAfZAeNF7FXvVKzcrA=="
              }
            }
          ],
          "defaultTransition": {
            "targetNodeId": null
          },
          "id": "nd-3f5dce7449",
          "name": "Standard5"
        },
        {
          "type": "standard",
          "deletable": true,
          "x": 930,
          "y": 285,
          "instructions": [
            {
              "id": "ins-4dd0772bf7",
              "category": "Send Messages",
              "type": "content",
              "content": {
                "type": "text",
                "text": {
                  "valueType": "dynamic",
                  "dynamicValue": "okay, I hope that i will see you again soon! Take Care",
                  "staticValue": ""
                },
                "typing": {
                  "valueType": "static",
                  "staticValue": true
                }
              },
              "nodeId": "nd-760183eda7",
              "transitions": []
            }
          ],
          "defaultTransition": {
            "targetNodeId": "nd-1f237681f1"
          },
          "id": "nd-760183eda7",
          "name": "exit_message"
        },
        {
          "type": "standard",
          "deletable": true,
          "x": 285,
          "y": -1665,
          "instructions": [
            {
              "id": "ins-d7a0d836dd",
              "category": "Send Messages",
              "type": "content",
              "content": {
                "type": "text",
                "text": {
                  "valueType": "dynamic",
                  "dynamicValue": "To learn more, you can click on the below link: https://matacs.com/procurement-industry/",
                  "staticValue": ""
                },
                "typing": {
                  "valueType": "static",
                  "staticValue": true
                }
              },
              "nodeId": "nd-ba9149c792",
              "transitions": []
            },
            {
              "id": "ins-5c171af6e3",
              "category": "Capture Information",
              "type": "capture",
              "entityId": "prompts://RawInput/v1",
              "entityName": "Raw Input",
              "kbPriority": {
                "enabled": true,
                "searchScope": "all",
                "kbs": []
              },
              "nodeId": "nd-ba9149c792",
              "question": {
                "valueType": "dynamic",
                "dynamicValue": "Still have any questions ask me, I am here to help : )",
                "staticValue": ""
              },
              "validation": {
                "validators": []
              },
              "choice": {
                "options": {
                  "staticValue": [],
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "retry": {
                "maxRetries": 2,
                "retryMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "dynamic"
                }
              },
              "cancellation": {
                "cancellable": true,
                "confirmCancel": true,
                "confirmCancelMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "handleFailure": false,
              "historyLookback": 0,
              "skipIfAlreadyFilled": false,
              "transitions": [],
              "prompt": {
                "messages": [
                  {
                    "role": "system",
                    "content": "You are ExtractGPT and your only goal is to generate useful content in JSON format for developers to parse and use. You don't know any other language than JSON."
                  },
                  {
                    "role": "user",
                    "content": "```typescript\n/** The user answer to the question \"undefined\" */\ninterface Output = { value: any }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\nagent: undefined\nuser: undefined\n\"\"\""
                  },
                  {
                    "role": "assistant",
                    "content": "{}"
                  },
                  {
                    "role": "user",
                    "content": "\nNow, forget about the previous transcripts. These were just examples, don't consider those as valid transcripts for this new task.\n\n###\n\nThe current Date is {{CURRENT_DATE_TIME}}.\n\nAt this point of the conversation, I need require the user to fill the output in following JSON output to complete the task.\nIf more than one property, try to extract each of them the best you can.\n\n```typescript\n/** The user answer to the question \"{{QUESTION}}\" */\ninterface Output = { value: any }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\n{{TRANSCRIPT}}\n\"\"\"\n\nIn the last user message, here are the entities found:\n\"\"\"\nENTITIES_IDENTIFIED\n\"\"\"\n\nI need you to extract from the conversation transcript above the values the user has provided.\nIf the user has not provided the information I need, I need you to set the value of the missing answer properties to null.\nHave some tolerance to typos and variations in how the user selects from the possible values.\n\n\n\nNow, please reply to me with the above JSON output and nothing but JSON.\nYou should not explain your answer and should not talk back to me. Just JSON."
                  }
                ],
                "model": "gpt-3.5-turbo",
                "temperature": 0,
                "signatureVersion": "Jan-2024",
                "signature": "wsDIMaSsJ1YTaWLaNEaV5IgB+C2qyh801nUa4CdCsmubxvThog1rJ7tYXwHKDnA4cpOm6gnznXN6AdKJSoh/tbRxO1abxj04bRbCn9y7BZ8i3qZQl1Le5PIaAmfampxeHFl8IasZNZYi5uWVQnd1IPS3iFv6wYhBGa/EPlz+AagSKdqmn11u/DSAfrYixnA2rW+XEORrVeVMt1P8zFU7ssoTSSNt7LZh1xmH0amoWFad2vSDxu/2eU55NZSGFlB8a1soPEGYq83QN6mHXldjsO1mEV7cHWsSBZPTXG37GipXEbYKe/9sQNwg6mpBLIuvbliiJ9DvjkkSyXQVkVhTyg=="
              }
            },
            {
              "id": "ins-e577333547",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "{{turn.KnowledgeAgent.responded}}"
              },
              "label": "",
              "generative": {
                "label": "",
                "suggestion": {
                  "condition": "true"
                },
                "properties": {
                  "condition": false
                }
              },
              "category": "Flow Logic",
              "nodeId": "nd-ba9149c792",
              "description": "",
              "destination": {
                "node": "nd-617e220313"
              },
              "transitions": []
            },
            {
              "id": "ins-31d2bc73d9",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "{{!turn.KnowledgeAgent.responded}}"
              },
              "label": "",
              "generative": {
                "label": "",
                "suggestion": {
                  "condition": "true"
                },
                "properties": {
                  "condition": false
                }
              },
              "category": "Flow Logic",
              "nodeId": "nd-ba9149c792",
              "description": "",
              "destination": {
                "node": "nd-24f8c3d0f7"
              },
              "transitions": []
            }
          ],
          "defaultTransition": {
            "targetNodeId": null
          },
          "id": "nd-ba9149c792",
          "name": "Procurement_Industry",
          "agentConfigOverrides": {
            "PersonalityAgent": {
              "active": false,
              "personality": {
                "valueType": "dynamic",
                "dynamicValue": "You are a helping agent to the users visiting the website and help them with answering all questions in a polite and kind way. Moreover add a smile emoji at the end of a greeting message.",
                "staticValue": ""
              }
            }
          }
        },
        {
          "type": "standard",
          "deletable": true,
          "x": 1125,
          "y": -1650,
          "instructions": [
            {
              "id": "ins-2de07e2741",
              "category": "Send Messages",
              "type": "content",
              "content": {
                "type": "text",
                "text": {
                  "valueType": "dynamic",
                  "dynamicValue": "To learn more, you can click on the below link: https://matacs.com/hr-industry/",
                  "staticValue": ""
                },
                "typing": {
                  "valueType": "static",
                  "staticValue": true
                }
              },
              "nodeId": "nd-69fe98ce7d",
              "transitions": []
            },
            {
              "id": "ins-1d05f493d9",
              "category": "Capture Information",
              "type": "capture",
              "entityId": "prompts://RawInput/v1",
              "entityName": "Raw Input",
              "kbPriority": {
                "enabled": true,
                "searchScope": "all",
                "kbs": []
              },
              "nodeId": "nd-69fe98ce7d",
              "question": {
                "valueType": "dynamic",
                "dynamicValue": "Still have any questions ask me, I am here to help : )",
                "staticValue": ""
              },
              "validation": {
                "validators": []
              },
              "choice": {
                "options": {
                  "staticValue": [],
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "retry": {
                "maxRetries": 2,
                "retryMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "dynamic"
                }
              },
              "cancellation": {
                "cancellable": true,
                "confirmCancel": true,
                "confirmCancelMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "handleFailure": false,
              "historyLookback": 0,
              "skipIfAlreadyFilled": false,
              "transitions": [],
              "prompt": {
                "messages": [
                  {
                    "role": "system",
                    "content": "You are ExtractGPT and your only goal is to generate useful content in JSON format for developers to parse and use. You don't know any other language than JSON."
                  },
                  {
                    "role": "user",
                    "content": "```typescript\n/** The user answer to the question \"undefined\" */\ninterface Output = { value: any }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\nagent: undefined\nuser: undefined\n\"\"\""
                  },
                  {
                    "role": "assistant",
                    "content": "{}"
                  },
                  {
                    "role": "user",
                    "content": "\nNow, forget about the previous transcripts. These were just examples, don't consider those as valid transcripts for this new task.\n\n###\n\nThe current Date is {{CURRENT_DATE_TIME}}.\n\nAt this point of the conversation, I need require the user to fill the output in following JSON output to complete the task.\nIf more than one property, try to extract each of them the best you can.\n\n```typescript\n/** The user answer to the question \"{{QUESTION}}\" */\ninterface Output = { value: any }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\n{{TRANSCRIPT}}\n\"\"\"\n\nIn the last user message, here are the entities found:\n\"\"\"\nENTITIES_IDENTIFIED\n\"\"\"\n\nI need you to extract from the conversation transcript above the values the user has provided.\nIf the user has not provided the information I need, I need you to set the value of the missing answer properties to null.\nHave some tolerance to typos and variations in how the user selects from the possible values.\n\n\n\nNow, please reply to me with the above JSON output and nothing but JSON.\nYou should not explain your answer and should not talk back to me. Just JSON."
                  }
                ],
                "model": "gpt-3.5-turbo",
                "temperature": 0,
                "signatureVersion": "Jan-2024",
                "signature": "wsDIMaSsJ1YTaWLaNEaV5IgB+C2qyh801nUa4CdCsmubxvThog1rJ7tYXwHKDnA4cpOm6gnznXN6AdKJSoh/tbRxO1abxj04bRbCn9y7BZ8i3qZQl1Le5PIaAmfampxeHFl8IasZNZYi5uWVQnd1IPS3iFv6wYhBGa/EPlz+AagSKdqmn11u/DSAfrYixnA2rW+XEORrVeVMt1P8zFU7ssoTSSNt7LZh1xmH0amoWFad2vSDxu/2eU55NZSGFlB8a1soPEGYq83QN6mHXldjsO1mEV7cHWsSBZPTXG37GipXEbYKe/9sQNwg6mpBLIuvbliiJ9DvjkkSyXQVkVhTyg=="
              }
            },
            {
              "id": "ins-67bd428f49",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "{{turn.KnowledgeAgent.responded}}"
              },
              "label": "",
              "generative": {
                "label": "",
                "suggestion": {
                  "condition": "true"
                },
                "properties": {
                  "condition": false
                }
              },
              "category": "Flow Logic",
              "nodeId": "nd-69fe98ce7d",
              "description": "",
              "destination": {
                "node": "nd-617e220313"
              },
              "transitions": []
            },
            {
              "id": "ins-db0dd527dd",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "{{!turn.KnowledgeAgent.responded}}"
              },
              "label": "",
              "generative": {
                "label": "",
                "suggestion": {
                  "condition": "true"
                },
                "properties": {
                  "condition": false
                }
              },
              "category": "Flow Logic",
              "nodeId": "nd-69fe98ce7d",
              "description": "",
              "destination": {
                "node": "nd-24f8c3d0f7"
              },
              "transitions": []
            }
          ],
          "defaultTransition": {
            "targetNodeId": null
          },
          "id": "nd-69fe98ce7d",
          "name": "HR_Industry",
          "agentConfigOverrides": {
            "PersonalityAgent": {
              "active": false,
              "personality": {
                "valueType": "dynamic",
                "dynamicValue": "You are a helping agent to the users visiting the website and help them with answering all questions in a polite and kind way. Moreover add a smile emoji at the end of a greeting message.",
                "staticValue": ""
              }
            }
          }
        },
        {
          "type": "standard",
          "deletable": true,
          "x": 750,
          "y": -1650,
          "instructions": [
            {
              "id": "ins-eeaab2e5ee",
              "category": "Send Messages",
              "type": "content",
              "content": {
                "type": "text",
                "text": {
                  "valueType": "dynamic",
                  "dynamicValue": "To learn more, you can click on the below link:https://matacs.com/e-commerce-industry/",
                  "staticValue": ""
                },
                "typing": {
                  "valueType": "static",
                  "staticValue": true
                }
              },
              "nodeId": "nd-0b7134a0cf",
              "transitions": []
            },
            {
              "id": "ins-7d6fff1b22",
              "category": "Capture Information",
              "type": "capture",
              "entityId": "prompts://RawInput/v1",
              "entityName": "Raw Input",
              "kbPriority": {
                "enabled": true,
                "searchScope": "all",
                "kbs": []
              },
              "nodeId": "nd-0b7134a0cf",
              "question": {
                "valueType": "dynamic",
                "dynamicValue": "Still have any questions ask me, I am here to help : )",
                "staticValue": ""
              },
              "validation": {
                "validators": []
              },
              "choice": {
                "options": {
                  "staticValue": [],
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "retry": {
                "maxRetries": 2,
                "retryMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "dynamic"
                }
              },
              "cancellation": {
                "cancellable": true,
                "confirmCancel": true,
                "confirmCancelMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "handleFailure": false,
              "historyLookback": 0,
              "skipIfAlreadyFilled": false,
              "transitions": [],
              "prompt": {
                "messages": [
                  {
                    "role": "system",
                    "content": "You are ExtractGPT and your only goal is to generate useful content in JSON format for developers to parse and use. You don't know any other language than JSON."
                  },
                  {
                    "role": "user",
                    "content": "```typescript\n/** The user answer to the question \"undefined\" */\ninterface Output = { value: any }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\nagent: undefined\nuser: undefined\n\"\"\""
                  },
                  {
                    "role": "assistant",
                    "content": "{}"
                  },
                  {
                    "role": "user",
                    "content": "\nNow, forget about the previous transcripts. These were just examples, don't consider those as valid transcripts for this new task.\n\n###\n\nThe current Date is {{CURRENT_DATE_TIME}}.\n\nAt this point of the conversation, I need require the user to fill the output in following JSON output to complete the task.\nIf more than one property, try to extract each of them the best you can.\n\n```typescript\n/** The user answer to the question \"{{QUESTION}}\" */\ninterface Output = { value: any }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\n{{TRANSCRIPT}}\n\"\"\"\n\nIn the last user message, here are the entities found:\n\"\"\"\nENTITIES_IDENTIFIED\n\"\"\"\n\nI need you to extract from the conversation transcript above the values the user has provided.\nIf the user has not provided the information I need, I need you to set the value of the missing answer properties to null.\nHave some tolerance to typos and variations in how the user selects from the possible values.\n\n\n\nNow, please reply to me with the above JSON output and nothing but JSON.\nYou should not explain your answer and should not talk back to me. Just JSON."
                  }
                ],
                "model": "gpt-3.5-turbo",
                "temperature": 0,
                "signatureVersion": "Jan-2024",
                "signature": "wsDIMaSsJ1YTaWLaNEaV5IgB+C2qyh801nUa4CdCsmubxvThog1rJ7tYXwHKDnA4cpOm6gnznXN6AdKJSoh/tbRxO1abxj04bRbCn9y7BZ8i3qZQl1Le5PIaAmfampxeHFl8IasZNZYi5uWVQnd1IPS3iFv6wYhBGa/EPlz+AagSKdqmn11u/DSAfrYixnA2rW+XEORrVeVMt1P8zFU7ssoTSSNt7LZh1xmH0amoWFad2vSDxu/2eU55NZSGFlB8a1soPEGYq83QN6mHXldjsO1mEV7cHWsSBZPTXG37GipXEbYKe/9sQNwg6mpBLIuvbliiJ9DvjkkSyXQVkVhTyg=="
              }
            },
            {
              "id": "ins-5d9b761a9e",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "{{turn.KnowledgeAgent.responded}}"
              },
              "label": "",
              "generative": {
                "label": "",
                "suggestion": {
                  "condition": "true"
                },
                "properties": {
                  "condition": false
                }
              },
              "category": "Flow Logic",
              "nodeId": "nd-0b7134a0cf",
              "description": "",
              "destination": {
                "node": "nd-617e220313"
              },
              "transitions": []
            },
            {
              "id": "ins-655ae63d14",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "{{!turn.KnowledgeAgent.responded}}"
              },
              "label": "",
              "generative": {
                "label": "",
                "suggestion": {
                  "condition": "true"
                },
                "properties": {
                  "condition": false
                }
              },
              "category": "Flow Logic",
              "nodeId": "nd-0b7134a0cf",
              "description": "",
              "destination": {
                "node": "nd-24f8c3d0f7"
              },
              "transitions": []
            }
          ],
          "defaultTransition": {
            "targetNodeId": "nd-850900066f"
          },
          "id": "nd-0b7134a0cf",
          "name": "E-Commerce",
          "agentConfigOverrides": {
            "PersonalityAgent": {
              "active": false,
              "personality": {
                "valueType": "dynamic",
                "dynamicValue": "You are a helping agent to the users visiting the website and help them with answering all questions in a polite and kind way. Moreover add a smile emoji at the end of a greeting message.",
                "staticValue": ""
              }
            }
          }
        },
        {
          "type": "standard",
          "deletable": true,
          "x": -975,
          "y": -1635,
          "instructions": [
            {
              "id": "ins-145f584f45",
              "category": "Send Messages",
              "type": "content",
              "content": {
                "type": "text",
                "text": {
                  "valueType": "dynamic",
                  "dynamicValue": "To learn more, you can click on the below link: https://matacs.com/finance-industry/",
                  "staticValue": ""
                },
                "typing": {
                  "valueType": "static",
                  "staticValue": true
                }
              },
              "nodeId": "nd-c64c69488c",
              "transitions": []
            },
            {
              "id": "ins-d5bd0198b9",
              "category": "Capture Information",
              "type": "capture",
              "entityId": "prompts://RawInput/v1",
              "entityName": "Raw Input",
              "kbPriority": {
                "enabled": true,
                "searchScope": "all",
                "kbs": []
              },
              "nodeId": "nd-c64c69488c",
              "question": {
                "valueType": "dynamic",
                "dynamicValue": "Still have any questions ask me, I am here to help : )",
                "staticValue": ""
              },
              "validation": {
                "validators": []
              },
              "choice": {
                "options": {
                  "staticValue": [],
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "retry": {
                "maxRetries": 2,
                "retryMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "dynamic"
                }
              },
              "cancellation": {
                "cancellable": true,
                "confirmCancel": true,
                "confirmCancelMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "handleFailure": false,
              "historyLookback": 0,
              "skipIfAlreadyFilled": false,
              "transitions": [],
              "prompt": {
                "messages": [
                  {
                    "role": "system",
                    "content": "You are ExtractGPT and your only goal is to generate useful content in JSON format for developers to parse and use. You don't know any other language than JSON."
                  },
                  {
                    "role": "user",
                    "content": "```typescript\n/** The user answer to the question \"undefined\" */\ninterface Output = { value: any }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\nagent: undefined\nuser: undefined\n\"\"\""
                  },
                  {
                    "role": "assistant",
                    "content": "{}"
                  },
                  {
                    "role": "user",
                    "content": "\nNow, forget about the previous transcripts. These were just examples, don't consider those as valid transcripts for this new task.\n\n###\n\nThe current Date is {{CURRENT_DATE_TIME}}.\n\nAt this point of the conversation, I need require the user to fill the output in following JSON output to complete the task.\nIf more than one property, try to extract each of them the best you can.\n\n```typescript\n/** The user answer to the question \"{{QUESTION}}\" */\ninterface Output = { value: any }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\n{{TRANSCRIPT}}\n\"\"\"\n\nIn the last user message, here are the entities found:\n\"\"\"\nENTITIES_IDENTIFIED\n\"\"\"\n\nI need you to extract from the conversation transcript above the values the user has provided.\nIf the user has not provided the information I need, I need you to set the value of the missing answer properties to null.\nHave some tolerance to typos and variations in how the user selects from the possible values.\n\n\n\nNow, please reply to me with the above JSON output and nothing but JSON.\nYou should not explain your answer and should not talk back to me. Just JSON."
                  }
                ],
                "model": "gpt-3.5-turbo",
                "temperature": 0,
                "signatureVersion": "Jan-2024",
                "signature": "wsDIMaSsJ1YTaWLaNEaV5IgB+C2qyh801nUa4CdCsmubxvThog1rJ7tYXwHKDnA4cpOm6gnznXN6AdKJSoh/tbRxO1abxj04bRbCn9y7BZ8i3qZQl1Le5PIaAmfampxeHFl8IasZNZYi5uWVQnd1IPS3iFv6wYhBGa/EPlz+AagSKdqmn11u/DSAfrYixnA2rW+XEORrVeVMt1P8zFU7ssoTSSNt7LZh1xmH0amoWFad2vSDxu/2eU55NZSGFlB8a1soPEGYq83QN6mHXldjsO1mEV7cHWsSBZPTXG37GipXEbYKe/9sQNwg6mpBLIuvbliiJ9DvjkkSyXQVkVhTyg=="
              }
            },
            {
              "id": "ins-8c2b70793b",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "{{turn.KnowledgeAgent.responded}}"
              },
              "label": "",
              "generative": {
                "label": "",
                "suggestion": {
                  "condition": "true"
                },
                "properties": {
                  "condition": false
                }
              },
              "category": "Flow Logic",
              "nodeId": "nd-c64c69488c",
              "description": "",
              "destination": {
                "node": "nd-617e220313"
              },
              "transitions": []
            },
            {
              "id": "ins-7b9336c75a",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "{{!turn.KnowledgeAgent.responded}}"
              },
              "label": "",
              "generative": {
                "label": "",
                "suggestion": {
                  "condition": "true"
                },
                "properties": {
                  "condition": false
                }
              },
              "category": "Flow Logic",
              "nodeId": "nd-c64c69488c",
              "description": "",
              "destination": {
                "node": "nd-24f8c3d0f7"
              },
              "transitions": []
            }
          ],
          "defaultTransition": {
            "targetNodeId": null
          },
          "id": "nd-c64c69488c",
          "name": "Finance",
          "agentConfigOverrides": {
            "PersonalityAgent": {
              "active": false,
              "personality": {
                "valueType": "dynamic",
                "dynamicValue": "You are a helping agent to the users visiting the website and help them with answering all questions in a polite and kind way. Moreover add a smile emoji at the end of a greeting message.",
                "staticValue": ""
              }
            }
          }
        },
        {
          "type": "standard",
          "deletable": true,
          "x": -570,
          "y": -1635,
          "instructions": [
            {
              "id": "ins-574c6435c3",
              "category": "Send Messages",
              "type": "content",
              "content": {
                "type": "text",
                "text": {
                  "valueType": "dynamic",
                  "dynamicValue": "To learn more, you can click on the below link:https://matacs.com/feedback-process-automation-industry/",
                  "staticValue": ""
                },
                "typing": {
                  "valueType": "static",
                  "staticValue": true
                }
              },
              "nodeId": "nd-62d9767e88",
              "transitions": []
            },
            {
              "id": "ins-1b7db3f0c1",
              "category": "Capture Information",
              "type": "capture",
              "entityId": "prompts://RawInput/v1",
              "entityName": "Raw Input",
              "kbPriority": {
                "enabled": true,
                "searchScope": "all",
                "kbs": []
              },
              "nodeId": "nd-62d9767e88",
              "question": {
                "valueType": "dynamic",
                "dynamicValue": "Still have any questions ask me, I am here to help : )",
                "staticValue": ""
              },
              "validation": {
                "validators": []
              },
              "choice": {
                "options": {
                  "staticValue": [],
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "retry": {
                "maxRetries": 2,
                "retryMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "dynamic"
                }
              },
              "cancellation": {
                "cancellable": true,
                "confirmCancel": true,
                "confirmCancelMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "handleFailure": false,
              "historyLookback": 0,
              "skipIfAlreadyFilled": false,
              "transitions": [],
              "prompt": {
                "messages": [
                  {
                    "role": "system",
                    "content": "You are ExtractGPT and your only goal is to generate useful content in JSON format for developers to parse and use. You don't know any other language than JSON."
                  },
                  {
                    "role": "user",
                    "content": "```typescript\n/** The user answer to the question \"undefined\" */\ninterface Output = { value: any }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\nagent: undefined\nuser: undefined\n\"\"\""
                  },
                  {
                    "role": "assistant",
                    "content": "{}"
                  },
                  {
                    "role": "user",
                    "content": "\nNow, forget about the previous transcripts. These were just examples, don't consider those as valid transcripts for this new task.\n\n###\n\nThe current Date is {{CURRENT_DATE_TIME}}.\n\nAt this point of the conversation, I need require the user to fill the output in following JSON output to complete the task.\nIf more than one property, try to extract each of them the best you can.\n\n```typescript\n/** The user answer to the question \"{{QUESTION}}\" */\ninterface Output = { value: any }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\n{{TRANSCRIPT}}\n\"\"\"\n\nIn the last user message, here are the entities found:\n\"\"\"\nENTITIES_IDENTIFIED\n\"\"\"\n\nI need you to extract from the conversation transcript above the values the user has provided.\nIf the user has not provided the information I need, I need you to set the value of the missing answer properties to null.\nHave some tolerance to typos and variations in how the user selects from the possible values.\n\n\n\nNow, please reply to me with the above JSON output and nothing but JSON.\nYou should not explain your answer and should not talk back to me. Just JSON."
                  }
                ],
                "model": "gpt-3.5-turbo",
                "temperature": 0,
                "signatureVersion": "Jan-2024",
                "signature": "wsDIMaSsJ1YTaWLaNEaV5IgB+C2qyh801nUa4CdCsmubxvThog1rJ7tYXwHKDnA4cpOm6gnznXN6AdKJSoh/tbRxO1abxj04bRbCn9y7BZ8i3qZQl1Le5PIaAmfampxeHFl8IasZNZYi5uWVQnd1IPS3iFv6wYhBGa/EPlz+AagSKdqmn11u/DSAfrYixnA2rW+XEORrVeVMt1P8zFU7ssoTSSNt7LZh1xmH0amoWFad2vSDxu/2eU55NZSGFlB8a1soPEGYq83QN6mHXldjsO1mEV7cHWsSBZPTXG37GipXEbYKe/9sQNwg6mpBLIuvbliiJ9DvjkkSyXQVkVhTyg=="
              }
            },
            {
              "id": "ins-afaca3d614",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "{{turn.KnowledgeAgent.responded}}"
              },
              "label": "",
              "generative": {
                "label": "",
                "suggestion": {
                  "condition": "true"
                },
                "properties": {
                  "condition": false
                }
              },
              "category": "Flow Logic",
              "nodeId": "nd-62d9767e88",
              "description": "",
              "destination": {
                "node": "nd-617e220313"
              },
              "transitions": []
            },
            {
              "id": "ins-c67afde3e8",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "{{!turn.KnowledgeAgent.responded}}"
              },
              "label": "",
              "generative": {
                "label": "",
                "suggestion": {
                  "condition": "true"
                },
                "properties": {
                  "condition": false
                }
              },
              "category": "Flow Logic",
              "nodeId": "nd-62d9767e88",
              "description": "",
              "destination": {
                "node": "nd-24f8c3d0f7"
              },
              "transitions": []
            }
          ],
          "defaultTransition": {
            "targetNodeId": null
          },
          "id": "nd-62d9767e88",
          "name": "Feedback_Process_and_Automation",
          "agentConfigOverrides": {
            "PersonalityAgent": {
              "active": false,
              "personality": {
                "valueType": "dynamic",
                "dynamicValue": "You are a helping agent to the users visiting the website and help them with answering all questions in a polite and kind way. Moreover add a smile emoji at the end of a greeting message.",
                "staticValue": ""
              }
            }
          }
        },
        {
          "type": "standard",
          "deletable": true,
          "x": -990,
          "y": -90,
          "instructions": [
            {
              "id": "ins-64f07327a5",
              "category": "Send Messages",
              "type": "content",
              "content": {
                "type": "text",
                "text": {
                  "valueType": "dynamic",
                  "dynamicValue": "Here is the link to go through our RPA services - https://matacs.com/robotics-process-automation/",
                  "staticValue": ""
                },
                "typing": {
                  "valueType": "static",
                  "staticValue": true
                }
              },
              "nodeId": "nd-a0802b3f52",
              "transitions": []
            },
            {
              "id": "ins-e872dc9c83",
              "category": "Capture Information",
              "type": "capture",
              "entityId": "prompts://SingleChoice/v1",
              "entityName": "Single Choice",
              "kbPriority": {
                "enabled": true,
                "searchScope": "all",
                "kbs": []
              },
              "nodeId": "nd-a0802b3f52",
              "question": {
                "staticValue": "",
                "dynamicValue": "If you'd like to gain more insights into our expertise you can subscribe to our tech content",
                "valueType": "dynamic"
              },
              "validation": {
                "validators": []
              },
              "choice": {
                "options": {
                  "valueType": "static",
                  "staticValue": [
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "Subscribe to our newsletter",
                        "staticValue": null
                      },
                      "value": "Subscribe to our newsletter",
                      "enabled": true
                    },
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "Exit",
                        "staticValue": null
                      },
                      "value": "Exit",
                      "enabled": true
                    },
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "chat with me",
                        "staticValue": null
                      },
                      "value": "chat with me",
                      "enabled": true
                    }
                  ],
                  "dynamicValue": ""
                }
              },
              "retry": {
                "maxRetries": 2,
                "retryMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "dynamic"
                }
              },
              "cancellation": {
                "cancellable": true,
                "confirmCancel": true,
                "confirmCancelMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "handleFailure": false,
              "historyLookback": 0,
              "skipIfAlreadyFilled": false,
              "transitions": [
                {
                  "id": "trs-71342a2300",
                  "type": "transition",
                  "label": "Subscribe to our newsletter",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=Subscribe to our newsletter"
                  },
                  "destination": {
                    "node": "nd-a9db711d52"
                  }
                },
                {
                  "id": "trs-d3b676e776",
                  "type": "transition",
                  "label": "Exit",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=Exit"
                  },
                  "destination": {
                    "node": "nd-760183eda7"
                  }
                },
                {
                  "id": "trs-b5556da262",
                  "type": "transition",
                  "label": "chat with me",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=chat with me"
                  },
                  "destination": {
                    "node": "nd-a96cd12e93"
                  }
                }
              ],
              "prompt": {
                "messages": [
                  {
                    "role": "system",
                    "content": "You are ExtractGPT and your only goal is to generate useful content in JSON format for developers to parse and use. You don't know any other language than JSON."
                  },
                  {
                    "role": "user",
                    "content": "```typescript\n/** The user answer to the question \"Which one would you like? Choices: [ 1) Red Apple, 2) Yellow Apple, 3) Dark Banana ]\" */\ninterface Output = { choice: {{CHOICES_TYPINGS}} }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\nagent: Which one would you like? Choices: [ 1) Red Apple, 2) Yellow Apple, 3) Dark Banana ]\nuser: I will go with the second one please\n\"\"\""
                  },
                  {
                    "role": "assistant",
                    "content": "{\"choice\":\"Yellow Apple\"}"
                  },
                  {
                    "role": "user",
                    "content": "\nNow, forget about the previous transcripts. These were just examples, don't consider those as valid transcripts for this new task.\n\n###\n\nThe current Date is {{CURRENT_DATE_TIME}}.\n\nAt this point of the conversation, I need require the user to fill the output in following JSON output to complete the task.\nIf more than one property, try to extract each of them the best you can.\n\n```typescript\n/** The user answer to the question \"{{QUESTION}}\" */\ninterface Output = { choice: {{CHOICES_TYPINGS}} }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\n{{TRANSCRIPT}}\n\"\"\"\n\nIn the last user message, here are the entities found:\n\"\"\"\nENTITIES_IDENTIFIED\n\"\"\"\n\nI need you to extract from the conversation transcript above the values the user has provided.\nIf the user has not provided the information I need, I need you to set the value of the missing answer properties to null.\nHave some tolerance to typos and variations in how the user selects from the possible values.\n\n\n\nNow, please reply to me with the above JSON output and nothing but JSON.\nYou should not explain your answer and should not talk back to me. Just JSON."
                  }
                ],
                "model": "gpt-3.5-turbo",
                "temperature": 0,
                "signatureVersion": "Jan-2024",
                "signature": "bVu49Pre5q6DHlBFHgwm9WRpKblGPBZEVz9lE1T/kSknjafz8d4zyUGOUmre70ijj2brtSymiTuHw41rgUeoCl/HXkA3kpomvC1RU1QBili6tzgAvH+4CC1PGSL/kP+71QgVkqv73DXrN1UAAH60wru/Oc8nuHvtTKxeoghxZzkmwKpFWq9L8Appklcjf5Pr+4N2Q9JQtxsr4D2+SSc7cCBec71TQVpOxhmPHfxaaKfgzGV4PZbUFI0JZEkmMppHHz+6iTlkoeWG45ukpCwCw7ppjnps4TYI/bR2gWVOyN9J3mVYmZoH7pNY7UWjd/mB+HjubAfZAeNF7FXvVKzcrA=="
              }
            }
          ],
          "defaultTransition": {
            "targetNodeId": null
          },
          "id": "nd-a0802b3f52",
          "name": "RPA",
          "agentConfigOverrides": {
            "PersonalityAgent": {
              "active": false,
              "personality": {
                "valueType": "dynamic",
                "dynamicValue": "You are a helping agent to the users visiting the website and help them with answering all questions in a polite and kind way. Moreover add a smile emoji at the end of a greeting message.",
                "staticValue": ""
              }
            }
          }
        },
        {
          "type": "standard",
          "deletable": true,
          "x": -1695,
          "y": 285,
          "instructions": [
            {
              "id": "ins-8bb8387ed7",
              "category": "Send Messages",
              "type": "content",
              "content": {
                "type": "text",
                "text": {
                  "valueType": "dynamic",
                  "dynamicValue": "Here is the link to go through our RPA services - https://matacs.com/mobile-web-development/",
                  "staticValue": ""
                },
                "typing": {
                  "valueType": "static",
                  "staticValue": true
                }
              },
              "nodeId": "nd-bb7ac6c8b0",
              "transitions": []
            },
            {
              "id": "ins-9f0acd250e",
              "category": "Capture Information",
              "type": "capture",
              "entityId": "prompts://SingleChoice/v1",
              "entityName": "Single Choice",
              "kbPriority": {
                "enabled": true,
                "searchScope": "all",
                "kbs": []
              },
              "nodeId": "nd-bb7ac6c8b0",
              "question": {
                "staticValue": "",
                "dynamicValue": "If you'd like to gain more insights into our expertise you can subscribe to our tech content",
                "valueType": "dynamic"
              },
              "validation": {
                "validators": []
              },
              "choice": {
                "options": {
                  "valueType": "static",
                  "staticValue": [
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "Subscribe to our newsletter",
                        "staticValue": null
                      },
                      "value": "Subscribe to our newsletter",
                      "enabled": true
                    },
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "Exit",
                        "staticValue": null
                      },
                      "value": "Exit",
                      "enabled": true
                    },
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "chat with me",
                        "staticValue": null
                      },
                      "value": "chat with me",
                      "enabled": true
                    }
                  ],
                  "dynamicValue": ""
                }
              },
              "retry": {
                "maxRetries": 2,
                "retryMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "dynamic"
                }
              },
              "cancellation": {
                "cancellable": true,
                "confirmCancel": true,
                "confirmCancelMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "handleFailure": false,
              "historyLookback": 0,
              "skipIfAlreadyFilled": false,
              "transitions": [
                {
                  "id": "trs-52c798da84",
                  "type": "transition",
                  "label": "Subscribe to our newsletter",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=Subscribe to our newsletter"
                  },
                  "destination": {
                    "node": "nd-a9db711d52"
                  }
                },
                {
                  "id": "trs-a9d19ef561",
                  "type": "transition",
                  "label": "Exit",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=Exit"
                  },
                  "destination": {
                    "node": "nd-760183eda7"
                  }
                },
                {
                  "id": "trs-0ceec6f9a9",
                  "type": "transition",
                  "label": "chat with me",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=chat with me"
                  },
                  "destination": {
                    "node": "nd-a96cd12e93"
                  }
                }
              ],
              "prompt": {
                "messages": [
                  {
                    "role": "system",
                    "content": "You are ExtractGPT and your only goal is to generate useful content in JSON format for developers to parse and use. You don't know any other language than JSON."
                  },
                  {
                    "role": "user",
                    "content": "```typescript\n/** The user answer to the question \"Which one would you like? Choices: [ 1) Red Apple, 2) Yellow Apple, 3) Dark Banana ]\" */\ninterface Output = { choice: {{CHOICES_TYPINGS}} }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\nagent: Which one would you like? Choices: [ 1) Red Apple, 2) Yellow Apple, 3) Dark Banana ]\nuser: I will go with the second one please\n\"\"\""
                  },
                  {
                    "role": "assistant",
                    "content": "{\"choice\":\"Yellow Apple\"}"
                  },
                  {
                    "role": "user",
                    "content": "\nNow, forget about the previous transcripts. These were just examples, don't consider those as valid transcripts for this new task.\n\n###\n\nThe current Date is {{CURRENT_DATE_TIME}}.\n\nAt this point of the conversation, I need require the user to fill the output in following JSON output to complete the task.\nIf more than one property, try to extract each of them the best you can.\n\n```typescript\n/** The user answer to the question \"{{QUESTION}}\" */\ninterface Output = { choice: {{CHOICES_TYPINGS}} }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\n{{TRANSCRIPT}}\n\"\"\"\n\nIn the last user message, here are the entities found:\n\"\"\"\nENTITIES_IDENTIFIED\n\"\"\"\n\nI need you to extract from the conversation transcript above the values the user has provided.\nIf the user has not provided the information I need, I need you to set the value of the missing answer properties to null.\nHave some tolerance to typos and variations in how the user selects from the possible values.\n\n\n\nNow, please reply to me with the above JSON output and nothing but JSON.\nYou should not explain your answer and should not talk back to me. Just JSON."
                  }
                ],
                "model": "gpt-3.5-turbo",
                "temperature": 0,
                "signatureVersion": "Jan-2024",
                "signature": "bVu49Pre5q6DHlBFHgwm9WRpKblGPBZEVz9lE1T/kSknjafz8d4zyUGOUmre70ijj2brtSymiTuHw41rgUeoCl/HXkA3kpomvC1RU1QBili6tzgAvH+4CC1PGSL/kP+71QgVkqv73DXrN1UAAH60wru/Oc8nuHvtTKxeoghxZzkmwKpFWq9L8Appklcjf5Pr+4N2Q9JQtxsr4D2+SSc7cCBec71TQVpOxhmPHfxaaKfgzGV4PZbUFI0JZEkmMppHHz+6iTlkoeWG45ukpCwCw7ppjnps4TYI/bR2gWVOyN9J3mVYmZoH7pNY7UWjd/mB+HjubAfZAeNF7FXvVKzcrA=="
              }
            }
          ],
          "defaultTransition": {
            "targetNodeId": null
          },
          "id": "nd-bb7ac6c8b0",
          "name": "Mobile"
        },
        {
          "type": "standard",
          "deletable": true,
          "x": -1455,
          "y": 585,
          "instructions": [
            {
              "id": "ins-9fcecde8ab",
              "category": "Send Messages",
              "type": "content",
              "content": {
                "type": "text",
                "text": {
                  "valueType": "dynamic",
                  "dynamicValue": "Here is the link to go through our RPA services - https://matacs.com/warehouse-technology-solutions/",
                  "staticValue": ""
                },
                "typing": {
                  "valueType": "static",
                  "staticValue": true
                }
              },
              "nodeId": "nd-82b2e975b2",
              "transitions": []
            },
            {
              "id": "ins-3b84c1c471",
              "category": "Capture Information",
              "type": "capture",
              "entityId": "prompts://SingleChoice/v1",
              "entityName": "Single Choice",
              "kbPriority": {
                "enabled": true,
                "searchScope": "all",
                "kbs": []
              },
              "nodeId": "nd-82b2e975b2",
              "question": {
                "staticValue": "",
                "dynamicValue": "If you'd like to gain more insights into our expertise you can subscribe to our tech content",
                "valueType": "dynamic"
              },
              "validation": {
                "validators": []
              },
              "choice": {
                "options": {
                  "valueType": "static",
                  "staticValue": [
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "Subscribe to our newsletter",
                        "staticValue": null
                      },
                      "value": "Subscribe to our newsletter",
                      "enabled": true
                    },
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "Exit",
                        "staticValue": null
                      },
                      "value": "Exit",
                      "enabled": true
                    },
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "chat with me",
                        "staticValue": null
                      },
                      "value": "chat with me",
                      "enabled": true
                    }
                  ],
                  "dynamicValue": ""
                }
              },
              "retry": {
                "maxRetries": 2,
                "retryMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "dynamic"
                }
              },
              "cancellation": {
                "cancellable": true,
                "confirmCancel": true,
                "confirmCancelMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "handleFailure": false,
              "historyLookback": 0,
              "skipIfAlreadyFilled": false,
              "transitions": [
                {
                  "id": "trs-9f5e16f053",
                  "type": "transition",
                  "label": "Subscribe to our newsletter",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=Subscribe to our newsletter"
                  },
                  "destination": {
                    "node": "nd-a9db711d52"
                  }
                },
                {
                  "id": "trs-3c3dc46614",
                  "type": "transition",
                  "label": "Exit",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=Exit"
                  },
                  "destination": {
                    "node": "nd-760183eda7"
                  }
                },
                {
                  "id": "trs-30cd742d48",
                  "type": "transition",
                  "label": "chat with me",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=chat with me"
                  },
                  "destination": {
                    "node": "nd-a96cd12e93"
                  }
                }
              ],
              "prompt": {
                "messages": [
                  {
                    "role": "system",
                    "content": "You are ExtractGPT and your only goal is to generate useful content in JSON format for developers to parse and use. You don't know any other language than JSON."
                  },
                  {
                    "role": "user",
                    "content": "```typescript\n/** The user answer to the question \"Which one would you like? Choices: [ 1) Red Apple, 2) Yellow Apple, 3) Dark Banana ]\" */\ninterface Output = { choice: {{CHOICES_TYPINGS}} }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\nagent: Which one would you like? Choices: [ 1) Red Apple, 2) Yellow Apple, 3) Dark Banana ]\nuser: I will go with the second one please\n\"\"\""
                  },
                  {
                    "role": "assistant",
                    "content": "{\"choice\":\"Yellow Apple\"}"
                  },
                  {
                    "role": "user",
                    "content": "\nNow, forget about the previous transcripts. These were just examples, don't consider those as valid transcripts for this new task.\n\n###\n\nThe current Date is {{CURRENT_DATE_TIME}}.\n\nAt this point of the conversation, I need require the user to fill the output in following JSON output to complete the task.\nIf more than one property, try to extract each of them the best you can.\n\n```typescript\n/** The user answer to the question \"{{QUESTION}}\" */\ninterface Output = { choice: {{CHOICES_TYPINGS}} }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\n{{TRANSCRIPT}}\n\"\"\"\n\nIn the last user message, here are the entities found:\n\"\"\"\nENTITIES_IDENTIFIED\n\"\"\"\n\nI need you to extract from the conversation transcript above the values the user has provided.\nIf the user has not provided the information I need, I need you to set the value of the missing answer properties to null.\nHave some tolerance to typos and variations in how the user selects from the possible values.\n\n\n\nNow, please reply to me with the above JSON output and nothing but JSON.\nYou should not explain your answer and should not talk back to me. Just JSON."
                  }
                ],
                "model": "gpt-3.5-turbo",
                "temperature": 0,
                "signatureVersion": "Jan-2024",
                "signature": "bVu49Pre5q6DHlBFHgwm9WRpKblGPBZEVz9lE1T/kSknjafz8d4zyUGOUmre70ijj2brtSymiTuHw41rgUeoCl/HXkA3kpomvC1RU1QBili6tzgAvH+4CC1PGSL/kP+71QgVkqv73DXrN1UAAH60wru/Oc8nuHvtTKxeoghxZzkmwKpFWq9L8Appklcjf5Pr+4N2Q9JQtxsr4D2+SSc7cCBec71TQVpOxhmPHfxaaKfgzGV4PZbUFI0JZEkmMppHHz+6iTlkoeWG45ukpCwCw7ppjnps4TYI/bR2gWVOyN9J3mVYmZoH7pNY7UWjd/mB+HjubAfZAeNF7FXvVKzcrA=="
              }
            }
          ],
          "defaultTransition": {
            "targetNodeId": null
          },
          "id": "nd-82b2e975b2",
          "name": "Warehouse"
        },
        {
          "type": "standard",
          "deletable": true,
          "x": -1425,
          "y": 885,
          "instructions": [
            {
              "id": "ins-3a2b4c68c2",
              "category": "Send Messages",
              "type": "content",
              "content": {
                "type": "text",
                "text": {
                  "valueType": "dynamic",
                  "dynamicValue": "Here is the link to go through our RPA services - https://matacs.com/microsoft-cloud-solutions-provider/",
                  "staticValue": ""
                },
                "typing": {
                  "valueType": "static",
                  "staticValue": true
                }
              },
              "nodeId": "nd-e50cf52444",
              "transitions": []
            },
            {
              "id": "ins-2393d70a12",
              "category": "Capture Information",
              "type": "capture",
              "entityId": "prompts://SingleChoice/v1",
              "entityName": "Single Choice",
              "kbPriority": {
                "enabled": true,
                "searchScope": "all",
                "kbs": []
              },
              "nodeId": "nd-e50cf52444",
              "question": {
                "staticValue": "",
                "dynamicValue": "If you'd like to gain more insights into our expertise you can subscribe to our tech content",
                "valueType": "dynamic"
              },
              "validation": {
                "validators": []
              },
              "choice": {
                "options": {
                  "valueType": "static",
                  "staticValue": [
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "Subscribe to our newsletter",
                        "staticValue": null
                      },
                      "value": "Subscribe to our newsletter",
                      "enabled": true
                    },
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "Exit",
                        "staticValue": null
                      },
                      "value": "Exit",
                      "enabled": true
                    },
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "chat with me",
                        "staticValue": null
                      },
                      "value": "chat with me",
                      "enabled": true
                    }
                  ],
                  "dynamicValue": ""
                }
              },
              "retry": {
                "maxRetries": 2,
                "retryMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "dynamic"
                }
              },
              "cancellation": {
                "cancellable": true,
                "confirmCancel": true,
                "confirmCancelMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "handleFailure": false,
              "historyLookback": 0,
              "skipIfAlreadyFilled": false,
              "transitions": [
                {
                  "id": "trs-7199d44004",
                  "type": "transition",
                  "label": "Subscribe to our newsletter",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=Subscribe to our newsletter"
                  },
                  "destination": {
                    "node": "nd-a9db711d52"
                  }
                },
                {
                  "id": "trs-08ed40243b",
                  "type": "transition",
                  "label": "Exit",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=Exit"
                  },
                  "destination": {
                    "node": "nd-760183eda7"
                  }
                },
                {
                  "id": "trs-1d8aca6b3d",
                  "type": "transition",
                  "label": "chat with me",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=chat with me"
                  },
                  "destination": {
                    "node": "nd-a96cd12e93"
                  }
                }
              ],
              "prompt": {
                "messages": [
                  {
                    "role": "system",
                    "content": "You are ExtractGPT and your only goal is to generate useful content in JSON format for developers to parse and use. You don't know any other language than JSON."
                  },
                  {
                    "role": "user",
                    "content": "```typescript\n/** The user answer to the question \"Which one would you like? Choices: [ 1) Red Apple, 2) Yellow Apple, 3) Dark Banana ]\" */\ninterface Output = { choice: {{CHOICES_TYPINGS}} }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\nagent: Which one would you like? Choices: [ 1) Red Apple, 2) Yellow Apple, 3) Dark Banana ]\nuser: I will go with the second one please\n\"\"\""
                  },
                  {
                    "role": "assistant",
                    "content": "{\"choice\":\"Yellow Apple\"}"
                  },
                  {
                    "role": "user",
                    "content": "\nNow, forget about the previous transcripts. These were just examples, don't consider those as valid transcripts for this new task.\n\n###\n\nThe current Date is {{CURRENT_DATE_TIME}}.\n\nAt this point of the conversation, I need require the user to fill the output in following JSON output to complete the task.\nIf more than one property, try to extract each of them the best you can.\n\n```typescript\n/** The user answer to the question \"{{QUESTION}}\" */\ninterface Output = { choice: {{CHOICES_TYPINGS}} }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\n{{TRANSCRIPT}}\n\"\"\"\n\nIn the last user message, here are the entities found:\n\"\"\"\nENTITIES_IDENTIFIED\n\"\"\"\n\nI need you to extract from the conversation transcript above the values the user has provided.\nIf the user has not provided the information I need, I need you to set the value of the missing answer properties to null.\nHave some tolerance to typos and variations in how the user selects from the possible values.\n\n\n\nNow, please reply to me with the above JSON output and nothing but JSON.\nYou should not explain your answer and should not talk back to me. Just JSON."
                  }
                ],
                "model": "gpt-3.5-turbo",
                "temperature": 0,
                "signatureVersion": "Jan-2024",
                "signature": "bVu49Pre5q6DHlBFHgwm9WRpKblGPBZEVz9lE1T/kSknjafz8d4zyUGOUmre70ijj2brtSymiTuHw41rgUeoCl/HXkA3kpomvC1RU1QBili6tzgAvH+4CC1PGSL/kP+71QgVkqv73DXrN1UAAH60wru/Oc8nuHvtTKxeoghxZzkmwKpFWq9L8Appklcjf5Pr+4N2Q9JQtxsr4D2+SSc7cCBec71TQVpOxhmPHfxaaKfgzGV4PZbUFI0JZEkmMppHHz+6iTlkoeWG45ukpCwCw7ppjnps4TYI/bR2gWVOyN9J3mVYmZoH7pNY7UWjd/mB+HjubAfZAeNF7FXvVKzcrA=="
              }
            }
          ],
          "defaultTransition": {
            "targetNodeId": null
          },
          "id": "nd-e50cf52444",
          "name": "Microsoft"
        },
        {
          "type": "standard",
          "deletable": true,
          "x": -1425,
          "y": 1155,
          "instructions": [
            {
              "id": "ins-72071bdcaa",
              "category": "Send Messages",
              "type": "content",
              "content": {
                "type": "text",
                "text": {
                  "valueType": "dynamic",
                  "dynamicValue": "Here is the link to go through our RPA services - https://matacs.com/salesforce-crm-solutions-provider/",
                  "staticValue": ""
                },
                "typing": {
                  "valueType": "static",
                  "staticValue": true
                }
              },
              "nodeId": "nd-a8fb623e7e",
              "transitions": []
            },
            {
              "id": "ins-67443b668d",
              "category": "Capture Information",
              "type": "capture",
              "entityId": "prompts://SingleChoice/v1",
              "entityName": "Single Choice",
              "kbPriority": {
                "enabled": true,
                "searchScope": "all",
                "kbs": []
              },
              "nodeId": "nd-a8fb623e7e",
              "question": {
                "staticValue": "",
                "dynamicValue": "If you'd like to gain more insights into our expertise you can subscribe to our tech content",
                "valueType": "dynamic"
              },
              "validation": {
                "validators": []
              },
              "choice": {
                "options": {
                  "valueType": "static",
                  "staticValue": [
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "Subscribe to our newsletter",
                        "staticValue": null
                      },
                      "value": "Subscribe to our newsletter",
                      "enabled": true
                    },
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "Exit",
                        "staticValue": null
                      },
                      "value": "Exit",
                      "enabled": true
                    },
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "chat with me ",
                        "staticValue": null
                      },
                      "value": "chat with me ",
                      "enabled": true
                    }
                  ],
                  "dynamicValue": ""
                }
              },
              "retry": {
                "maxRetries": 2,
                "retryMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "dynamic"
                }
              },
              "cancellation": {
                "cancellable": true,
                "confirmCancel": true,
                "confirmCancelMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "handleFailure": false,
              "historyLookback": 0,
              "skipIfAlreadyFilled": false,
              "transitions": [
                {
                  "id": "trs-8ff014667c",
                  "type": "transition",
                  "label": "Subscribe to our newsletter",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=Subscribe to our newsletter"
                  },
                  "destination": {
                    "node": "nd-a9db711d52"
                  }
                },
                {
                  "id": "trs-50fd1585ad",
                  "type": "transition",
                  "label": "Exit",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=Exit"
                  },
                  "destination": {
                    "node": "nd-760183eda7"
                  }
                },
                {
                  "id": "trs-8d97491fd3",
                  "type": "transition",
                  "label": "chat with me ",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=chat with me "
                  },
                  "destination": {
                    "node": "nd-a96cd12e93"
                  }
                }
              ],
              "prompt": {
                "messages": [
                  {
                    "role": "system",
                    "content": "You are ExtractGPT and your only goal is to generate useful content in JSON format for developers to parse and use. You don't know any other language than JSON."
                  },
                  {
                    "role": "user",
                    "content": "```typescript\n/** The user answer to the question \"Which one would you like? Choices: [ 1) Red Apple, 2) Yellow Apple, 3) Dark Banana ]\" */\ninterface Output = { choice: {{CHOICES_TYPINGS}} }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\nagent: Which one would you like? Choices: [ 1) Red Apple, 2) Yellow Apple, 3) Dark Banana ]\nuser: I will go with the second one please\n\"\"\""
                  },
                  {
                    "role": "assistant",
                    "content": "{\"choice\":\"Yellow Apple\"}"
                  },
                  {
                    "role": "user",
                    "content": "\nNow, forget about the previous transcripts. These were just examples, don't consider those as valid transcripts for this new task.\n\n###\n\nThe current Date is {{CURRENT_DATE_TIME}}.\n\nAt this point of the conversation, I need require the user to fill the output in following JSON output to complete the task.\nIf more than one property, try to extract each of them the best you can.\n\n```typescript\n/** The user answer to the question \"{{QUESTION}}\" */\ninterface Output = { choice: {{CHOICES_TYPINGS}} }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\n{{TRANSCRIPT}}\n\"\"\"\n\nIn the last user message, here are the entities found:\n\"\"\"\nENTITIES_IDENTIFIED\n\"\"\"\n\nI need you to extract from the conversation transcript above the values the user has provided.\nIf the user has not provided the information I need, I need you to set the value of the missing answer properties to null.\nHave some tolerance to typos and variations in how the user selects from the possible values.\n\n\n\nNow, please reply to me with the above JSON output and nothing but JSON.\nYou should not explain your answer and should not talk back to me. Just JSON."
                  }
                ],
                "model": "gpt-3.5-turbo",
                "temperature": 0,
                "signatureVersion": "Jan-2024",
                "signature": "bVu49Pre5q6DHlBFHgwm9WRpKblGPBZEVz9lE1T/kSknjafz8d4zyUGOUmre70ijj2brtSymiTuHw41rgUeoCl/HXkA3kpomvC1RU1QBili6tzgAvH+4CC1PGSL/kP+71QgVkqv73DXrN1UAAH60wru/Oc8nuHvtTKxeoghxZzkmwKpFWq9L8Appklcjf5Pr+4N2Q9JQtxsr4D2+SSc7cCBec71TQVpOxhmPHfxaaKfgzGV4PZbUFI0JZEkmMppHHz+6iTlkoeWG45ukpCwCw7ppjnps4TYI/bR2gWVOyN9J3mVYmZoH7pNY7UWjd/mB+HjubAfZAeNF7FXvVKzcrA=="
              }
            }
          ],
          "defaultTransition": {
            "targetNodeId": null
          },
          "id": "nd-a8fb623e7e",
          "name": "Sales_force"
        },
        {
          "type": "standard",
          "deletable": true,
          "x": -570,
          "y": 1080,
          "instructions": [
            {
              "id": "ins-e903ab061a",
              "category": "Send Messages",
              "type": "content",
              "content": {
                "type": "text",
                "text": {
                  "valueType": "dynamic",
                  "dynamicValue": "I apologize, I did not get your question, could you rephrase or contact our team at info@matacs.com",
                  "staticValue": ""
                },
                "typing": {
                  "valueType": "static",
                  "staticValue": true
                }
              },
              "nodeId": "nd-24f8c3d0f7",
              "transitions": []
            }
          ],
          "defaultTransition": {
            "targetNodeId": "nd-617e220313"
          },
          "id": "nd-24f8c3d0f7",
          "name": "notfound",
          "agentConfigOverrides": {
            "PersonalityAgent": {
              "active": true,
              "personality": {
                "valueType": "dynamic",
                "dynamicValue": "You are a helping agent to the users visiting the website and help them with answering all questions in a polite and kind way. Moreover add a smile emoji at the end of a greeting message.",
                "staticValue": ""
              }
            }
          }
        },
        {
          "type": "standard",
          "deletable": true,
          "x": 1095,
          "y": 90,
          "instructions": [
            {
              "id": "ins-8fa4318bfa",
              "category": "Capture Information",
              "type": "capture",
              "entityId": "prompts://SingleChoice/v1",
              "entityName": "Single Choice",
              "kbPriority": {
                "enabled": true,
                "searchScope": "all",
                "kbs": []
              },
              "nodeId": "nd-364a03b68a",
              "question": {
                "valueType": "dynamic",
                "dynamicValue": "Is the information I‚Äôve listed above correct?",
                "staticValue": ""
              },
              "validation": {
                "validators": []
              },
              "choice": {
                "options": {
                  "valueType": "static",
                  "staticValue": [
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "yes",
                        "staticValue": null
                      },
                      "value": "yes",
                      "enabled": true
                    },
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "No",
                        "staticValue": null
                      },
                      "value": "No",
                      "enabled": true
                    }
                  ],
                  "dynamicValue": ""
                }
              },
              "retry": {
                "maxRetries": 2,
                "retryMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "dynamic"
                }
              },
              "cancellation": {
                "cancellable": true,
                "confirmCancel": true,
                "confirmCancelMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "handleFailure": false,
              "historyLookback": 0,
              "skipIfAlreadyFilled": false,
              "transitions": [
                {
                  "id": "trs-28964f4e8d",
                  "type": "transition",
                  "label": "yes",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=yes"
                  },
                  "destination": {
                    "node": "nd-4e14511117"
                  }
                },
                {
                  "id": "trs-c9e575abe6",
                  "type": "transition",
                  "label": "No",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=No"
                  },
                  "destination": {
                    "node": "nd-1175165879"
                  }
                }
              ],
              "prompt": {
                "messages": [
                  {
                    "role": "system",
                    "content": "You are ExtractGPT and your only goal is to generate useful content in JSON format for developers to parse and use. You don't know any other language than JSON."
                  },
                  {
                    "role": "user",
                    "content": "```typescript\n/** The user answer to the question \"Which one would you like? Choices: [ 1) Red Apple, 2) Yellow Apple, 3) Dark Banana ]\" */\ninterface Output = { choice: {{CHOICES_TYPINGS}} }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\nagent: Which one would you like? Choices: [ 1) Red Apple, 2) Yellow Apple, 3) Dark Banana ]\nuser: I will go with the second one please\n\"\"\""
                  },
                  {
                    "role": "assistant",
                    "content": "{\"choice\":\"Yellow Apple\"}"
                  },
                  {
                    "role": "user",
                    "content": "\nNow, forget about the previous transcripts. These were just examples, don't consider those as valid transcripts for this new task.\n\n###\n\nThe current Date is {{CURRENT_DATE_TIME}}.\n\nAt this point of the conversation, I need require the user to fill the output in following JSON output to complete the task.\nIf more than one property, try to extract each of them the best you can.\n\n```typescript\n/** The user answer to the question \"{{QUESTION}}\" */\ninterface Output = { choice: {{CHOICES_TYPINGS}} }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\n{{TRANSCRIPT}}\n\"\"\"\n\nIn the last user message, here are the entities found:\n\"\"\"\nENTITIES_IDENTIFIED\n\"\"\"\n\nI need you to extract from the conversation transcript above the values the user has provided.\nIf the user has not provided the information I need, I need you to set the value of the missing answer properties to null.\nHave some tolerance to typos and variations in how the user selects from the possible values.\n\n\n\nNow, please reply to me with the above JSON output and nothing but JSON.\nYou should not explain your answer and should not talk back to me. Just JSON."
                  }
                ],
                "model": "gpt-3.5-turbo",
                "temperature": 0,
                "signatureVersion": "Jan-2024",
                "signature": "bVu49Pre5q6DHlBFHgwm9WRpKblGPBZEVz9lE1T/kSknjafz8d4zyUGOUmre70ijj2brtSymiTuHw41rgUeoCl/HXkA3kpomvC1RU1QBili6tzgAvH+4CC1PGSL/kP+71QgVkqv73DXrN1UAAH60wru/Oc8nuHvtTKxeoghxZzkmwKpFWq9L8Appklcjf5Pr+4N2Q9JQtxsr4D2+SSc7cCBec71TQVpOxhmPHfxaaKfgzGV4PZbUFI0JZEkmMppHHz+6iTlkoeWG45ukpCwCw7ppjnps4TYI/bR2gWVOyN9J3mVYmZoH7pNY7UWjd/mB+HjubAfZAeNF7FXvVKzcrA=="
              }
            }
          ],
          "defaultTransition": {
            "targetNodeId": null
          },
          "id": "nd-364a03b68a",
          "name": "yesorno",
          "agentConfigOverrides": {
            "PersonalityAgent": {
              "active": false,
              "personality": {
                "valueType": "dynamic",
                "dynamicValue": "You are a helping agent to the users visiting the website and help them with answering all questions in a polite and kind way. Moreover add a smile emoji at the end of a greeting message.",
                "staticValue": ""
              }
            }
          }
        },
        {
          "type": "standard",
          "deletable": true,
          "x": -540,
          "y": -360,
          "instructions": [
            {
              "id": "ins-d86ac853cf",
              "category": "Send Messages",
              "type": "content",
              "content": {
                "type": "text",
                "text": {
                  "valueType": "dynamic",
                  "dynamicValue": "Kindly provide your name, email and phone number, so that we can get in touch with you! üòä",
                  "staticValue": ""
                },
                "typing": {
                  "valueType": "static",
                  "staticValue": true
                }
              },
              "nodeId": "nd-de2638d7c7",
              "transitions": []
            }
          ],
          "defaultTransition": {
            "targetNodeId": "nd-f6f6f35b97"
          },
          "id": "nd-de2638d7c7",
          "name": "Standard4",
          "agentConfigOverrides": {
            "PersonalityAgent": {
              "active": false,
              "personality": {
                "valueType": "dynamic",
                "dynamicValue": "You are a helping agent to the users visiting the website and help them with answering all questions in a polite and kind way. Moreover add a smile emoji at the end of a greeting message.",
                "staticValue": ""
              }
            }
          }
        },
        {
          "type": "standard",
          "deletable": true,
          "x": 1275,
          "y": 390,
          "instructions": [
            {
              "id": "ins-8a8a1580d2",
              "category": "Send Messages",
              "type": "content",
              "content": {
                "type": "text",
                "text": {
                  "valueType": "dynamic",
                  "dynamicValue": "okay please correct and try again",
                  "staticValue": ""
                },
                "typing": {
                  "valueType": "static",
                  "staticValue": true
                }
              },
              "nodeId": "nd-1175165879",
              "transitions": []
            }
          ],
          "defaultTransition": {
            "targetNodeId": "nd-f6f6f35b97"
          },
          "id": "nd-1175165879",
          "name": "Standard7",
          "agentConfigOverrides": {
            "PersonalityAgent": {
              "active": false,
              "personality": {
                "valueType": "dynamic",
                "dynamicValue": "You are a helping agent to the users visiting the website and help them with answering all questions in a polite and kind way. Moreover add a smile emoji at the end of a greeting message.",
                "staticValue": ""
              }
            }
          }
        },
        {
          "type": "standard",
          "deletable": true,
          "x": -120,
          "y": -810,
          "instructions": [
            {
              "id": "ins-7de202fcab",
              "category": "Capture Information",
              "type": "capture",
              "entityId": "prompts://SingleChoice/v1",
              "entityName": "Single Choice",
              "kbPriority": {
                "enabled": true,
                "searchScope": "all",
                "kbs": []
              },
              "nodeId": "nd-850900066f",
              "question": {
                "staticValue": "",
                "dynamicValue": "Still have questions",
                "valueType": "dynamic"
              },
              "validation": {
                "validators": []
              },
              "choice": {
                "options": {
                  "valueType": "static",
                  "staticValue": [
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "Contact Us",
                        "staticValue": null
                      },
                      "value": "Contact Us",
                      "enabled": true
                    },
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "Exit ",
                        "staticValue": null
                      },
                      "value": "Exit ",
                      "enabled": true
                    }
                  ],
                  "dynamicValue": ""
                }
              },
              "retry": {
                "maxRetries": 2,
                "retryMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "dynamic"
                }
              },
              "cancellation": {
                "cancellable": true,
                "confirmCancel": true,
                "confirmCancelMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "handleFailure": false,
              "historyLookback": 0,
              "skipIfAlreadyFilled": false,
              "transitions": [
                {
                  "id": "trs-3c4ba677fe",
                  "type": "transition",
                  "label": "Contact Us",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=Contact Us"
                  },
                  "destination": {
                    "node": "nd-de2638d7c7"
                  }
                },
                {
                  "id": "trs-e0d60566d9",
                  "type": "transition",
                  "label": "Exit ",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=Exit "
                  },
                  "destination": {
                    "node": "nd-760183eda7"
                  }
                }
              ],
              "prompt": {
                "messages": [
                  {
                    "role": "system",
                    "content": "You are ExtractGPT and your only goal is to generate useful content in JSON format for developers to parse and use. You don't know any other language than JSON."
                  },
                  {
                    "role": "user",
                    "content": "```typescript\n/** The user answer to the question \"Which one would you like? Choices: [ 1) Red Apple, 2) Yellow Apple, 3) Dark Banana ]\" */\ninterface Output = { choice: {{CHOICES_TYPINGS}} }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\nagent: Which one would you like? Choices: [ 1) Red Apple, 2) Yellow Apple, 3) Dark Banana ]\nuser: I will go with the second one please\n\"\"\""
                  },
                  {
                    "role": "assistant",
                    "content": "{\"choice\":\"Yellow Apple\"}"
                  },
                  {
                    "role": "user",
                    "content": "\nNow, forget about the previous transcripts. These were just examples, don't consider those as valid transcripts for this new task.\n\n###\n\nThe current Date is {{CURRENT_DATE_TIME}}.\n\nAt this point of the conversation, I need require the user to fill the output in following JSON output to complete the task.\nIf more than one property, try to extract each of them the best you can.\n\n```typescript\n/** The user answer to the question \"{{QUESTION}}\" */\ninterface Output = { choice: {{CHOICES_TYPINGS}} }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\n{{TRANSCRIPT}}\n\"\"\"\n\nIn the last user message, here are the entities found:\n\"\"\"\nENTITIES_IDENTIFIED\n\"\"\"\n\nI need you to extract from the conversation transcript above the values the user has provided.\nIf the user has not provided the information I need, I need you to set the value of the missing answer properties to null.\nHave some tolerance to typos and variations in how the user selects from the possible values.\n\n\n\nNow, please reply to me with the above JSON output and nothing but JSON.\nYou should not explain your answer and should not talk back to me. Just JSON."
                  }
                ],
                "model": "gpt-3.5-turbo",
                "temperature": 0,
                "signatureVersion": "Jan-2024",
                "signature": "bVu49Pre5q6DHlBFHgwm9WRpKblGPBZEVz9lE1T/kSknjafz8d4zyUGOUmre70ijj2brtSymiTuHw41rgUeoCl/HXkA3kpomvC1RU1QBili6tzgAvH+4CC1PGSL/kP+71QgVkqv73DXrN1UAAH60wru/Oc8nuHvtTKxeoghxZzkmwKpFWq9L8Appklcjf5Pr+4N2Q9JQtxsr4D2+SSc7cCBec71TQVpOxhmPHfxaaKfgzGV4PZbUFI0JZEkmMppHHz+6iTlkoeWG45ukpCwCw7ppjnps4TYI/bR2gWVOyN9J3mVYmZoH7pNY7UWjd/mB+HjubAfZAeNF7FXvVKzcrA=="
              }
            }
          ],
          "defaultTransition": {
            "targetNodeId": null
          },
          "id": "nd-850900066f",
          "name": "Standard9"
        },
        {
          "type": "standard",
          "deletable": true,
          "x": -1335,
          "y": -15,
          "instructions": [
            {
              "id": "ins-ec240b5cdc",
              "category": "Capture Information",
              "type": "capture",
              "entityId": "prompts://RawInput/v1",
              "entityName": "Raw Input",
              "kbPriority": {
                "enabled": true,
                "searchScope": "all",
                "kbs": []
              },
              "nodeId": "nd-a9db711d52",
              "variableId": "var-399a81b3fe",
              "question": {
                "staticValue": "",
                "dynamicValue": "Please provide your name ",
                "valueType": "dynamic"
              },
              "validation": {
                "validators": []
              },
              "choice": {
                "options": {
                  "staticValue": [],
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "retry": {
                "maxRetries": 2,
                "retryMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "dynamic"
                }
              },
              "cancellation": {
                "cancellable": true,
                "confirmCancel": true,
                "confirmCancelMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "handleFailure": false,
              "historyLookback": 0,
              "skipIfAlreadyFilled": false,
              "transitions": [],
              "prompt": {
                "messages": [
                  {
                    "role": "system",
                    "content": "You are ExtractGPT and your only goal is to generate useful content in JSON format for developers to parse and use. You don't know any other language than JSON."
                  },
                  {
                    "role": "user",
                    "content": "```typescript\n/** The user answer to the question \"undefined\" */\ninterface Output = { value: any }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\nagent: undefined\nuser: undefined\n\"\"\""
                  },
                  {
                    "role": "assistant",
                    "content": "{}"
                  },
                  {
                    "role": "user",
                    "content": "\nNow, forget about the previous transcripts. These were just examples, don't consider those as valid transcripts for this new task.\n\n###\n\nThe current Date is {{CURRENT_DATE_TIME}}.\n\nAt this point of the conversation, I need require the user to fill the output in following JSON output to complete the task.\nIf more than one property, try to extract each of them the best you can.\n\n```typescript\n/** The user answer to the question \"{{QUESTION}}\" */\ninterface Output = { value: any }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\n{{TRANSCRIPT}}\n\"\"\"\n\nIn the last user message, here are the entities found:\n\"\"\"\nENTITIES_IDENTIFIED\n\"\"\"\n\nI need you to extract from the conversation transcript above the values the user has provided.\nIf the user has not provided the information I need, I need you to set the value of the missing answer properties to null.\nHave some tolerance to typos and variations in how the user selects from the possible values.\n\n\n\nNow, please reply to me with the above JSON output and nothing but JSON.\nYou should not explain your answer and should not talk back to me. Just JSON."
                  }
                ],
                "model": "gpt-3.5-turbo",
                "temperature": 0,
                "signatureVersion": "Jan-2024",
                "signature": "wsDIMaSsJ1YTaWLaNEaV5IgB+C2qyh801nUa4CdCsmubxvThog1rJ7tYXwHKDnA4cpOm6gnznXN6AdKJSoh/tbRxO1abxj04bRbCn9y7BZ8i3qZQl1Le5PIaAmfampxeHFl8IasZNZYi5uWVQnd1IPS3iFv6wYhBGa/EPlz+AagSKdqmn11u/DSAfrYixnA2rW+XEORrVeVMt1P8zFU7ssoTSSNt7LZh1xmH0amoWFad2vSDxu/2eU55NZSGFlB8a1soPEGYq83QN6mHXldjsO1mEV7cHWsSBZPTXG37GipXEbYKe/9sQNwg6mpBLIuvbliiJ9DvjkkSyXQVkVhTyg=="
              }
            },
            {
              "id": "ins-03521d8d7b",
              "category": "Capture Information",
              "type": "capture",
              "entityId": "prompts://Email/v1",
              "entityName": "Email Address",
              "kbPriority": {
                "enabled": true,
                "searchScope": "all",
                "kbs": []
              },
              "nodeId": "nd-a9db711d52",
              "variableId": "var-84726798d8",
              "question": {
                "valueType": "dynamic",
                "dynamicValue": "Please provide your email address to receive our tech newsletter.",
                "staticValue": ""
              },
              "validation": {
                "validators": []
              },
              "choice": {
                "options": {
                  "staticValue": [],
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "retry": {
                "maxRetries": 2,
                "retryMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "dynamic"
                }
              },
              "cancellation": {
                "cancellable": true,
                "confirmCancel": true,
                "confirmCancelMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "handleFailure": false,
              "historyLookback": 0,
              "skipIfAlreadyFilled": false,
              "transitions": [],
              "prompt": {
                "messages": [
                  {
                    "role": "system",
                    "content": "You are ExtractGPT and your only goal is to generate useful content in JSON format for developers to parse and use. You don't know any other language than JSON."
                  },
                  {
                    "role": "user",
                    "content": "```typescript\n/** The user answer to the question \"At which email can we send you updates?\" */\ninterface Output = { isValidEmail: boolean; email?: string }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\nagent: At which email can we send you updates?\nuser: send it to ploik.rebekka@century-link.uk\n\"\"\""
                  },
                  {
                    "role": "assistant",
                    "content": "{\"isValidEmail\":true,\"email\":\"ploik.rebekka@century-link.uk\"}"
                  },
                  {
                    "role": "user",
                    "content": "\nNow, forget about the previous transcripts. These were just examples, don't consider those as valid transcripts for this new task.\n\n###\n\nThe current Date is {{CURRENT_DATE_TIME}}.\n\nAt this point of the conversation, I need require the user to fill the output in following JSON output to complete the task.\nIf more than one property, try to extract each of them the best you can.\n\n```typescript\n/** The user answer to the question \"{{QUESTION}}\" */\ninterface Output = { isValidEmail: boolean; email?: string }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\n{{TRANSCRIPT}}\n\"\"\"\n\nIn the last user message, here are the entities found:\n\"\"\"\nENTITIES_IDENTIFIED\n\"\"\"\n\nI need you to extract from the conversation transcript above the values the user has provided.\nIf the user has not provided the information I need, I need you to set the value of the missing answer properties to null.\nHave some tolerance to typos and variations in how the user selects from the possible values.\n\nIdentify and extract a valid email address, considering the standard format \"local.part.450@domain.com\". To be valid, the email must be composed of 3 parts in that order: a username (example: foobar.gaston) followed by a \"@\"; a domain name (example: @gmail) followed by a \".\"; a top-level domain name (example: .com).\n\nNow, please reply to me with the above JSON output and nothing but JSON.\nYou should not explain your answer and should not talk back to me. Just JSON."
                  }
                ],
                "model": "gpt-3.5-turbo",
                "temperature": 0,
                "signatureVersion": "Jan-2024",
                "signature": "Ood1dRcqukJmenOmZfPWj4pzu0fNLOHe4aIS06tJW8wypLvX4LJEzbLI+BKt7X+lkgAlqv8xaUfvUVhMMA4XY4JjOYVIdsN126mbqljzMaX/fdliKQsPmP7Sou2v6Un6qOx9fQY59YwqqXotN1lWgNXBaDIkbOqwn8Ka/v2A8g6nOJq1oF5ao+pgdTdGQqKyKvADShevhmuZijsBfcpwJnbznVNRvmVRQ9sQ/7GB7aJ5uvFrbMvCG7TwexdvVK+ZpG02wct7AVyBUSqIdCxh4gntFAD4xiIVuJHG5ctkc4ih2viPCnRdZ+nBxHZPNOI09A97FJpBcrFTZGOcAzoAog=="
              }
            },
            {
              "id": "ins-48f191d732",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "true"
              },
              "label": "always",
              "generative": {
                "label": "always",
                "suggestion": {
                  "condition": "true"
                },
                "properties": {
                  "condition": true
                }
              },
              "category": "Flow Logic",
              "nodeId": "nd-a9db711d52",
              "description": "",
              "destination": {
                "node": "nd-2d31982bb5"
              },
              "transitions": []
            }
          ],
          "defaultTransition": {
            "targetNodeId": null
          },
          "id": "nd-a9db711d52",
          "name": "Newsletter",
          "agentConfigOverrides": {
            "PersonalityAgent": {
              "active": false,
              "personality": {
                "valueType": "dynamic",
                "dynamicValue": "You are a helping agent to the users visiting the website and help them with answering all questions in a polite and kind way. Moreover add a smile emoji at the end of a greeting message.",
                "staticValue": ""
              }
            }
          }
        },
        {
          "type": "standard",
          "deletable": true,
          "x": -1320,
          "y": 225,
          "instructions": [
            {
              "id": "ins-18bd6fd7b0",
              "type": "action",
              "code": "const webhookUrl = \"https://hooks.zapier.com/hooks/catch/19262308/2318r1i/\"\r\nconst payload = {\r\n    email: workflow.newsletteremail,\r\n    name : workflow.newslettername,\r\n}\r\ntry{\r\n  const response = await axios.post(webhookUrl, payload)\r\n  console.log(response.data)\r\n}catch (error) {\r\n  console.log(\"failed\")\r\n}\r\n\r\n",
              "origin": "builtin",
              "category": "Execute",
              "nodeId": "nd-2d31982bb5",
              "label": "Post newsletter subscription data to a webhook URL.",
              "isCustomLabel": false,
              "transpiledCode": "var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nasync function __ROOT__() {\n  const webhookUrl = \"https://hooks.zapier.com/hooks/catch/19262308/2318r1i/\";\n  const payload = {\n    email: workflow.newsletteremail,\n    name: workflow.newslettername\n  };\n  try {\n    const response = await axios.post(webhookUrl, payload);\n    console.log(response.data);\n  } catch (error) {\n    console.log(\"failed\");\n  }\n  ;\n}\n__name(__ROOT__, \"__ROOT__\");\n; return await __ROOT__();",
              "transitions": []
            },
            {
              "id": "ins-cb44118028",
              "category": "Send Messages",
              "type": "content",
              "content": {
                "type": "text",
                "text": {
                  "valueType": "dynamic",
                  "dynamicValue": "Thankyou! we have sent a confirmation email to your inbox",
                  "staticValue": ""
                },
                "typing": {
                  "valueType": "static",
                  "staticValue": true
                }
              },
              "nodeId": "nd-2d31982bb5",
              "transitions": []
            }
          ],
          "defaultTransition": {
            "targetNodeId": null
          },
          "id": "nd-2d31982bb5",
          "name": "Zapier_webhook"
        },
        {
          "type": "standard",
          "deletable": true,
          "x": -585,
          "y": -90,
          "instructions": [
            {
              "id": "ins-d55f50b8f5",
              "category": "Capture Information",
              "type": "capture",
              "entityId": "prompts://RawInput/v1",
              "entityName": "Raw Input",
              "kbPriority": {
                "enabled": true,
                "searchScope": "all",
                "kbs": []
              },
              "nodeId": "nd-370ca72426",
              "question": {
                "staticValue": "",
                "dynamicValue": "Ask me your query",
                "valueType": "dynamic"
              },
              "validation": {
                "validators": []
              },
              "choice": {
                "options": {
                  "staticValue": [],
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "retry": {
                "maxRetries": 2,
                "retryMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "dynamic"
                }
              },
              "cancellation": {
                "cancellable": true,
                "confirmCancel": true,
                "confirmCancelMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "handleFailure": false,
              "historyLookback": 0,
              "skipIfAlreadyFilled": false,
              "transitions": [],
              "prompt": {
                "messages": [
                  {
                    "role": "system",
                    "content": "You are ExtractGPT and your only goal is to generate useful content in JSON format for developers to parse and use. You don't know any other language than JSON."
                  },
                  {
                    "role": "user",
                    "content": "```typescript\n/** The user answer to the question \"undefined\" */\ninterface Output = { value: any }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\nagent: undefined\nuser: undefined\n\"\"\""
                  },
                  {
                    "role": "assistant",
                    "content": "{}"
                  },
                  {
                    "role": "user",
                    "content": "\nNow, forget about the previous transcripts. These were just examples, don't consider those as valid transcripts for this new task.\n\n###\n\nThe current Date is {{CURRENT_DATE_TIME}}.\n\nAt this point of the conversation, I need require the user to fill the output in following JSON output to complete the task.\nIf more than one property, try to extract each of them the best you can.\n\n```typescript\n/** The user answer to the question \"{{QUESTION}}\" */\ninterface Output = { value: any }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\n{{TRANSCRIPT}}\n\"\"\"\n\nIn the last user message, here are the entities found:\n\"\"\"\nENTITIES_IDENTIFIED\n\"\"\"\n\nI need you to extract from the conversation transcript above the values the user has provided.\nIf the user has not provided the information I need, I need you to set the value of the missing answer properties to null.\nHave some tolerance to typos and variations in how the user selects from the possible values.\n\n\n\nNow, please reply to me with the above JSON output and nothing but JSON.\nYou should not explain your answer and should not talk back to me. Just JSON."
                  }
                ],
                "model": "gpt-3.5-turbo",
                "temperature": 0,
                "signatureVersion": "Jan-2024",
                "signature": "wsDIMaSsJ1YTaWLaNEaV5IgB+C2qyh801nUa4CdCsmubxvThog1rJ7tYXwHKDnA4cpOm6gnznXN6AdKJSoh/tbRxO1abxj04bRbCn9y7BZ8i3qZQl1Le5PIaAmfampxeHFl8IasZNZYi5uWVQnd1IPS3iFv6wYhBGa/EPlz+AagSKdqmn11u/DSAfrYixnA2rW+XEORrVeVMt1P8zFU7ssoTSSNt7LZh1xmH0amoWFad2vSDxu/2eU55NZSGFlB8a1soPEGYq83QN6mHXldjsO1mEV7cHWsSBZPTXG37GipXEbYKe/9sQNwg6mpBLIuvbliiJ9DvjkkSyXQVkVhTyg=="
              },
              "variableId": "var-0135899fd2"
            },
            {
              "id": "ins-3121c6ccf5",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "{{turn.KnowledgeAgent.responded}}"
              },
              "label": "",
              "generative": {
                "label": "",
                "suggestion": {
                  "condition": "true"
                },
                "properties": {
                  "condition": false
                }
              },
              "category": "Flow Logic",
              "nodeId": "nd-370ca72426",
              "description": "",
              "destination": {
                "node": "nd-617e220313"
              },
              "transitions": []
            },
            {
              "id": "ins-9e2ccda59a",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "{{!turn.KnowledgeAgent.responded}}"
              },
              "label": "",
              "generative": {
                "label": "",
                "suggestion": {
                  "condition": "true"
                },
                "properties": {
                  "condition": false
                }
              },
              "category": "Flow Logic",
              "nodeId": "nd-370ca72426",
              "description": "",
              "destination": {
                "node": "nd-24f8c3d0f7"
              },
              "transitions": []
            }
          ],
          "defaultTransition": {
            "targetNodeId": "nd-617e220313"
          },
          "id": "nd-370ca72426",
          "name": "Standard10",
          "agentConfigOverrides": {
            "PersonalityAgent": {
              "active": false,
              "personality": {
                "valueType": "dynamic",
                "dynamicValue": "You are a helping agent to the users visiting the website and help them with answering all questions in a polite and kind way. Moreover add a smile emoji at the end of a greeting message.",
                "staticValue": ""
              }
            }
          }
        },
        {
          "type": "standard",
          "deletable": true,
          "x": -120,
          "y": -465,
          "instructions": [
            {
              "id": "ins-525b324aa4",
              "category": "Capture Information",
              "type": "capture",
              "entityId": "prompts://MultiChoice/v1",
              "entityName": "Multiple Choice",
              "kbPriority": {
                "enabled": true,
                "searchScope": "all",
                "kbs": []
              },
              "nodeId": "nd-617e220313",
              "question": {
                "valueType": "dynamic",
                "dynamicValue": "Still need assistance ",
                "staticValue": ""
              },
              "validation": {
                "validators": []
              },
              "choice": {
                "options": {
                  "valueType": "static",
                  "staticValue": [
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "Talk to an agent",
                        "staticValue": null
                      },
                      "value": "Talk to an agent",
                      "enabled": true
                    },
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "yes, talk to me ",
                        "staticValue": null
                      },
                      "value": "yes, talk to me ",
                      "enabled": true
                    },
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "No, I don't have any questions",
                        "staticValue": null
                      },
                      "value": "No, I don't have any questions",
                      "enabled": true
                    }
                  ],
                  "dynamicValue": ""
                }
              },
              "retry": {
                "maxRetries": 2,
                "retryMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "dynamic"
                }
              },
              "cancellation": {
                "cancellable": true,
                "confirmCancel": true,
                "confirmCancelMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "handleFailure": false,
              "historyLookback": 0,
              "skipIfAlreadyFilled": false,
              "transitions": [
                {
                  "id": "trs-a2595727e1",
                  "type": "transition",
                  "label": "Talk to an agent",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=Talk to an agent"
                  },
                  "destination": {
                    "node": "nd-714c1326ab"
                  }
                },
                {
                  "id": "trs-4bbac90782",
                  "type": "transition",
                  "label": "yes, talk to me ",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=yes, talk to me "
                  },
                  "destination": {
                    "node": "nd-370ca72426"
                  }
                },
                {
                  "id": "trs-587ef05dc4",
                  "type": "transition",
                  "label": "No, I don't have any questions",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=No, I don't have any questions"
                  },
                  "destination": {
                    "node": "nd-760183eda7"
                  }
                }
              ],
              "prompt": {
                "messages": [
                  {
                    "role": "system",
                    "content": "You are ExtractGPT and your only goal is to generate useful content in JSON format for developers to parse and use. You don't know any other language than JSON."
                  },
                  {
                    "role": "user",
                    "content": "```typescript\n/** The user answer to the question \"Which one would you like? Choices: [ 1) Red Apple, 2) Yellow Apple, 3) Dark Banana ]\" */\ninterface Output = { choices: Array<{{CHOICES_TYPINGS}}> }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\nagent: Which one would you like? Choices: [ 1) Red Apple, 2) Yellow Apple, 3) Dark Banana ]\nuser: I will go with the second one and the banana please\n\"\"\""
                  },
                  {
                    "role": "assistant",
                    "content": "{\"choices\":[\"Yellow Apple\",\"Dark Banana\"]}"
                  },
                  {
                    "role": "user",
                    "content": "\nNow, forget about the previous transcripts. These were just examples, don't consider those as valid transcripts for this new task.\n\n###\n\nThe current Date is {{CURRENT_DATE_TIME}}.\n\nAt this point of the conversation, I need require the user to fill the output in following JSON output to complete the task.\nIf more than one property, try to extract each of them the best you can.\n\n```typescript\n/** The user answer to the question \"{{QUESTION}}\" */\ninterface Output = { choices: Array<{{CHOICES_TYPINGS}}> }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\n{{TRANSCRIPT}}\n\"\"\"\n\nIn the last user message, here are the entities found:\n\"\"\"\nENTITIES_IDENTIFIED\n\"\"\"\n\nI need you to extract from the conversation transcript above the values the user has provided.\nIf the user has not provided the information I need, I need you to set the value of the missing answer properties to null.\nHave some tolerance to typos and variations in how the user selects from the possible values.\n\n\n\nNow, please reply to me with the above JSON output and nothing but JSON.\nYou should not explain your answer and should not talk back to me. Just JSON."
                  }
                ],
                "model": "gpt-3.5-turbo",
                "temperature": 0,
                "signatureVersion": "Jan-2024",
                "signature": "hSbVLRZ/6JSGgHAn3FVLlszKfXTtP97MNLVVqMWLOPwPrUBMSYw/wsSE07vPspugeNnqlR+InKv9oKpSS2q6KpT13ez6brbWRc5hMRlSiwgRMrd4AYd72ToN5Jhw574axVG08+xYj3MbKuAcLAmaKKwiJeeqv1iOdBTGf/3zbzxRT9bSC0ohAR74sqC9n5OYxjrd2LtlorBuyBQRywJeukRPk8Q8/PHadU9SFXgfcNxrx8ZZBKKLD9XjMcofihdS3fOaMaDHXJJkhBB73Audmvg8Qa6SbOIWihqGJ+Xa4vLKdtlR5eQxyK0xLZDTNbaiqDzgVb1ZDJXizNB8RYwU9g=="
              }
            }
          ],
          "defaultTransition": {
            "targetNodeId": "nd-370ca72426"
          },
          "id": "nd-617e220313",
          "name": "query_found",
          "agentConfigOverrides": {
            "PersonalityAgent": {
              "active": false,
              "personality": {
                "valueType": "dynamic",
                "dynamicValue": "You are a helping agent to the users visiting the website and help them with answering all questions in a polite and kind way. Moreover add a smile emoji at the end of a greeting message.",
                "staticValue": ""
              }
            }
          }
        },
        {
          "type": "standard",
          "deletable": true,
          "x": -900,
          "y": -1170,
          "instructions": [
            {
              "id": "ins-09ee018fc5",
              "category": "Send Messages",
              "type": "content",
              "content": {
                "type": "text",
                "text": {
                  "valueType": "dynamic",
                  "dynamicValue": "Our company offers robotics services, cloud solutions, and RPA for various industries to enhance efficiency. We operate from 9 AM to 6 PM and are located in Windsor, Ontario. For support, contact us at info@matacs.com or (+1) 519 915 1330.",
                  "staticValue": ""
                },
                "typing": {
                  "valueType": "static",
                  "staticValue": true
                }
              },
              "nodeId": "nd-0a7b23d69e",
              "transitions": []
            }
          ],
          "defaultTransition": {
            "targetNodeId": null
          },
          "id": "nd-0a7b23d69e",
          "name": "general_info"
        },
        {
          "type": "standard",
          "deletable": true,
          "x": 210,
          "y": 450,
          "instructions": [
            {
              "id": "ins-41ea9d5a90",
              "type": "skill",
              "name": "Connect to an agent",
              "flowId": "wf-55f9efcb4a",
              "exitNodes": [
                "nd-855e61f43f"
              ],
              "transitions": [
                {
                  "id": "trs-6a437f547c",
                  "type": "transition",
                  "label": "Exit",
                  "condition": {
                    "type": "expression",
                    "payload": "lastNode=nd-855e61f43f"
                  },
                  "destination": {},
                  "generative": {
                    "label": "Exit",
                    "properties": {
                      "label": true,
                      "condition": true
                    },
                    "suggestion": {
                      "label": "Exit",
                      "condition": "lastNode=nd-855e61f43f"
                    }
                  }
                }
              ],
              "category": "Flow Logic",
              "nodeId": "nd-714c1326ab"
            }
          ],
          "defaultTransition": {
            "targetNodeId": null
          },
          "id": "nd-714c1326ab",
          "name": "Standard14"
        },
        {
          "type": "standard",
          "deletable": true,
          "x": -165,
          "y": -1605,
          "instructions": [
            {
              "id": "ins-77412ad693",
              "category": "Send Messages",
              "type": "content",
              "content": {
                "type": "text",
                "text": {
                  "valueType": "dynamic",
                  "dynamicValue": "To learn more, you can click on the below link:https://matacs.com/food-industry/",
                  "staticValue": ""
                },
                "typing": {
                  "valueType": "static",
                  "staticValue": true
                }
              },
              "nodeId": "nd-f82a86d126",
              "transitions": []
            },
            {
              "id": "ins-0de982a280",
              "category": "Capture Information",
              "type": "capture",
              "entityId": "prompts://RawInput/v1",
              "entityName": "Raw Input",
              "kbPriority": {
                "enabled": true,
                "searchScope": "all",
                "kbs": []
              },
              "nodeId": "nd-f82a86d126",
              "question": {
                "staticValue": "",
                "dynamicValue": "Still have any questions ask me, I am here to help : )",
                "valueType": "dynamic"
              },
              "validation": {
                "validators": []
              },
              "choice": {
                "options": {
                  "staticValue": [],
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "retry": {
                "maxRetries": 2,
                "retryMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "dynamic"
                }
              },
              "cancellation": {
                "cancellable": true,
                "confirmCancel": true,
                "confirmCancelMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "handleFailure": false,
              "historyLookback": 0,
              "skipIfAlreadyFilled": false,
              "transitions": [],
              "prompt": {
                "messages": [
                  {
                    "role": "system",
                    "content": "You are ExtractGPT and your only goal is to generate useful content in JSON format for developers to parse and use. You don't know any other language than JSON."
                  },
                  {
                    "role": "user",
                    "content": "```typescript\n/** The user answer to the question \"undefined\" */\ninterface Output = { value: any }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\nagent: undefined\nuser: undefined\n\"\"\""
                  },
                  {
                    "role": "assistant",
                    "content": "{}"
                  },
                  {
                    "role": "user",
                    "content": "\nNow, forget about the previous transcripts. These were just examples, don't consider those as valid transcripts for this new task.\n\n###\n\nThe current Date is {{CURRENT_DATE_TIME}}.\n\nAt this point of the conversation, I need require the user to fill the output in following JSON output to complete the task.\nIf more than one property, try to extract each of them the best you can.\n\n```typescript\n/** The user answer to the question \"{{QUESTION}}\" */\ninterface Output = { value: any }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\n{{TRANSCRIPT}}\n\"\"\"\n\nIn the last user message, here are the entities found:\n\"\"\"\nENTITIES_IDENTIFIED\n\"\"\"\n\nI need you to extract from the conversation transcript above the values the user has provided.\nIf the user has not provided the information I need, I need you to set the value of the missing answer properties to null.\nHave some tolerance to typos and variations in how the user selects from the possible values.\n\n\n\nNow, please reply to me with the above JSON output and nothing but JSON.\nYou should not explain your answer and should not talk back to me. Just JSON."
                  }
                ],
                "model": "gpt-3.5-turbo",
                "temperature": 0,
                "signatureVersion": "Jan-2024",
                "signature": "wsDIMaSsJ1YTaWLaNEaV5IgB+C2qyh801nUa4CdCsmubxvThog1rJ7tYXwHKDnA4cpOm6gnznXN6AdKJSoh/tbRxO1abxj04bRbCn9y7BZ8i3qZQl1Le5PIaAmfampxeHFl8IasZNZYi5uWVQnd1IPS3iFv6wYhBGa/EPlz+AagSKdqmn11u/DSAfrYixnA2rW+XEORrVeVMt1P8zFU7ssoTSSNt7LZh1xmH0amoWFad2vSDxu/2eU55NZSGFlB8a1soPEGYq83QN6mHXldjsO1mEV7cHWsSBZPTXG37GipXEbYKe/9sQNwg6mpBLIuvbliiJ9DvjkkSyXQVkVhTyg=="
              },
              "variableId": "var-ef768df6c2"
            },
            {
              "id": "ins-47e57ce8b7",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "{{turn.KnowledgeAgent.responded}}"
              },
              "label": "",
              "generative": {
                "label": "",
                "suggestion": {
                  "condition": "true"
                },
                "properties": {
                  "condition": false
                }
              },
              "category": "Flow Logic",
              "nodeId": "nd-f82a86d126",
              "description": "",
              "destination": {
                "node": "nd-617e220313"
              },
              "transitions": []
            },
            {
              "id": "ins-638cc3965d",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "{{!turn.KnowledgeAgent.responded}}"
              },
              "label": "",
              "generative": {
                "label": "",
                "suggestion": {
                  "condition": "true"
                },
                "properties": {
                  "condition": false
                }
              },
              "category": "Flow Logic",
              "nodeId": "nd-f82a86d126",
              "description": "",
              "destination": {
                "node": "nd-24f8c3d0f7"
              },
              "transitions": []
            }
          ],
          "defaultTransition": {
            "targetNodeId": null
          },
          "id": "nd-f82a86d126",
          "name": "Food",
          "agentConfigOverrides": {
            "PersonalityAgent": {
              "active": false,
              "personality": {
                "valueType": "dynamic",
                "dynamicValue": "You are a helping agent to the users visiting the website and help them with answering all questions in a polite and kind way. Moreover add a smile emoji at the end of a greeting message.",
                "staticValue": ""
              }
            }
          }
        },
        {
          "type": "standard",
          "deletable": true,
          "x": 915,
          "y": 705,
          "instructions": [
            {
              "id": "ins-4f8fb50b68",
              "type": "skill",
              "name": "Connect to an agent",
              "flowId": "wf-55f9efcb4a",
              "exitNodes": [
                "nd-855e61f43f"
              ],
              "transitions": [
                {
                  "id": "trs-2b5a8ffa8e",
                  "type": "transition",
                  "label": "Exit",
                  "condition": {
                    "type": "expression",
                    "payload": "lastNode=nd-855e61f43f"
                  },
                  "destination": {},
                  "generative": {
                    "label": "Exit",
                    "properties": {
                      "label": true,
                      "condition": true
                    },
                    "suggestion": {
                      "label": "Exit",
                      "condition": "lastNode=nd-855e61f43f"
                    }
                  }
                }
              ],
              "category": "Flow Logic",
              "nodeId": "nd-39506e72c6"
            }
          ],
          "defaultTransition": {
            "targetNodeId": null
          },
          "id": "nd-39506e72c6",
          "name": "Standard11"
        },
        {
          "type": "standard",
          "deletable": true,
          "x": -2370,
          "y": 390,
          "instructions": [
            {
              "id": "ins-b151f88f6e",
              "type": "skill",
              "name": "Have another Query",
              "flowId": "wf-4b91d217d1",
              "exitNodes": [
                "nd-48fee97e48"
              ],
              "transitions": [
                {
                  "id": "trs-6059cede53",
                  "type": "transition",
                  "label": "Exit",
                  "condition": {
                    "type": "expression",
                    "payload": "lastNode=nd-48fee97e48"
                  },
                  "destination": {
                    "node": "nd-f9321f2f74"
                  },
                  "generative": {
                    "label": "Exit",
                    "properties": {
                      "label": true,
                      "condition": true
                    },
                    "suggestion": {
                      "label": "Exit",
                      "condition": "lastNode=nd-48fee97e48"
                    }
                  }
                }
              ],
              "category": "Flow Logic",
              "nodeId": "nd-a96cd12e93",
              "manualFields": []
            }
          ],
          "defaultTransition": {
            "targetNodeId": null
          },
          "id": "nd-a96cd12e93",
          "name": "Standard12"
        },
        {
          "type": "end",
          "deletable": true,
          "x": -585,
          "y": -615,
          "instructions": [
            {
              "id": "trs-3169c8f1a5",
              "type": "transition",
              "label": "",
              "condition": {
                "type": "expression",
                "payload": "true"
              },
              "destination": {
                "node": "END"
              },
              "generative": {
                "label": "",
                "properties": {
                  "label": true,
                  "condition": true
                },
                "suggestion": {
                  "label": "",
                  "condition": "true"
                }
              },
              "nodeId": "nd-f9321f2f74",
              "transitions": []
            }
          ],
          "id": "nd-f9321f2f74",
          "name": "End2"
        },
        {
          "type": "standard",
          "deletable": true,
          "x": -1950,
          "y": -210,
          "instructions": [
            {
              "id": "ins-6d8f9bf59e",
              "category": "Send Messages",
              "type": "content",
              "content": {
                "type": "text",
                "text": {
                  "valueType": "dynamic",
                  "dynamicValue": "Welcome to our conversation!",
                  "staticValue": ""
                },
                "typing": {
                  "valueType": "static",
                  "staticValue": true
                }
              },
              "nodeId": "nd-10bb5ee618",
              "transitions": []
            }
          ],
          "defaultTransition": {
            "targetNodeId": "nd-0382fa065d"
          },
          "id": "nd-10bb5ee618",
          "name": "Standard1",
          "agentConfigOverrides": {
            "PersonalityAgent": {
              "active": false,
              "personality": {
                "valueType": "dynamic",
                "dynamicValue": "You are a helping agent to the users visiting the website and help them with answering all questions in a polite and kind way. Moreover add a smile emoji at the end of a greeting message.",
                "staticValue": ""
              }
            }
          }
        },
        {
          "deletable": true,
          "x": -2310,
          "y": -180,
          "type": "trigger",
          "integrationId": "webchat",
          "triggerId": "conversationStarted",
          "instructions": [
            {
              "id": "trs-a795bf0d26",
              "type": "transition",
              "label": "",
              "condition": {
                "type": "expression",
                "payload": "true"
              },
              "destination": {
                "node": "nd-10bb5ee618"
              },
              "generative": {
                "label": "",
                "properties": {
                  "label": true,
                  "condition": true
                },
                "suggestion": {
                  "label": "",
                  "condition": "true"
                }
              },
              "nodeId": "nd-03f77cab27",
              "transitions": []
            }
          ],
          "id": "nd-03f77cab27",
          "name": "Trigger1",
          "examples": []
        }
      ],
      "parentFolder": "root"
    },
    {
      "id": "wf-55f9efcb4a",
      "name": "Connect to an agent",
      "startNode": "nd-ada151be00",
      "variables": [],
      "links": [],
      "nodes": [
        {
          "id": "nd-ada151be00",
          "name": "Entry",
          "type": "entry",
          "deletable": false,
          "variables": [],
          "instructions": [
            {
              "id": "trs-1869740565",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "true"
              },
              "destination": {
                "node": "nd-5ddf430c9e"
              },
              "transitions": [],
              "nodeId": "nd-ada151be00"
            }
          ],
          "x": 15,
          "y": 120
        },
        {
          "id": "nd-855e61f43f",
          "name": "Exit",
          "type": "exit",
          "variables": [],
          "deletable": false,
          "instructions": [
            {
              "id": "trs-f50543bfa0",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "true"
              },
              "destination": {
                "node": "#"
              },
              "transitions": [],
              "nodeId": "nd-855e61f43f"
            }
          ],
          "x": 800,
          "y": 100
        },
        {
          "type": "standard",
          "deletable": true,
          "x": 450,
          "y": 135,
          "instructions": [
            {
              "id": "ins-8a93d5f12a",
              "category": "Capture Information",
              "type": "capture",
              "entityId": "prompts://RawInput/v1",
              "entityName": "Raw Input",
              "kbPriority": {
                "enabled": true,
                "searchScope": "all",
                "kbs": []
              },
              "nodeId": "nd-5ddf430c9e",
              "variableId": "var-4c79878aa8",
              "question": {
                "valueType": "dynamic",
                "dynamicValue": "Please provide your name",
                "staticValue": ""
              },
              "validation": {
                "validators": []
              },
              "choice": {
                "options": {
                  "staticValue": [],
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "retry": {
                "maxRetries": 2,
                "retryMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "dynamic"
                }
              },
              "cancellation": {
                "cancellable": true,
                "confirmCancel": true,
                "confirmCancelMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "handleFailure": false,
              "historyLookback": 0,
              "skipIfAlreadyFilled": false,
              "transitions": [],
              "prompt": {
                "messages": [
                  {
                    "role": "system",
                    "content": "You are ExtractGPT and your only goal is to generate useful content in JSON format for developers to parse and use. You don't know any other language than JSON."
                  },
                  {
                    "role": "user",
                    "content": "```typescript\n/** The user answer to the question \"undefined\" */\ninterface Output = { value: any }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\nagent: undefined\nuser: undefined\n\"\"\""
                  },
                  {
                    "role": "assistant",
                    "content": "{}"
                  },
                  {
                    "role": "user",
                    "content": "\nNow, forget about the previous transcripts. These were just examples, don't consider those as valid transcripts for this new task.\n\n###\n\nThe current Date is {{CURRENT_DATE_TIME}}.\n\nAt this point of the conversation, I need require the user to fill the output in following JSON output to complete the task.\nIf more than one property, try to extract each of them the best you can.\n\n```typescript\n/** The user answer to the question \"{{QUESTION}}\" */\ninterface Output = { value: any }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\n{{TRANSCRIPT}}\n\"\"\"\n\nIn the last user message, here are the entities found:\n\"\"\"\nENTITIES_IDENTIFIED\n\"\"\"\n\nI need you to extract from the conversation transcript above the values the user has provided.\nIf the user has not provided the information I need, I need you to set the value of the missing answer properties to null.\nHave some tolerance to typos and variations in how the user selects from the possible values.\n\n\n\nNow, please reply to me with the above JSON output and nothing but JSON.\nYou should not explain your answer and should not talk back to me. Just JSON."
                  }
                ],
                "model": "gpt-3.5-turbo",
                "temperature": 0,
                "signatureVersion": "Jan-2024",
                "signature": "wsDIMaSsJ1YTaWLaNEaV5IgB+C2qyh801nUa4CdCsmubxvThog1rJ7tYXwHKDnA4cpOm6gnznXN6AdKJSoh/tbRxO1abxj04bRbCn9y7BZ8i3qZQl1Le5PIaAmfampxeHFl8IasZNZYi5uWVQnd1IPS3iFv6wYhBGa/EPlz+AagSKdqmn11u/DSAfrYixnA2rW+XEORrVeVMt1P8zFU7ssoTSSNt7LZh1xmH0amoWFad2vSDxu/2eU55NZSGFlB8a1soPEGYq83QN6mHXldjsO1mEV7cHWsSBZPTXG37GipXEbYKe/9sQNwg6mpBLIuvbliiJ9DvjkkSyXQVkVhTyg=="
              }
            },
            {
              "id": "ins-5a3d14bff3",
              "category": "Capture Information",
              "type": "capture",
              "entityId": "prompts://RawInput/v1",
              "entityName": "Raw Input",
              "kbPriority": {
                "enabled": true,
                "searchScope": "all",
                "kbs": []
              },
              "nodeId": "nd-5ddf430c9e",
              "variableId": "var-ad18699388",
              "question": {
                "valueType": "dynamic",
                "dynamicValue": "Lastly provide your email ",
                "staticValue": ""
              },
              "validation": {
                "validators": []
              },
              "choice": {
                "options": {
                  "staticValue": [],
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "retry": {
                "maxRetries": 2,
                "retryMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "dynamic"
                }
              },
              "cancellation": {
                "cancellable": true,
                "confirmCancel": true,
                "confirmCancelMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "handleFailure": false,
              "historyLookback": 0,
              "skipIfAlreadyFilled": false,
              "transitions": [],
              "prompt": {
                "messages": [
                  {
                    "role": "system",
                    "content": "You are ExtractGPT and your only goal is to generate useful content in JSON format for developers to parse and use. You don't know any other language than JSON."
                  },
                  {
                    "role": "user",
                    "content": "```typescript\n/** The user answer to the question \"undefined\" */\ninterface Output = { value: any }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\nagent: undefined\nuser: undefined\n\"\"\""
                  },
                  {
                    "role": "assistant",
                    "content": "{}"
                  },
                  {
                    "role": "user",
                    "content": "\nNow, forget about the previous transcripts. These were just examples, don't consider those as valid transcripts for this new task.\n\n###\n\nThe current Date is {{CURRENT_DATE_TIME}}.\n\nAt this point of the conversation, I need require the user to fill the output in following JSON output to complete the task.\nIf more than one property, try to extract each of them the best you can.\n\n```typescript\n/** The user answer to the question \"{{QUESTION}}\" */\ninterface Output = { value: any }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\n{{TRANSCRIPT}}\n\"\"\"\n\nIn the last user message, here are the entities found:\n\"\"\"\nENTITIES_IDENTIFIED\n\"\"\"\n\nI need you to extract from the conversation transcript above the values the user has provided.\nIf the user has not provided the information I need, I need you to set the value of the missing answer properties to null.\nHave some tolerance to typos and variations in how the user selects from the possible values.\n\n\n\nNow, please reply to me with the above JSON output and nothing but JSON.\nYou should not explain your answer and should not talk back to me. Just JSON."
                  }
                ],
                "model": "gpt-3.5-turbo",
                "temperature": 0,
                "signatureVersion": "Jan-2024",
                "signature": "wsDIMaSsJ1YTaWLaNEaV5IgB+C2qyh801nUa4CdCsmubxvThog1rJ7tYXwHKDnA4cpOm6gnznXN6AdKJSoh/tbRxO1abxj04bRbCn9y7BZ8i3qZQl1Le5PIaAmfampxeHFl8IasZNZYi5uWVQnd1IPS3iFv6wYhBGa/EPlz+AagSKdqmn11u/DSAfrYixnA2rW+XEORrVeVMt1P8zFU7ssoTSSNt7LZh1xmH0amoWFad2vSDxu/2eU55NZSGFlB8a1soPEGYq83QN6mHXldjsO1mEV7cHWsSBZPTXG37GipXEbYKe/9sQNwg6mpBLIuvbliiJ9DvjkkSyXQVkVhTyg=="
              }
            },
            {
              "id": "ins-40578f02af",
              "tutorialId": "start-hitl",
              "description": "Starts an HITL Session",
              "title": "Start HITL",
              "schema": {
                "_def": {
                  "unknownKeys": "strip",
                  "catchall": {
                    "_def": {
                      "typeName": "ZodNever"
                    }
                  },
                  "typeName": "ZodObject"
                },
                "_cached": null
              },
              "type": "action",
              "label": "Start HITL",
              "category": "Agents",
              "origin": "agent",
              "agent": {
                "action": "start-hitl",
                "id": "HITLAgent"
              },
              "nodeId": "nd-5ddf430c9e",
              "transitions": []
            }
          ],
          "defaultTransition": {
            "targetNodeId": "nd-855e61f43f"
          },
          "id": "nd-5ddf430c9e",
          "name": "talk_to_an_agent",
          "agentConfigOverrides": {
            "PersonalityAgent": {
              "active": false,
              "personality": {
                "valueType": "dynamic",
                "dynamicValue": "You are a helping agent to the users visiting the website and help them with answering all questions in a polite and kind way. Moreover add a smile emoji at the end of a greeting message.",
                "staticValue": ""
              }
            }
          }
        }
      ],
      "parentFolder": "root"
    },
    {
      "id": "wf-b7107f2300",
      "name": "intent as talk to an agent",
      "startNode": "nd-45bb55f826",
      "variables": [],
      "links": [
        {
          "id": "lnk-f41cc622a7",
          "source": "nd-45bb55f826",
          "target": "nd-7a6f1ab236",
          "sourcePort": "trs-9ae43380d3"
        }
      ],
      "nodes": [
        {
          "id": "nd-45bb55f826",
          "name": "Entry",
          "type": "entry",
          "deletable": false,
          "variables": [],
          "instructions": [
            {
              "id": "trs-9ae43380d3",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "true"
              },
              "destination": {
                "node": "nd-7a6f1ab236"
              },
              "transitions": [],
              "nodeId": "nd-45bb55f826"
            }
          ],
          "x": 100,
          "y": 100
        },
        {
          "id": "nd-adb6d69e3a",
          "name": "Exit",
          "type": "exit",
          "variables": [],
          "deletable": false,
          "instructions": [
            {
              "id": "trs-2674d2677b",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "true"
              },
              "destination": {
                "node": "#"
              },
              "transitions": [],
              "nodeId": "nd-adb6d69e3a"
            }
          ],
          "x": 800,
          "y": 100
        },
        {
          "id": "nd-7a6f1ab236",
          "name": "Standard",
          "type": "standard",
          "deletable": true,
          "instructions": [
            {
              "id": "ins-af1f35d3eb",
              "category": "Capture Information",
              "type": "capture",
              "entityId": "prompts://RawInput/v1",
              "entityName": "Raw Input",
              "kbPriority": {
                "enabled": true,
                "searchScope": "all",
                "kbs": []
              },
              "nodeId": "nd-7a6f1ab236",
              "question": {
                "staticValue": "",
                "dynamicValue": "",
                "valueType": "dynamic"
              },
              "validation": {
                "validators": []
              },
              "choice": {
                "options": {
                  "staticValue": [],
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "retry": {
                "maxRetries": 2,
                "retryMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "dynamic"
                }
              },
              "cancellation": {
                "cancellable": true,
                "confirmCancel": true,
                "confirmCancelMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "handleFailure": false,
              "historyLookback": 0,
              "skipIfAlreadyFilled": false,
              "transitions": [],
              "prompt": {
                "messages": [
                  {
                    "role": "system",
                    "content": "You are ExtractGPT and your only goal is to generate useful content in JSON format for developers to parse and use. You don't know any other language than JSON."
                  },
                  {
                    "role": "user",
                    "content": "```typescript\n/** The user answer to the question \"undefined\" */\ninterface Output = { value: any }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\nagent: undefined\nuser: undefined\n\"\"\""
                  },
                  {
                    "role": "assistant",
                    "content": "{}"
                  },
                  {
                    "role": "user",
                    "content": "\nNow, forget about the previous transcripts. These were just examples, don't consider those as valid transcripts for this new task.\n\n###\n\nThe current Date is {{CURRENT_DATE_TIME}}.\n\nAt this point of the conversation, I need require the user to fill the output in following JSON output to complete the task.\nIf more than one property, try to extract each of them the best you can.\n\n```typescript\n/** The user answer to the question \"{{QUESTION}}\" */\ninterface Output = { value: any }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\n{{TRANSCRIPT}}\n\"\"\"\n\nIn the last user message, here are the entities found:\n\"\"\"\nENTITIES_IDENTIFIED\n\"\"\"\n\nI need you to extract from the conversation transcript above the values the user has provided.\nIf the user has not provided the information I need, I need you to set the value of the missing answer properties to null.\nHave some tolerance to typos and variations in how the user selects from the possible values.\n\n\n\nNow, please reply to me with the above JSON output and nothing but JSON.\nYou should not explain your answer and should not talk back to me. Just JSON."
                  }
                ],
                "model": "gpt-3.5-turbo",
                "temperature": 0,
                "signatureVersion": "Jan-2024",
                "signature": "wsDIMaSsJ1YTaWLaNEaV5IgB+C2qyh801nUa4CdCsmubxvThog1rJ7tYXwHKDnA4cpOm6gnznXN6AdKJSoh/tbRxO1abxj04bRbCn9y7BZ8i3qZQl1Le5PIaAmfampxeHFl8IasZNZYi5uWVQnd1IPS3iFv6wYhBGa/EPlz+AagSKdqmn11u/DSAfrYixnA2rW+XEORrVeVMt1P8zFU7ssoTSSNt7LZh1xmH0amoWFad2vSDxu/2eU55NZSGFlB8a1soPEGYq83QN6mHXldjsO1mEV7cHWsSBZPTXG37GipXEbYKe/9sQNwg6mpBLIuvbliiJ9DvjkkSyXQVkVhTyg=="
              }
            },
            {
              "id": "ins-8a72a5efcf",
              "type": "transition",
              "condition": {
                "type": "intent",
                "payload": {
                  "type": "library",
                  "name": "",
                  "intent": {
                    "id": "int-a9dd1afd22",
                    "name": "talk_to_agent",
                    "utterances_with_slots": [
                      "tÔªøalk to human",
                      "sÔªøpeak to human",
                      "IÔªø want to talk to an agent",
                      "hÔªøuman now",
                      "hÔªøuman please",
                      "IÔªø want to talk to real person now",
                      "tÔªøalk to a person",
                      "cÔªøonnect to an agent"
                    ]
                  }
                }
              },
              "category": "Flow Logic",
              "nodeId": "nd-7a6f1ab236",
              "generative": null,
              "label": "Intent is : talk_to_agent",
              "description": "",
              "destination": {
                "node": "nd-142e3f2032"
              },
              "transitions": []
            }
          ],
          "defaultTransition": {
            "targetNodeId": "nd-adb6d69e3a"
          },
          "x": 450,
          "y": 100
        },
        {
          "type": "standard",
          "deletable": true,
          "x": 780,
          "y": 345,
          "instructions": [
            {
              "id": "ins-29a79f00b9",
              "type": "skill",
              "name": "Connect to an agent",
              "flowId": "wf-55f9efcb4a",
              "exitNodes": [
                "nd-855e61f43f"
              ],
              "transitions": [
                {
                  "id": "trs-604c8330fd",
                  "type": "transition",
                  "label": "Exit",
                  "condition": {
                    "type": "expression",
                    "payload": "lastNode=nd-855e61f43f"
                  },
                  "destination": {},
                  "generative": {
                    "label": "Exit",
                    "properties": {
                      "label": true,
                      "condition": true
                    },
                    "suggestion": {
                      "label": "Exit",
                      "condition": "lastNode=nd-855e61f43f"
                    }
                  }
                }
              ],
              "category": "Flow Logic",
              "nodeId": "nd-142e3f2032"
            }
          ],
          "defaultTransition": {
            "targetNodeId": null
          },
          "id": "nd-142e3f2032",
          "name": "Standard1"
        }
      ],
      "parentFolder": "root"
    },
    {
      "id": "wf-bbd4aa2a7b",
      "name": "",
      "startNode": "nd-bd76714187",
      "variables": [],
      "links": [
        {
          "id": "lnk-5ec81fd1cf",
          "source": "nd-bd76714187",
          "target": "nd-c4e7d0a353",
          "sourcePort": "trs-b796aa7fa3"
        }
      ],
      "nodes": [
        {
          "id": "nd-bd76714187",
          "name": "Entry",
          "type": "entry",
          "deletable": false,
          "variables": [],
          "instructions": [
            {
              "id": "trs-b796aa7fa3",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "true"
              },
              "destination": {
                "node": "nd-c4e7d0a353"
              },
              "transitions": [],
              "nodeId": "nd-bd76714187"
            }
          ],
          "x": 100,
          "y": 100
        },
        {
          "id": "nd-3d9139553d",
          "name": "Exit",
          "type": "exit",
          "variables": [],
          "deletable": false,
          "instructions": [
            {
              "id": "trs-585bd162c2",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "true"
              },
              "destination": {
                "node": "#"
              },
              "transitions": [],
              "nodeId": "nd-3d9139553d"
            }
          ],
          "x": 800,
          "y": 100
        },
        {
          "id": "nd-c4e7d0a353",
          "name": "Standard",
          "type": "standard",
          "deletable": true,
          "instructions": [],
          "defaultTransition": {
            "targetNodeId": "nd-3d9139553d"
          },
          "x": 450,
          "y": 100
        }
      ],
      "parentFolder": "root"
    },
    {
      "id": "wf-4b91d217d1",
      "name": "Have another Query",
      "startNode": "nd-c0baf19399",
      "variables": [
        {
          "id": "var-1525093f7c",
          "type": "string",
          "name": "botuserResponse",
          "description": "",
          "scope": "workflow",
          "secret": false,
          "defaultValue": ""
        },
        {
          "id": "var-ee0e0fb551",
          "type": "string",
          "name": "name_imp",
          "description": "",
          "scope": "workflow",
          "secret": false,
          "defaultValue": ""
        },
        {
          "id": "var-08944ceb57",
          "type": "string",
          "name": "phone",
          "description": "",
          "scope": "workflow",
          "secret": false,
          "defaultValue": ""
        },
        {
          "id": "var-63cdef86c2",
          "type": "string",
          "name": "extractname",
          "description": "",
          "scope": "workflow",
          "secret": false,
          "defaultValue": ""
        },
        {
          "defaultValue": "",
          "type": "string",
          "name": "email_imp",
          "description": "",
          "id": "var-77ec796a2d",
          "scope": "workflow",
          "secret": false
        }
      ],
      "links": [
        {
          "id": "lnk-01c6bce724",
          "source": "nd-c0baf19399",
          "target": "nd-5b105da0b0",
          "sourcePort": "trs-ade7bc22e6"
        }
      ],
      "nodes": [
        {
          "id": "nd-c0baf19399",
          "name": "Entry",
          "type": "entry",
          "deletable": false,
          "variables": [],
          "instructions": [
            {
              "id": "trs-ade7bc22e6",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "true"
              },
              "destination": {
                "node": "nd-5b105da0b0"
              },
              "transitions": [],
              "nodeId": "nd-c0baf19399"
            }
          ],
          "x": 100,
          "y": 100
        },
        {
          "id": "nd-48fee97e48",
          "name": "Exit",
          "type": "exit",
          "variables": [],
          "deletable": false,
          "instructions": [
            {
              "id": "trs-e656daf6b5",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "true"
              },
              "destination": {},
              "transitions": [],
              "nodeId": "nd-48fee97e48"
            }
          ],
          "x": 2325,
          "y": 300,
          "defaultTransition": {
            "targetNodeId": null
          }
        },
        {
          "id": "nd-5b105da0b0",
          "name": "Standard",
          "type": "standard",
          "deletable": true,
          "instructions": [
            {
              "id": "ins-3e1b648450",
              "category": "Capture Information",
              "type": "capture",
              "entityId": "prompts://RawInput/v1",
              "entityName": "Raw Input",
              "kbPriority": {
                "enabled": true,
                "searchScope": "all",
                "kbs": []
              },
              "nodeId": "nd-5b105da0b0",
              "question": {
                "valueType": "dynamic",
                "dynamicValue": "Please ask your question",
                "staticValue": ""
              },
              "validation": {
                "validators": []
              },
              "choice": {
                "options": {
                  "staticValue": [],
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "retry": {
                "maxRetries": 2,
                "retryMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "dynamic"
                }
              },
              "cancellation": {
                "cancellable": true,
                "confirmCancel": true,
                "confirmCancelMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "handleFailure": false,
              "historyLookback": 0,
              "skipIfAlreadyFilled": false,
              "transitions": [],
              "prompt": {
                "messages": [
                  {
                    "role": "system",
                    "content": "You are ExtractGPT and your only goal is to generate useful content in JSON format for developers to parse and use. You don't know any other language than JSON."
                  },
                  {
                    "role": "user",
                    "content": "```typescript\n/** The user answer to the question \"undefined\" */\ninterface Output = { value: any }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\nagent: undefined\nuser: undefined\n\"\"\""
                  },
                  {
                    "role": "assistant",
                    "content": "{}"
                  },
                  {
                    "role": "user",
                    "content": "\nNow, forget about the previous transcripts. These were just examples, don't consider those as valid transcripts for this new task.\n\n###\n\nThe current Date is {{CURRENT_DATE_TIME}}.\n\nAt this point of the conversation, I need require the user to fill the output in following JSON output to complete the task.\nIf more than one property, try to extract each of them the best you can.\n\n```typescript\n/** The user answer to the question \"{{QUESTION}}\" */\ninterface Output = { value: any }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\n{{TRANSCRIPT}}\n\"\"\"\n\nIn the last user message, here are the entities found:\n\"\"\"\nENTITIES_IDENTIFIED\n\"\"\"\n\nI need you to extract from the conversation transcript above the values the user has provided.\nIf the user has not provided the information I need, I need you to set the value of the missing answer properties to null.\nHave some tolerance to typos and variations in how the user selects from the possible values.\n\n\n\nNow, please reply to me with the above JSON output and nothing but JSON.\nYou should not explain your answer and should not talk back to me. Just JSON."
                  }
                ],
                "model": "gpt-3.5-turbo",
                "temperature": 0,
                "signatureVersion": "Jan-2024",
                "signature": "wsDIMaSsJ1YTaWLaNEaV5IgB+C2qyh801nUa4CdCsmubxvThog1rJ7tYXwHKDnA4cpOm6gnznXN6AdKJSoh/tbRxO1abxj04bRbCn9y7BZ8i3qZQl1Le5PIaAmfampxeHFl8IasZNZYi5uWVQnd1IPS3iFv6wYhBGa/EPlz+AagSKdqmn11u/DSAfrYixnA2rW+XEORrVeVMt1P8zFU7ssoTSSNt7LZh1xmH0amoWFad2vSDxu/2eU55NZSGFlB8a1soPEGYq83QN6mHXldjsO1mEV7cHWsSBZPTXG37GipXEbYKe/9sQNwg6mpBLIuvbliiJ9DvjkkSyXQVkVhTyg=="
              }
            },
            {
              "id": "ins-e78e842f37",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "true{{turn.KnowledgeAgent.responded}}"
              },
              "label": "",
              "generative": {
                "label": "",
                "suggestion": {
                  "condition": "true"
                },
                "properties": {
                  "condition": false
                }
              },
              "category": "Flow Logic",
              "nodeId": "nd-5b105da0b0",
              "description": "",
              "destination": {
                "node": "nd-6fab133dee"
              },
              "transitions": []
            },
            {
              "id": "ins-2cb7fae438",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "{{!turn.KnowledgeAgent.responded}}"
              },
              "label": "",
              "generative": {
                "label": "",
                "suggestion": {
                  "condition": "true"
                },
                "properties": {
                  "condition": false
                }
              },
              "category": "Flow Logic",
              "nodeId": "nd-5b105da0b0",
              "description": "",
              "destination": {
                "node": "nd-80cceb13f4"
              },
              "transitions": []
            }
          ],
          "defaultTransition": {
            "targetNodeId": null
          },
          "x": 450,
          "y": 100,
          "agentConfigOverrides": {
            "PersonalityAgent": {
              "active": false,
              "personality": {
                "valueType": "dynamic",
                "dynamicValue": "You are a helping agent to the users visiting the website and help them with answering all questions in a polite and kind way. Moreover add a smile emoji at the end of a greeting message.",
                "staticValue": ""
              }
            }
          }
        },
        {
          "type": "standard",
          "deletable": true,
          "x": 720,
          "y": -165,
          "instructions": [
            {
              "id": "ins-113975a592",
              "category": "Send Messages",
              "type": "content",
              "content": {
                "type": "text",
                "text": {
                  "valueType": "dynamic",
                  "dynamicValue": "This should address your question.",
                  "staticValue": ""
                },
                "typing": {
                  "valueType": "static",
                  "staticValue": true
                }
              },
              "nodeId": "nd-6fab133dee",
              "transitions": []
            },
            {
              "id": "ins-b1d5c6be33",
              "category": "Capture Information",
              "type": "capture",
              "entityId": "prompts://RawInput/v1",
              "entityName": "Raw Input",
              "kbPriority": {
                "enabled": true,
                "searchScope": "all",
                "kbs": []
              },
              "nodeId": "nd-6fab133dee",
              "question": {
                "staticValue": "",
                "dynamicValue": "",
                "valueType": "dynamic"
              },
              "validation": {
                "validators": []
              },
              "choice": {
                "options": {
                  "staticValue": [],
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "retry": {
                "maxRetries": 2,
                "retryMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "dynamic"
                }
              },
              "cancellation": {
                "cancellable": true,
                "confirmCancel": true,
                "confirmCancelMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "handleFailure": false,
              "historyLookback": 0,
              "skipIfAlreadyFilled": false,
              "transitions": [],
              "prompt": {
                "messages": [
                  {
                    "role": "system",
                    "content": "You are ExtractGPT and your only goal is to generate useful content in JSON format for developers to parse and use. You don't know any other language than JSON."
                  },
                  {
                    "role": "user",
                    "content": "```typescript\n/** The user answer to the question \"undefined\" */\ninterface Output = { value: any }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\nagent: undefined\nuser: undefined\n\"\"\""
                  },
                  {
                    "role": "assistant",
                    "content": "{}"
                  },
                  {
                    "role": "user",
                    "content": "\nNow, forget about the previous transcripts. These were just examples, don't consider those as valid transcripts for this new task.\n\n###\n\nThe current Date is {{CURRENT_DATE_TIME}}.\n\nAt this point of the conversation, I need require the user to fill the output in following JSON output to complete the task.\nIf more than one property, try to extract each of them the best you can.\n\n```typescript\n/** The user answer to the question \"{{QUESTION}}\" */\ninterface Output = { value: any }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\n{{TRANSCRIPT}}\n\"\"\"\n\nIn the last user message, here are the entities found:\n\"\"\"\nENTITIES_IDENTIFIED\n\"\"\"\n\nI need you to extract from the conversation transcript above the values the user has provided.\nIf the user has not provided the information I need, I need you to set the value of the missing answer properties to null.\nHave some tolerance to typos and variations in how the user selects from the possible values.\n\n\n\nNow, please reply to me with the above JSON output and nothing but JSON.\nYou should not explain your answer and should not talk back to me. Just JSON."
                  }
                ],
                "model": "gpt-3.5-turbo",
                "temperature": 0,
                "signatureVersion": "Jan-2024",
                "signature": "wsDIMaSsJ1YTaWLaNEaV5IgB+C2qyh801nUa4CdCsmubxvThog1rJ7tYXwHKDnA4cpOm6gnznXN6AdKJSoh/tbRxO1abxj04bRbCn9y7BZ8i3qZQl1Le5PIaAmfampxeHFl8IasZNZYi5uWVQnd1IPS3iFv6wYhBGa/EPlz+AagSKdqmn11u/DSAfrYixnA2rW+XEORrVeVMt1P8zFU7ssoTSSNt7LZh1xmH0amoWFad2vSDxu/2eU55NZSGFlB8a1soPEGYq83QN6mHXldjsO1mEV7cHWsSBZPTXG37GipXEbYKe/9sQNwg6mpBLIuvbliiJ9DvjkkSyXQVkVhTyg=="
              }
            },
            {
              "id": "ins-e39b7818dc",
              "type": "transition",
              "condition": {
                "type": "intent",
                "payload": {
                  "type": "library",
                  "name": "",
                  "intent": {
                    "id": "int-a9dd1afd22",
                    "name": "talk_to_agent",
                    "utterances_with_slots": [
                      "tÔªøalk to human",
                      "sÔªøpeak to human",
                      "IÔªø want to talk to an agent",
                      "hÔªøuman now",
                      "hÔªøuman please",
                      "IÔªø want to talk to real person now",
                      "tÔªøalk to a person",
                      "cÔªøonnect to an agent"
                    ]
                  }
                }
              },
              "category": "Flow Logic",
              "nodeId": "nd-6fab133dee",
              "generative": null,
              "label": "Intent is : talk_to_agent",
              "description": "",
              "destination": {
                "node": "nd-030a78d58a"
              },
              "transitions": []
            }
          ],
          "defaultTransition": {
            "targetNodeId": "nd-e3ea0e3d9d"
          },
          "id": "nd-6fab133dee",
          "name": "Found",
          "agentConfigOverrides": {
            "PersonalityAgent": {
              "active": false,
              "personality": {
                "valueType": "dynamic",
                "dynamicValue": "You are a helping agent to the users visiting the website and help them with answering all questions in a polite and kind way. Moreover add a smile emoji at the end of a greeting message.",
                "staticValue": ""
              }
            }
          }
        },
        {
          "type": "standard",
          "deletable": true,
          "x": 1095,
          "y": 45,
          "instructions": [
            {
              "id": "ins-a621dd8906",
              "type": "skill",
              "name": "Connect to an agent",
              "flowId": "wf-55f9efcb4a",
              "exitNodes": [
                "nd-855e61f43f"
              ],
              "transitions": [
                {
                  "id": "trs-0d224dc732",
                  "type": "transition",
                  "label": "Exit",
                  "condition": {
                    "type": "expression",
                    "payload": "lastNode=nd-855e61f43f"
                  },
                  "destination": {},
                  "generative": {
                    "label": "Exit",
                    "properties": {
                      "label": true,
                      "condition": true
                    },
                    "suggestion": {
                      "label": "Exit",
                      "condition": "lastNode=nd-855e61f43f"
                    }
                  }
                }
              ],
              "category": "Flow Logic",
              "nodeId": "nd-030a78d58a"
            }
          ],
          "defaultTransition": {
            "targetNodeId": null
          },
          "id": "nd-030a78d58a",
          "name": "Standard1",
          "agentConfigOverrides": {
            "PersonalityAgent": {
              "active": false,
              "personality": {
                "valueType": "dynamic",
                "dynamicValue": "You are a helping agent to the users visiting the website and help them with answering all questions in a polite and kind way. Moreover add a smile emoji at the end of a greeting message.",
                "staticValue": ""
              }
            }
          }
        },
        {
          "type": "standard",
          "deletable": true,
          "x": 1035,
          "y": -405,
          "instructions": [
            {
              "id": "ins-07ffd23c45",
              "category": "Capture Information",
              "type": "capture",
              "entityId": "prompts://SingleChoice/v1",
              "entityName": "Single Choice",
              "kbPriority": {
                "enabled": true,
                "searchScope": "all",
                "kbs": []
              },
              "nodeId": "nd-e3ea0e3d9d",
              "question": {
                "valueType": "dynamic",
                "dynamicValue": "Still have questions",
                "staticValue": ""
              },
              "validation": {
                "validators": []
              },
              "choice": {
                "options": {
                  "valueType": "static",
                  "staticValue": [
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "Contact Us",
                        "staticValue": null
                      },
                      "value": "Contact Us",
                      "enabled": true
                    },
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "Exit ",
                        "staticValue": null
                      },
                      "value": "Exit ",
                      "enabled": true
                    }
                  ],
                  "dynamicValue": ""
                }
              },
              "retry": {
                "maxRetries": 2,
                "retryMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "dynamic"
                }
              },
              "cancellation": {
                "cancellable": true,
                "confirmCancel": true,
                "confirmCancelMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "handleFailure": false,
              "historyLookback": 0,
              "skipIfAlreadyFilled": false,
              "transitions": [
                {
                  "id": "trs-c59ae85196",
                  "type": "transition",
                  "label": "Contact Us",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=Contact Us"
                  },
                  "destination": {
                    "node": "nd-4810a35c00"
                  }
                },
                {
                  "id": "trs-1026edd485",
                  "type": "transition",
                  "label": "Exit ",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=Exit "
                  },
                  "destination": {
                    "node": "nd-fc00adc4c4"
                  }
                }
              ],
              "prompt": {
                "messages": [
                  {
                    "role": "system",
                    "content": "You are ExtractGPT and your only goal is to generate useful content in JSON format for developers to parse and use. You don't know any other language than JSON."
                  },
                  {
                    "role": "user",
                    "content": "```typescript\n/** The user answer to the question \"Which one would you like? Choices: [ 1) Red Apple, 2) Yellow Apple, 3) Dark Banana ]\" */\ninterface Output = { choice: {{CHOICES_TYPINGS}} }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\nagent: Which one would you like? Choices: [ 1) Red Apple, 2) Yellow Apple, 3) Dark Banana ]\nuser: I will go with the second one please\n\"\"\""
                  },
                  {
                    "role": "assistant",
                    "content": "{\"choice\":\"Yellow Apple\"}"
                  },
                  {
                    "role": "user",
                    "content": "\nNow, forget about the previous transcripts. These were just examples, don't consider those as valid transcripts for this new task.\n\n###\n\nThe current Date is {{CURRENT_DATE_TIME}}.\n\nAt this point of the conversation, I need require the user to fill the output in following JSON output to complete the task.\nIf more than one property, try to extract each of them the best you can.\n\n```typescript\n/** The user answer to the question \"{{QUESTION}}\" */\ninterface Output = { choice: {{CHOICES_TYPINGS}} }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\n{{TRANSCRIPT}}\n\"\"\"\n\nIn the last user message, here are the entities found:\n\"\"\"\nENTITIES_IDENTIFIED\n\"\"\"\n\nI need you to extract from the conversation transcript above the values the user has provided.\nIf the user has not provided the information I need, I need you to set the value of the missing answer properties to null.\nHave some tolerance to typos and variations in how the user selects from the possible values.\n\n\n\nNow, please reply to me with the above JSON output and nothing but JSON.\nYou should not explain your answer and should not talk back to me. Just JSON."
                  }
                ],
                "model": "gpt-3.5-turbo",
                "temperature": 0,
                "signatureVersion": "Jan-2024",
                "signature": "bVu49Pre5q6DHlBFHgwm9WRpKblGPBZEVz9lE1T/kSknjafz8d4zyUGOUmre70ijj2brtSymiTuHw41rgUeoCl/HXkA3kpomvC1RU1QBili6tzgAvH+4CC1PGSL/kP+71QgVkqv73DXrN1UAAH60wru/Oc8nuHvtTKxeoghxZzkmwKpFWq9L8Appklcjf5Pr+4N2Q9JQtxsr4D2+SSc7cCBec71TQVpOxhmPHfxaaKfgzGV4PZbUFI0JZEkmMppHHz+6iTlkoeWG45ukpCwCw7ppjnps4TYI/bR2gWVOyN9J3mVYmZoH7pNY7UWjd/mB+HjubAfZAeNF7FXvVKzcrA=="
              }
            }
          ],
          "defaultTransition": {
            "targetNodeId": null
          },
          "id": "nd-e3ea0e3d9d",
          "name": "Standard2",
          "agentConfigOverrides": {
            "PersonalityAgent": {
              "active": false,
              "personality": {
                "valueType": "dynamic",
                "dynamicValue": "You are a helping agent to the users visiting the website and help them with answering all questions in a polite and kind way. Moreover add a smile emoji at the end of a greeting message.",
                "staticValue": ""
              }
            }
          }
        },
        {
          "type": "standard",
          "deletable": true,
          "x": 1350,
          "y": -360,
          "instructions": [
            {
              "id": "ins-ff9ba4a156",
              "category": "Send Messages",
              "type": "content",
              "content": {
                "type": "text",
                "text": {
                  "valueType": "dynamic",
                  "dynamicValue": "Kindly provide your name, email and phone number, so that we can get in touch with you! üòä",
                  "staticValue": ""
                },
                "typing": {
                  "valueType": "static",
                  "staticValue": true
                }
              },
              "nodeId": "nd-4810a35c00",
              "transitions": []
            }
          ],
          "defaultTransition": {
            "targetNodeId": "nd-6bba528a4e"
          },
          "id": "nd-4810a35c00",
          "name": "Standard3",
          "agentConfigOverrides": {
            "PersonalityAgent": {
              "active": false,
              "personality": {
                "valueType": "dynamic",
                "dynamicValue": "You are a helping agent to the users visiting the website and help them with answering all questions in a polite and kind way. Moreover add a smile emoji at the end of a greeting message.",
                "staticValue": ""
              }
            }
          }
        },
        {
          "type": "standard",
          "deletable": true,
          "x": 1665,
          "y": -150,
          "instructions": [
            {
              "id": "ins-773bed5614",
              "category": "Capture Information",
              "type": "capture",
              "entityId": "prompts://RawInput/v1",
              "entityName": "Raw Input",
              "kbPriority": {
                "enabled": true,
                "searchScope": "all",
                "kbs": []
              },
              "nodeId": "nd-6bba528a4e",
              "variableId": "var-1525093f7c",
              "question": {
                "staticValue": "",
                "dynamicValue": "",
                "valueType": "dynamic"
              },
              "validation": {
                "validators": []
              },
              "choice": {
                "options": {
                  "staticValue": [],
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "retry": {
                "maxRetries": 2,
                "retryMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "dynamic"
                }
              },
              "cancellation": {
                "cancellable": true,
                "confirmCancel": true,
                "confirmCancelMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "handleFailure": false,
              "historyLookback": 0,
              "skipIfAlreadyFilled": false,
              "transitions": [],
              "prompt": {
                "messages": [
                  {
                    "role": "system",
                    "content": "You are ExtractGPT and your only goal is to generate useful content in JSON format for developers to parse and use. You don't know any other language than JSON."
                  },
                  {
                    "role": "user",
                    "content": "```typescript\n/** The user answer to the question \"undefined\" */\ninterface Output = { value: any }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\nagent: undefined\nuser: undefined\n\"\"\""
                  },
                  {
                    "role": "assistant",
                    "content": "{}"
                  },
                  {
                    "role": "user",
                    "content": "\nNow, forget about the previous transcripts. These were just examples, don't consider those as valid transcripts for this new task.\n\n###\n\nThe current Date is {{CURRENT_DATE_TIME}}.\n\nAt this point of the conversation, I need require the user to fill the output in following JSON output to complete the task.\nIf more than one property, try to extract each of them the best you can.\n\n```typescript\n/** The user answer to the question \"{{QUESTION}}\" */\ninterface Output = { value: any }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\n{{TRANSCRIPT}}\n\"\"\"\n\nIn the last user message, here are the entities found:\n\"\"\"\nENTITIES_IDENTIFIED\n\"\"\"\n\nI need you to extract from the conversation transcript above the values the user has provided.\nIf the user has not provided the information I need, I need you to set the value of the missing answer properties to null.\nHave some tolerance to typos and variations in how the user selects from the possible values.\n\n\n\nNow, please reply to me with the above JSON output and nothing but JSON.\nYou should not explain your answer and should not talk back to me. Just JSON."
                  }
                ],
                "model": "gpt-3.5-turbo",
                "temperature": 0,
                "signatureVersion": "Jan-2024",
                "signature": "wsDIMaSsJ1YTaWLaNEaV5IgB+C2qyh801nUa4CdCsmubxvThog1rJ7tYXwHKDnA4cpOm6gnznXN6AdKJSoh/tbRxO1abxj04bRbCn9y7BZ8i3qZQl1Le5PIaAmfampxeHFl8IasZNZYi5uWVQnd1IPS3iFv6wYhBGa/EPlz+AagSKdqmn11u/DSAfrYixnA2rW+XEORrVeVMt1P8zFU7ssoTSSNt7LZh1xmH0amoWFad2vSDxu/2eU55NZSGFlB8a1soPEGYq83QN6mHXldjsO1mEV7cHWsSBZPTXG37GipXEbYKe/9sQNwg6mpBLIuvbliiJ9DvjkkSyXQVkVhTyg=="
              }
            },
            {
              "type": "ai",
              "category": "AI",
              "id": "ins-30215a147d",
              "task": {
                "instructions": "Extract the persons name and contact  information from the input and store it in the respective variables",
                "input": "@workflow.botuserResponse ",
                "outputVariableIds": [
                  "var-ee0e0fb551",
                  "var-77ec796a2d",
                  "var-08944ceb57"
                ],
                "handleFailure": false,
                "examples": [
                  {
                    "input": "",
                    "output": {}
                  }
                ],
                "model": "gpt-3.5-turbo-16k",
                "temperature": 0,
                "version": "1.0"
              },
              "nodeId": "nd-6bba528a4e",
              "label": "name_imp, phone, email_imp",
              "transitions": [],
              "prompt": {
                "messages": [
                  {
                    "role": "system",
                    "content": "You are a helper assistant at the hands of a chatbot developer using Botpress workflow editor. Your main goal is to generate useful content in JSON format for the developer to use.\nHere are the task instructions provided by the developer:"
                  },
                  {
                    "role": "user",
                    "content": "I have a task for you to complete. Here are the instructions:\nExtract the persons name and contact  information from the input and store it in the respective variables\n--\nThe following is the typescript interface I need as output of the task:\n\n```typescript\ninterface Output = {\n  /**  */\n\"name_imp\": string\n/**  */\n\"phone\": string\n/**  */\n\"email_imp\": string\n}"
                  },
                  {
                    "role": "user",
                    "content": "Now, here is the actual input to the task at hand you need to complete:\nInput:\n\"\"\"\n{{TASK_INPUT}}\n\"\"\"\nPlease follow my instructions as is and complete the task by filling the output JSON below with the correct values. Your answer must strictly respect the typescript typings.\nYou don't have to explain your answer and remember I need valid JSON as output.\n\nI need to generate the following output:\n\n```typescript\nconst output: Output = JSON.parse(<<json_output>>)\n```\n\nYour answer must strictly respect the typescript typings.\nHow would you write <<json_output>> ?\nAnswer with JSON and only JSON. Don't explain your answer, just JSON."
                  }
                ],
                "model": "gpt-3.5-turbo-16k",
                "temperature": 0,
                "signatureVersion": "Jan-2024",
                "signature": "kZs94FSGbM6aX068nPq1vGjF0VW9DOL0Nb9pGjt0v77jVaW3b/w/BTa5sLEsJFII/9PAvH0XmKtvnWMWaXJuLnzR+dQI+PBNC4OrIk9ho8pzY3XOjWSJaazMEky9Uc3QcQVX0BtWtmWV1wIi4X2FNCVs551pWb7O7OQ0ktMp0XQCm/nBHTkHOmGNRv9q+NOj9auXNQfFfIvx/LTmQkHdM3o5vtawH0qpu08Pb83EyGmx+AqxgWdhdoWjWKw4aJj6gKXy4tR2x1+0plfcewXg/hUl54alK4E/dOnWhpIXruoi0XH9/aUno9msW70CZwXMSaK/f8S/yJCjXtpkiO5JGA=="
              }
            },
            {
              "id": "ins-d43ffe108f",
              "category": "Send Messages",
              "type": "content",
              "content": {
                "type": "text",
                "text": {
                  "valueType": "dynamic",
                  "dynamicValue": "Kindly check your provided information\n\nName - @workflow.name_imp\nEmail - @workflow.email_imp\nPhone - @workflow.phone ",
                  "staticValue": ""
                },
                "typing": {
                  "valueType": "static",
                  "staticValue": true
                }
              },
              "nodeId": "nd-6bba528a4e",
              "transitions": []
            }
          ],
          "defaultTransition": {
            "targetNodeId": "nd-3c4a4917c1"
          },
          "id": "nd-6bba528a4e",
          "name": "Standard4",
          "agentConfigOverrides": {
            "PersonalityAgent": {
              "active": false,
              "personality": {
                "valueType": "dynamic",
                "dynamicValue": "You are a helping agent to the users visiting the website and help them with answering all questions in a polite and kind way. Moreover add a smile emoji at the end of a greeting message.",
                "staticValue": ""
              }
            }
          }
        },
        {
          "type": "standard",
          "deletable": true,
          "x": 2040,
          "y": -150,
          "instructions": [
            {
              "id": "ins-d6c1ef9204",
              "category": "Capture Information",
              "type": "capture",
              "entityId": "prompts://SingleChoice/v1",
              "entityName": "Single Choice",
              "kbPriority": {
                "enabled": true,
                "searchScope": "all",
                "kbs": []
              },
              "nodeId": "nd-3c4a4917c1",
              "question": {
                "valueType": "dynamic",
                "dynamicValue": "Is the information I‚Äôve listed above correct?",
                "staticValue": ""
              },
              "validation": {
                "validators": []
              },
              "choice": {
                "options": {
                  "valueType": "static",
                  "staticValue": [
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "yes",
                        "staticValue": null
                      },
                      "value": "yes",
                      "enabled": true
                    },
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "No",
                        "staticValue": null
                      },
                      "value": "No",
                      "enabled": true
                    }
                  ],
                  "dynamicValue": ""
                }
              },
              "retry": {
                "maxRetries": 2,
                "retryMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "dynamic"
                }
              },
              "cancellation": {
                "cancellable": true,
                "confirmCancel": true,
                "confirmCancelMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "handleFailure": false,
              "historyLookback": 0,
              "skipIfAlreadyFilled": false,
              "transitions": [
                {
                  "id": "trs-5c24d257e4",
                  "type": "transition",
                  "label": "yes",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=yes"
                  },
                  "destination": {
                    "node": "nd-fd5563785b"
                  }
                },
                {
                  "id": "trs-4edd7705c5",
                  "type": "transition",
                  "label": "No",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=No"
                  },
                  "destination": {
                    "node": "nd-c75236b6d2"
                  }
                }
              ],
              "prompt": {
                "messages": [
                  {
                    "role": "system",
                    "content": "You are ExtractGPT and your only goal is to generate useful content in JSON format for developers to parse and use. You don't know any other language than JSON."
                  },
                  {
                    "role": "user",
                    "content": "```typescript\n/** The user answer to the question \"Which one would you like? Choices: [ 1) Red Apple, 2) Yellow Apple, 3) Dark Banana ]\" */\ninterface Output = { choice: {{CHOICES_TYPINGS}} }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\nagent: Which one would you like? Choices: [ 1) Red Apple, 2) Yellow Apple, 3) Dark Banana ]\nuser: I will go with the second one please\n\"\"\""
                  },
                  {
                    "role": "assistant",
                    "content": "{\"choice\":\"Yellow Apple\"}"
                  },
                  {
                    "role": "user",
                    "content": "\nNow, forget about the previous transcripts. These were just examples, don't consider those as valid transcripts for this new task.\n\n###\n\nThe current Date is {{CURRENT_DATE_TIME}}.\n\nAt this point of the conversation, I need require the user to fill the output in following JSON output to complete the task.\nIf more than one property, try to extract each of them the best you can.\n\n```typescript\n/** The user answer to the question \"{{QUESTION}}\" */\ninterface Output = { choice: {{CHOICES_TYPINGS}} }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\n{{TRANSCRIPT}}\n\"\"\"\n\nIn the last user message, here are the entities found:\n\"\"\"\nENTITIES_IDENTIFIED\n\"\"\"\n\nI need you to extract from the conversation transcript above the values the user has provided.\nIf the user has not provided the information I need, I need you to set the value of the missing answer properties to null.\nHave some tolerance to typos and variations in how the user selects from the possible values.\n\n\n\nNow, please reply to me with the above JSON output and nothing but JSON.\nYou should not explain your answer and should not talk back to me. Just JSON."
                  }
                ],
                "model": "gpt-3.5-turbo",
                "temperature": 0,
                "signatureVersion": "Jan-2024",
                "signature": "bVu49Pre5q6DHlBFHgwm9WRpKblGPBZEVz9lE1T/kSknjafz8d4zyUGOUmre70ijj2brtSymiTuHw41rgUeoCl/HXkA3kpomvC1RU1QBili6tzgAvH+4CC1PGSL/kP+71QgVkqv73DXrN1UAAH60wru/Oc8nuHvtTKxeoghxZzkmwKpFWq9L8Appklcjf5Pr+4N2Q9JQtxsr4D2+SSc7cCBec71TQVpOxhmPHfxaaKfgzGV4PZbUFI0JZEkmMppHHz+6iTlkoeWG45ukpCwCw7ppjnps4TYI/bR2gWVOyN9J3mVYmZoH7pNY7UWjd/mB+HjubAfZAeNF7FXvVKzcrA=="
              }
            }
          ],
          "defaultTransition": {
            "targetNodeId": null
          },
          "id": "nd-3c4a4917c1",
          "name": "Standard5",
          "agentConfigOverrides": {
            "PersonalityAgent": {
              "active": false,
              "personality": {
                "valueType": "dynamic",
                "dynamicValue": "You are a helping agent to the users visiting the website and help them with answering all questions in a polite and kind way. Moreover add a smile emoji at the end of a greeting message.",
                "staticValue": ""
              }
            }
          }
        },
        {
          "type": "standard",
          "deletable": true,
          "x": 1500,
          "y": 210,
          "instructions": [
            {
              "id": "ins-61bd211ce5",
              "type": "action",
              "code": "const webhookUrl = \"https://hooks.zapier.com/hooks/catch/19262308/231rdab/\"\r\nconst payload = {\r\n    name: workflow.name_imp,\r\n    email: workflow.email_imp,\r\n    phone: workflow.phone\r\n}\r\ntry{\r\n  const response = await axios.post(webhookUrl, payload)\r\n  console.log(response.data)\r\n}catch (error) {\r\n  console.log(\"failed\")\r\n}\r\n\r\n\r\n",
              "origin": "builtin",
              "category": "Execute",
              "nodeId": "nd-fd5563785b",
              "transpiledCode": "var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nasync function __ROOT__() {\n  const webhookUrl = \"https://hooks.zapier.com/hooks/catch/19262308/231rdab/\";\n  const payload = {\n    name: workflow.name_imp,\n    email: workflow.email_imp,\n    phone: workflow.phone\n  };\n  try {\n    const response = await axios.post(webhookUrl, payload);\n    console.log(response.data);\n  } catch (error) {\n    console.log(\"failed\");\n  }\n  ;\n}\n__name(__ROOT__, \"__ROOT__\");\n; return await __ROOT__();",
              "transitions": []
            },
            {
              "id": "ins-f6173b516a",
              "category": "Send Messages",
              "type": "content",
              "content": {
                "type": "text",
                "text": {
                  "valueType": "dynamic",
                  "dynamicValue": "Our team will be in touch with you shortly. Thank you for your patience.",
                  "staticValue": ""
                },
                "typing": {
                  "valueType": "static",
                  "staticValue": true
                }
              },
              "nodeId": "nd-fd5563785b",
              "transitions": []
            },
            {
              "id": "ins-e06f162229",
              "category": "Capture Information",
              "type": "capture",
              "entityId": "prompts://RawInput/v1",
              "entityName": "Raw Input",
              "kbPriority": {
                "enabled": true,
                "searchScope": "all",
                "kbs": []
              },
              "nodeId": "nd-fd5563785b",
              "question": {
                "staticValue": "",
                "dynamicValue": "",
                "valueType": "dynamic"
              },
              "validation": {
                "validators": []
              },
              "choice": {
                "options": {
                  "staticValue": [],
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "retry": {
                "maxRetries": 2,
                "retryMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "dynamic"
                }
              },
              "cancellation": {
                "cancellable": true,
                "confirmCancel": true,
                "confirmCancelMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "handleFailure": false,
              "historyLookback": 0,
              "skipIfAlreadyFilled": false,
              "transitions": [],
              "prompt": {
                "messages": [
                  {
                    "role": "system",
                    "content": "You are ExtractGPT and your only goal is to generate useful content in JSON format for developers to parse and use. You don't know any other language than JSON."
                  },
                  {
                    "role": "user",
                    "content": "```typescript\n/** The user answer to the question \"undefined\" */\ninterface Output = { value: any }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\nagent: undefined\nuser: undefined\n\"\"\""
                  },
                  {
                    "role": "assistant",
                    "content": "{}"
                  },
                  {
                    "role": "user",
                    "content": "\nNow, forget about the previous transcripts. These were just examples, don't consider those as valid transcripts for this new task.\n\n###\n\nThe current Date is {{CURRENT_DATE_TIME}}.\n\nAt this point of the conversation, I need require the user to fill the output in following JSON output to complete the task.\nIf more than one property, try to extract each of them the best you can.\n\n```typescript\n/** The user answer to the question \"{{QUESTION}}\" */\ninterface Output = { value: any }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\n{{TRANSCRIPT}}\n\"\"\"\n\nIn the last user message, here are the entities found:\n\"\"\"\nENTITIES_IDENTIFIED\n\"\"\"\n\nI need you to extract from the conversation transcript above the values the user has provided.\nIf the user has not provided the information I need, I need you to set the value of the missing answer properties to null.\nHave some tolerance to typos and variations in how the user selects from the possible values.\n\n\n\nNow, please reply to me with the above JSON output and nothing but JSON.\nYou should not explain your answer and should not talk back to me. Just JSON."
                  }
                ],
                "model": "gpt-3.5-turbo",
                "temperature": 0,
                "signatureVersion": "Jan-2024",
                "signature": "wsDIMaSsJ1YTaWLaNEaV5IgB+C2qyh801nUa4CdCsmubxvThog1rJ7tYXwHKDnA4cpOm6gnznXN6AdKJSoh/tbRxO1abxj04bRbCn9y7BZ8i3qZQl1Le5PIaAmfampxeHFl8IasZNZYi5uWVQnd1IPS3iFv6wYhBGa/EPlz+AagSKdqmn11u/DSAfrYixnA2rW+XEORrVeVMt1P8zFU7ssoTSSNt7LZh1xmH0amoWFad2vSDxu/2eU55NZSGFlB8a1soPEGYq83QN6mHXldjsO1mEV7cHWsSBZPTXG37GipXEbYKe/9sQNwg6mpBLIuvbliiJ9DvjkkSyXQVkVhTyg=="
              }
            },
            {
              "id": "ins-2ae5ffc7bd",
              "type": "transition",
              "condition": {
                "type": "intent",
                "payload": {
                  "type": "library",
                  "name": "",
                  "intent": {
                    "id": "int-a9dd1afd22",
                    "name": "talk_to_agent",
                    "utterances_with_slots": [
                      "tÔªøalk to human",
                      "sÔªøpeak to human",
                      "IÔªø want to talk to an agent",
                      "hÔªøuman now",
                      "hÔªøuman please",
                      "IÔªø want to talk to real person now",
                      "tÔªøalk to a person",
                      "cÔªøonnect to an agent"
                    ]
                  }
                }
              },
              "category": "Flow Logic",
              "nodeId": "nd-fd5563785b",
              "generative": null,
              "label": "Intent is : talk_to_agent",
              "description": "",
              "destination": {
                "node": "nd-13c09e08c1"
              },
              "transitions": []
            }
          ],
          "defaultTransition": {
            "targetNodeId": null
          },
          "id": "nd-fd5563785b",
          "name": "Standard6",
          "agentConfigOverrides": {
            "PersonalityAgent": {
              "active": false,
              "personality": {
                "valueType": "dynamic",
                "dynamicValue": "You are a helping agent to the users visiting the website and help them with answering all questions in a polite and kind way. Moreover add a smile emoji at the end of a greeting message.",
                "staticValue": ""
              }
            }
          }
        },
        {
          "type": "standard",
          "deletable": true,
          "x": 1890,
          "y": 270,
          "instructions": [
            {
              "id": "ins-98715dc4bb",
              "type": "skill",
              "name": "Connect to an agent",
              "flowId": "wf-55f9efcb4a",
              "exitNodes": [
                "nd-855e61f43f"
              ],
              "transitions": [
                {
                  "id": "trs-52c2327ac1",
                  "type": "transition",
                  "label": "Exit",
                  "condition": {
                    "type": "expression",
                    "payload": "lastNode=nd-855e61f43f"
                  },
                  "destination": {
                    "node": "nd-48fee97e48"
                  },
                  "generative": {
                    "label": "Exit",
                    "properties": {
                      "label": true,
                      "condition": true
                    },
                    "suggestion": {
                      "label": "Exit",
                      "condition": "lastNode=nd-855e61f43f"
                    }
                  }
                }
              ],
              "category": "Flow Logic",
              "nodeId": "nd-13c09e08c1"
            }
          ],
          "defaultTransition": {
            "targetNodeId": null
          },
          "id": "nd-13c09e08c1",
          "name": "Standard7",
          "agentConfigOverrides": {
            "PersonalityAgent": {
              "active": false,
              "personality": {
                "valueType": "dynamic",
                "dynamicValue": "You are a helping agent to the users visiting the website and help them with answering all questions in a polite and kind way. Moreover add a smile emoji at the end of a greeting message.",
                "staticValue": ""
              }
            }
          }
        },
        {
          "type": "standard",
          "deletable": true,
          "x": 1995,
          "y": -405,
          "instructions": [
            {
              "id": "ins-b56af75d5f",
              "category": "Send Messages",
              "type": "content",
              "content": {
                "type": "text",
                "text": {
                  "valueType": "dynamic",
                  "dynamicValue": "okay please correct and try again",
                  "staticValue": ""
                },
                "typing": {
                  "valueType": "static",
                  "staticValue": true
                }
              },
              "nodeId": "nd-c75236b6d2",
              "transitions": []
            }
          ],
          "defaultTransition": {
            "targetNodeId": "nd-6bba528a4e"
          },
          "id": "nd-c75236b6d2",
          "name": "Standard8",
          "agentConfigOverrides": {
            "PersonalityAgent": {
              "active": false,
              "personality": {
                "valueType": "dynamic",
                "dynamicValue": "You are a helping agent to the users visiting the website and help them with answering all questions in a polite and kind way. Moreover add a smile emoji at the end of a greeting message.",
                "staticValue": ""
              }
            }
          }
        },
        {
          "type": "standard",
          "deletable": true,
          "x": 795,
          "y": 345,
          "instructions": [
            {
              "id": "ins-573c923b9f",
              "category": "Send Messages",
              "type": "content",
              "content": {
                "type": "text",
                "text": {
                  "valueType": "dynamic",
                  "dynamicValue": "I apologize, I did not get your question, could you rephrase or contact our team at info@matacs.com",
                  "staticValue": ""
                },
                "typing": {
                  "valueType": "static",
                  "staticValue": true
                }
              },
              "nodeId": "nd-80cceb13f4",
              "transitions": []
            }
          ],
          "defaultTransition": {
            "targetNodeId": "nd-b041a06ac7"
          },
          "id": "nd-80cceb13f4",
          "name": "Standard9",
          "agentConfigOverrides": {
            "PersonalityAgent": {
              "active": false,
              "personality": {
                "valueType": "dynamic",
                "dynamicValue": "You are a helping agent to the users visiting the website and help them with answering all questions in a polite and kind way. Moreover add a smile emoji at the end of a greeting message.",
                "staticValue": ""
              }
            }
          }
        },
        {
          "type": "standard",
          "deletable": true,
          "x": 1140,
          "y": 615,
          "instructions": [
            {
              "id": "ins-c9bfaf016c",
              "category": "Capture Information",
              "type": "capture",
              "entityId": "prompts://MultiChoice/v1",
              "entityName": "Multiple Choice",
              "kbPriority": {
                "enabled": true,
                "searchScope": "all",
                "kbs": []
              },
              "nodeId": "nd-b041a06ac7",
              "question": {
                "valueType": "dynamic",
                "dynamicValue": "Still need assistance ",
                "staticValue": ""
              },
              "validation": {
                "validators": []
              },
              "choice": {
                "options": {
                  "valueType": "static",
                  "staticValue": [
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "Talk to an agent",
                        "staticValue": null
                      },
                      "value": "Talk to an agent",
                      "enabled": true
                    },
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "yes, talk to me ",
                        "staticValue": null
                      },
                      "value": "yes, talk to me ",
                      "enabled": true
                    },
                    {
                      "label": {
                        "valueType": "dynamic",
                        "dynamicValue": "No, I don't have any questions",
                        "staticValue": null
                      },
                      "value": "No, I don't have any questions",
                      "enabled": true
                    }
                  ],
                  "dynamicValue": ""
                }
              },
              "retry": {
                "maxRetries": 2,
                "retryMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "dynamic"
                }
              },
              "cancellation": {
                "cancellable": true,
                "confirmCancel": true,
                "confirmCancelMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "handleFailure": false,
              "historyLookback": 0,
              "skipIfAlreadyFilled": false,
              "transitions": [
                {
                  "id": "trs-47fa0233e4",
                  "type": "transition",
                  "label": "Talk to an agent",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=Talk to an agent"
                  },
                  "destination": {
                    "node": "nd-5d1fc0e839"
                  }
                },
                {
                  "id": "trs-c0556a3355",
                  "type": "transition",
                  "label": "yes, talk to me ",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=yes, talk to me "
                  },
                  "destination": {
                    "node": "nd-81b96d7a47"
                  }
                },
                {
                  "id": "trs-aa3f2dd32f",
                  "type": "transition",
                  "label": "No, I don't have any questions",
                  "condition": {
                    "type": "expression",
                    "payload": "__CHOICE=No, I don't have any questions"
                  },
                  "destination": {
                    "node": "nd-fc00adc4c4"
                  }
                }
              ],
              "prompt": {
                "messages": [
                  {
                    "role": "system",
                    "content": "You are ExtractGPT and your only goal is to generate useful content in JSON format for developers to parse and use. You don't know any other language than JSON."
                  },
                  {
                    "role": "user",
                    "content": "```typescript\n/** The user answer to the question \"Which one would you like? Choices: [ 1) Red Apple, 2) Yellow Apple, 3) Dark Banana ]\" */\ninterface Output = { choices: Array<{{CHOICES_TYPINGS}}> }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\nagent: Which one would you like? Choices: [ 1) Red Apple, 2) Yellow Apple, 3) Dark Banana ]\nuser: I will go with the second one and the banana please\n\"\"\""
                  },
                  {
                    "role": "assistant",
                    "content": "{\"choices\":[\"Yellow Apple\",\"Dark Banana\"]}"
                  },
                  {
                    "role": "user",
                    "content": "\nNow, forget about the previous transcripts. These were just examples, don't consider those as valid transcripts for this new task.\n\n###\n\nThe current Date is {{CURRENT_DATE_TIME}}.\n\nAt this point of the conversation, I need require the user to fill the output in following JSON output to complete the task.\nIf more than one property, try to extract each of them the best you can.\n\n```typescript\n/** The user answer to the question \"{{QUESTION}}\" */\ninterface Output = { choices: Array<{{CHOICES_TYPINGS}}> }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\n{{TRANSCRIPT}}\n\"\"\"\n\nIn the last user message, here are the entities found:\n\"\"\"\nENTITIES_IDENTIFIED\n\"\"\"\n\nI need you to extract from the conversation transcript above the values the user has provided.\nIf the user has not provided the information I need, I need you to set the value of the missing answer properties to null.\nHave some tolerance to typos and variations in how the user selects from the possible values.\n\n\n\nNow, please reply to me with the above JSON output and nothing but JSON.\nYou should not explain your answer and should not talk back to me. Just JSON."
                  }
                ],
                "model": "gpt-3.5-turbo",
                "temperature": 0,
                "signatureVersion": "Jan-2024",
                "signature": "hSbVLRZ/6JSGgHAn3FVLlszKfXTtP97MNLVVqMWLOPwPrUBMSYw/wsSE07vPspugeNnqlR+InKv9oKpSS2q6KpT13ez6brbWRc5hMRlSiwgRMrd4AYd72ToN5Jhw574axVG08+xYj3MbKuAcLAmaKKwiJeeqv1iOdBTGf/3zbzxRT9bSC0ohAR74sqC9n5OYxjrd2LtlorBuyBQRywJeukRPk8Q8/PHadU9SFXgfcNxrx8ZZBKKLD9XjMcofihdS3fOaMaDHXJJkhBB73Audmvg8Qa6SbOIWihqGJ+Xa4vLKdtlR5eQxyK0xLZDTNbaiqDzgVb1ZDJXizNB8RYwU9g=="
              }
            }
          ],
          "defaultTransition": {
            "targetNodeId": null
          },
          "id": "nd-b041a06ac7",
          "name": "Standard10",
          "agentConfigOverrides": {
            "PersonalityAgent": {
              "active": false,
              "personality": {
                "valueType": "dynamic",
                "dynamicValue": "You are a helping agent to the users visiting the website and help them with answering all questions in a polite and kind way. Moreover add a smile emoji at the end of a greeting message.",
                "staticValue": ""
              }
            }
          }
        },
        {
          "type": "standard",
          "deletable": true,
          "x": 1530,
          "y": 600,
          "instructions": [
            {
              "id": "ins-63f575b55b",
              "type": "skill",
              "name": "Connect to an agent",
              "flowId": "wf-55f9efcb4a",
              "exitNodes": [
                "nd-855e61f43f"
              ],
              "transitions": [
                {
                  "id": "trs-97a553d521",
                  "type": "transition",
                  "label": "Exit",
                  "condition": {
                    "type": "expression",
                    "payload": "lastNode=nd-855e61f43f"
                  },
                  "destination": {},
                  "generative": {
                    "label": "Exit",
                    "properties": {
                      "label": true,
                      "condition": true
                    },
                    "suggestion": {
                      "label": "Exit",
                      "condition": "lastNode=nd-855e61f43f"
                    }
                  }
                }
              ],
              "category": "Flow Logic",
              "nodeId": "nd-5d1fc0e839"
            }
          ],
          "defaultTransition": {
            "targetNodeId": null
          },
          "id": "nd-5d1fc0e839",
          "name": "Standard11",
          "agentConfigOverrides": {
            "PersonalityAgent": {
              "active": false,
              "personality": {
                "valueType": "dynamic",
                "dynamicValue": "You are a helping agent to the users visiting the website and help them with answering all questions in a polite and kind way. Moreover add a smile emoji at the end of a greeting message.",
                "staticValue": ""
              }
            }
          }
        },
        {
          "type": "standard",
          "deletable": true,
          "x": 1500,
          "y": 840,
          "instructions": [
            {
              "id": "ins-b2d8d7a14c",
              "category": "Capture Information",
              "type": "capture",
              "entityId": "prompts://RawInput/v1",
              "entityName": "Raw Input",
              "kbPriority": {
                "enabled": true,
                "searchScope": "all",
                "kbs": []
              },
              "nodeId": "nd-81b96d7a47",
              "variableId": "var-63cdef86c2",
              "question": {
                "valueType": "dynamic",
                "dynamicValue": "Ask me your query",
                "staticValue": ""
              },
              "validation": {
                "validators": []
              },
              "choice": {
                "options": {
                  "staticValue": [],
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "retry": {
                "maxRetries": 2,
                "retryMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "dynamic"
                }
              },
              "cancellation": {
                "cancellable": true,
                "confirmCancel": true,
                "confirmCancelMessage": {
                  "staticValue": "",
                  "dynamicValue": "",
                  "valueType": "static"
                }
              },
              "handleFailure": false,
              "historyLookback": 0,
              "skipIfAlreadyFilled": false,
              "transitions": [],
              "prompt": {
                "messages": [
                  {
                    "role": "system",
                    "content": "You are ExtractGPT and your only goal is to generate useful content in JSON format for developers to parse and use. You don't know any other language than JSON."
                  },
                  {
                    "role": "user",
                    "content": "```typescript\n/** The user answer to the question \"undefined\" */\ninterface Output = { value: any }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\nagent: undefined\nuser: undefined\n\"\"\""
                  },
                  {
                    "role": "assistant",
                    "content": "{}"
                  },
                  {
                    "role": "user",
                    "content": "\nNow, forget about the previous transcripts. These were just examples, don't consider those as valid transcripts for this new task.\n\n###\n\nThe current Date is {{CURRENT_DATE_TIME}}.\n\nAt this point of the conversation, I need require the user to fill the output in following JSON output to complete the task.\nIf more than one property, try to extract each of them the best you can.\n\n```typescript\n/** The user answer to the question \"{{QUESTION}}\" */\ninterface Output = { value: any }\n```\n\nHere is a conversation between me and a user. Transcript:\n\"\"\"\n(...)\n{{TRANSCRIPT}}\n\"\"\"\n\nIn the last user message, here are the entities found:\n\"\"\"\nENTITIES_IDENTIFIED\n\"\"\"\n\nI need you to extract from the conversation transcript above the values the user has provided.\nIf the user has not provided the information I need, I need you to set the value of the missing answer properties to null.\nHave some tolerance to typos and variations in how the user selects from the possible values.\n\n\n\nNow, please reply to me with the above JSON output and nothing but JSON.\nYou should not explain your answer and should not talk back to me. Just JSON."
                  }
                ],
                "model": "gpt-3.5-turbo",
                "temperature": 0,
                "signatureVersion": "Jan-2024",
                "signature": "wsDIMaSsJ1YTaWLaNEaV5IgB+C2qyh801nUa4CdCsmubxvThog1rJ7tYXwHKDnA4cpOm6gnznXN6AdKJSoh/tbRxO1abxj04bRbCn9y7BZ8i3qZQl1Le5PIaAmfampxeHFl8IasZNZYi5uWVQnd1IPS3iFv6wYhBGa/EPlz+AagSKdqmn11u/DSAfrYixnA2rW+XEORrVeVMt1P8zFU7ssoTSSNt7LZh1xmH0amoWFad2vSDxu/2eU55NZSGFlB8a1soPEGYq83QN6mHXldjsO1mEV7cHWsSBZPTXG37GipXEbYKe/9sQNwg6mpBLIuvbliiJ9DvjkkSyXQVkVhTyg=="
              }
            },
            {
              "id": "ins-8f78cc8fdd",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "{{turn.KnowledgeAgent.responded}}"
              },
              "label": "",
              "generative": {
                "label": "",
                "suggestion": {
                  "condition": "true"
                },
                "properties": {
                  "condition": false
                }
              },
              "category": "Flow Logic",
              "nodeId": "nd-81b96d7a47",
              "description": "",
              "destination": {
                "node": "nd-b041a06ac7"
              },
              "transitions": []
            },
            {
              "id": "ins-4f692f69eb",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "{{!turn.KnowledgeAgent.responded}}"
              },
              "label": "",
              "generative": {
                "label": "",
                "suggestion": {
                  "condition": "true"
                },
                "properties": {
                  "condition": true
                }
              },
              "category": "Flow Logic",
              "nodeId": "nd-81b96d7a47",
              "description": "",
              "destination": {
                "node": "nd-80cceb13f4"
              },
              "transitions": []
            }
          ],
          "defaultTransition": {
            "targetNodeId": null
          },
          "id": "nd-81b96d7a47",
          "name": "Standard12",
          "agentConfigOverrides": {
            "PersonalityAgent": {
              "active": false,
              "personality": {
                "valueType": "dynamic",
                "dynamicValue": "You are a helping agent to the users visiting the website and help them with answering all questions in a polite and kind way. Moreover add a smile emoji at the end of a greeting message.",
                "staticValue": ""
              }
            }
          }
        },
        {
          "type": "standard",
          "deletable": true,
          "x": 1950,
          "y": 705,
          "instructions": [
            {
              "id": "ins-1eea2e000a",
              "category": "Send Messages",
              "type": "content",
              "content": {
                "type": "text",
                "text": {
                  "valueType": "dynamic",
                  "dynamicValue": "okay, I hope that i will see you again soon! Take Care",
                  "staticValue": ""
                },
                "typing": {
                  "valueType": "static",
                  "staticValue": true
                }
              },
              "nodeId": "nd-fc00adc4c4",
              "transitions": []
            }
          ],
          "defaultTransition": {
            "targetNodeId": null
          },
          "id": "nd-fc00adc4c4",
          "name": "Standard13",
          "agentConfigOverrides": {
            "PersonalityAgent": {
              "active": true,
              "personality": {
                "valueType": "dynamic",
                "dynamicValue": "You are a helping agent to the users visiting the website and help them with answering all questions in a polite and kind way. Moreover add a smile emoji at the end of a greeting message.",
                "staticValue": ""
              }
            }
          }
        }
      ],
      "parentFolder": "root"
    }
  ],
  "intents": [
    {
      "id": "int-18ce260fad",
      "name": "product_queries",
      "utterances_with_slots": [
        "Can you explain more about your cloud computing solutions?",
        "What RPA tools do you recommend?",
        "How can I implement RPA in my company?",
        "What are the benefits of using your robotics services?"
      ]
    },
    {
      "id": "int-2f95912934",
      "name": "support_help",
      "utterances_with_slots": [
        "How can I get technical support?",
        "Do you have a help center or FAQ?",
        "How do I book a consultation?",
        "Can I speak to a live agent?"
      ]
    },
    {
      "id": "int-572b69b703",
      "name": "general_info",
      "utterances_with_slots": [
        "What does your company do?",
        "Can you tell me about your services?",
        "What are your business hours?",
        "Where are you located?",
        "How can I contact customer support?"
      ]
    },
    {
      "id": "int-6e2599fa93",
      "name": "Questions",
      "utterances_with_slots": [
        "BÔªørief overview of Matacs",
        "WÔªøhat is Matacs",
        "TÔªøell me about Matacs",
        "wÔªøhere is Matacs"
      ]
    },
    {
      "id": "int-a9dd1afd22",
      "name": "talk_to_agent",
      "utterances_with_slots": [
        "tÔªøalk to human",
        "sÔªøpeak to human",
        "IÔªø want to talk to an agent",
        "hÔªøuman now",
        "hÔªøuman please",
        "IÔªø want to talk to real person now",
        "tÔªøalk to a person",
        "cÔªøonnect to an agent"
      ]
    },
    {
      "id": "int-b102bdab07",
      "name": "service_info",
      "utterances_with_slots": [
        "What kind of robotics services do you offer?",
        "Do you provide cloud services?",
        "How can RPA help my business?",
        "Can you explain more about your RPA solutions?",
        "What industries do you serve with your robotics services?"
      ]
    },
    {
      "id": "int-b2d1546233",
      "name": "Services",
      "utterances_with_slots": [
        "SÔªøervices",
        "WÔªøhat are the services i can expect from you",
        "pÔªørojects",
        "RÔªøPA",
        "CÔªøloud",
        "WÔªøeb Integration"
      ]
    },
    {
      "id": "int-cancel",
      "name": "cancel",
      "utterances_with_slots": [
        "cancel",
        "abort",
        "abandon",
        "i want to cancel",
        "forget about this",
        "leave",
        "stop",
        "quit",
        "you know what, nevermind",
        "forget it"
      ]
    },
    {
      "id": "int-no",
      "name": "no",
      "utterances_with_slots": [
        "no",
        "i don't want to",
        "absolutely not",
        "nah",
        "nope",
        "not really",
        "not sure",
        "no thanks"
      ]
    },
    {
      "id": "int-yes",
      "name": "yes",
      "utterances_with_slots": [
        "yes",
        "yeah",
        "absolutely",
        "i'd like to",
        "sure ",
        "hmm probably",
        "yup",
        "ok"
      ]
    }
  ],
  "list_entities": [],
  "pattern_entities": [],
  "actions": [],
  "hooks": [],
  "qnas": [],
  "knowledge_base": [
    {
      "dataSources": [
        {
          "created_on": 1719281765939,
          "data": {
            "indexingJobs": [
              "f0f1b32b-a6a6-4b94-a6ec-074b8a8d0732-01J16JVJS58QT06H1HYRR32JV2"
            ],
            "pages": []
          },
          "disabled": false,
          "id": "ds-85a85890ec",
          "title": "matacs.com",
          "type": "web-page"
        }
      ],
      "description": "This is about New KB1",
      "id": "kb-2f0a7ea639",
      "name": "Default Knowledge Base",
      "parentFolder": "root"
    }
  ],
  "folders": [],
  "agents": {
    "SummaryAgent": {
      "enabled": true,
      "config": {
        "summaryMaxTokens": 100,
        "transcriptMaxLines": 10
      }
    },
    "TranslatorAgent": {
      "enabled": true,
      "config": {
        "detectLanguage": true,
        "detectContinuously": true
      }
    },
    "KnowledgeAgent": {
      "enabled": true,
      "config": {
        "answerManually": false,
        "context": "Summary of the conversation:\n\"\"\"\n{{conversation.SummaryAgent.summary}}\n\"\"\"\n\nTranscript:\n\"\"\"\n{{conversation.SummaryAgent.transcript}}\n\"\"\"",
        "bestModel": "gpt-4-turbo",
        "strategy": "hybrid",
        "chunks": 50
      }
    },
    "PersonalityAgent": {
      "enabled": true,
      "config": {
        "active": true,
        "personality": {
          "valueType": "dynamic",
          "dynamicValue": "You are a helping agent to the users visiting the website and help them with answering all questions in a polite and kind way. Moreover add a smile emoji at the end of a greeting message.",
          "staticValue": ""
        }
      }
    },
    "HITLAgent": {
      "enabled": true,
      "config": {
        "hitlIntegration": "zendesk",
        "cancelIntent": "int-cancel",
        "onWaitingForAgentAction": "  sendMessage('Waiting for an agent')",
        "onAgentAssignedAction": "  sendMessage('You are speaking with ' + agentName + ' (' + agentEmail + ')')",
        "onInteractionClosedAction": "  sendMessage('Interaction closed by agent')",
        "onTimedOutWaitingAgentAction": "  sendMessage('Timed out waiting for an agent')",
        "onUserCancelledAction": "  sendMessage('You have cancelled the escalation')",
        "queueTimeoutDelay": 10,
        "transcriptContext": "Channel: {{event.integration}}/{{event.channel}}\n---\nSummary:\n{{conversation.SummaryAgent.summary}}\n---\nTranscript:\n{{conversation.SummaryAgent.transcript}}"
      }
    },
    "VisionAgent": {
      "enabled": true,
      "config": {
        "extractionEnabled": true
      }
    }
  },
  "tables": {},
  "schemas": [],
  "versions": []
}